/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
sap.ui.define([],function(){"use strict";var e=function(e){"use strict";const t="150";const n={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};const i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};const r=0;const s=1;const a=2;const o=3;const l=0;const c=1;const u=2;const h=3;const d=0;const f=1;const p=2;const m=2;const g=0;const _=1;const x=2;const y=3;const v=4;const M=5;const b=100;const S=101;const T=102;const w=103;const E=104;const A=200;const R=201;const C=202;const L=203;const P=204;const I=205;const D=206;const N=207;const O=208;const U=209;const F=210;const B=0;const z=1;const G=2;const k=3;const H=4;const V=5;const W=6;const X=7;const j=0;const q=1;const Y=2;const Z=0;const J=1;const K=2;const $=3;const Q=4;const ee=5;const te=300;const ne=301;const ie=302;const re=303;const se=304;const ae=306;const oe=1e3;const le=1001;const ce=1002;const ue=1003;const he=1004;const de=1004;const fe=1005;const pe=1005;const me=1006;const ge=1007;const _e=1007;const xe=1008;const ye=1008;const ve=1009;const Me=1010;const be=1011;const Se=1012;const Te=1013;const we=1014;const Ee=1015;const Ae=1016;const Re=1017;const Ce=1018;const Le=1020;const Pe=1021;const Ie=1023;const De=1024;const Ne=1025;const Oe=1026;const Ue=1027;const Fe=1028;const Be=1029;const ze=1030;const Ge=1031;const ke=1033;const He=33776;const Ve=33777;const We=33778;const Xe=33779;const je=35840;const qe=35841;const Ye=35842;const Ze=35843;const Je=36196;const Ke=37492;const $e=37496;const Qe=37808;const et=37809;const tt=37810;const nt=37811;const it=37812;const rt=37813;const st=37814;const at=37815;const ot=37816;const lt=37817;const ct=37818;const ut=37819;const ht=37820;const dt=37821;const ft=36492;const pt=36283;const mt=36284;const gt=36285;const _t=36286;const xt=2200;const yt=2201;const vt=2202;const Mt=2300;const bt=2301;const St=2302;const Tt=2400;const wt=2401;const Et=2402;const At=2500;const Rt=2501;const Ct=0;const Lt=1;const Pt=2;const It=3e3;const Dt=3001;const Nt=3200;const Ot=3201;const Ut=0;const Ft=1;const Bt="";const zt="srgb";const Gt="srgb-linear";const kt="display-p3";const Ht=0;const Vt=7680;const Wt=7681;const Xt=7682;const jt=7683;const qt=34055;const Yt=34056;const Zt=5386;const Jt=512;const Kt=513;const $t=514;const Qt=515;const en=516;const tn=517;const nn=518;const rn=519;const sn=35044;const an=35048;const on=35040;const ln=35045;const cn=35049;const un=35041;const hn=35046;const dn=35050;const fn=35042;const pn="100";const mn="300 es";const gn=1035;class _n{addEventListener(e,t){if(this._listeners===undefined)this._listeners={};const n=this._listeners;if(n[e]===undefined){n[e]=[]}if(n[e].indexOf(t)===-1){n[e].push(t)}}hasEventListener(e,t){if(this._listeners===undefined)return false;const n=this._listeners;return n[e]!==undefined&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===undefined)return;const n=this._listeners;const i=n[e];if(i!==undefined){const e=i.indexOf(t);if(e!==-1){i.splice(e,1)}}}dispatchEvent(e){if(this._listeners===undefined)return;const t=this._listeners;const n=t[e.type];if(n!==undefined){e.target=this;const t=n.slice(0);for(let n=0,i=t.length;n<i;n++){t[n].call(this,e)}e.target=null}}}const xn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let yn=1234567;const vn=Math.PI/180;const Mn=180/Math.PI;function bn(){const e=Math.random()*4294967295|0;const t=Math.random()*4294967295|0;const n=Math.random()*4294967295|0;const i=Math.random()*4294967295|0;const r=xn[e&255]+xn[e>>8&255]+xn[e>>16&255]+xn[e>>24&255]+"-"+xn[t&255]+xn[t>>8&255]+"-"+xn[t>>16&15|64]+xn[t>>24&255]+"-"+xn[n&63|128]+xn[n>>8&255]+"-"+xn[n>>16&255]+xn[n>>24&255]+xn[i&255]+xn[i>>8&255]+xn[i>>16&255]+xn[i>>24&255];return r.toLowerCase()}function Sn(e,t,n){return Math.max(t,Math.min(n,e))}function Tn(e,t){return(e%t+t)%t}function wn(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)}function En(e,t,n){if(e!==t){return(n-e)/(t-e)}else{return 0}}function An(e,t,n){return(1-n)*e+n*t}function Rn(e,t,n,i){return An(e,t,1-Math.exp(-n*i))}function Cn(e,t=1){return t-Math.abs(Tn(e,t*2)-t)}function Ln(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*(3-2*e)}function Pn(e,t,n){if(e<=t)return 0;if(e>=n)return 1;e=(e-t)/(n-t);return e*e*e*(e*(e*6-15)+10)}function In(e,t){return e+Math.floor(Math.random()*(t-e+1))}function Dn(e,t){return e+Math.random()*(t-e)}function Nn(e){return e*(.5-Math.random())}function On(e){if(e!==undefined)yn=e;let t=yn+=1831565813;t=Math.imul(t^t>>>15,t|1);t^=t+Math.imul(t^t>>>7,t|61);return((t^t>>>14)>>>0)/4294967296}function Un(e){return e*vn}function Fn(e){return e*Mn}function Bn(e){return(e&e-1)===0&&e!==0}function zn(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Gn(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function kn(e,t,n,i,r){const s=Math.cos;const a=Math.sin;const o=s(n/2);const l=a(n/2);const c=s((t+i)/2);const u=a((t+i)/2);const h=s((t-i)/2);const d=a((t-i)/2);const f=s((i-t)/2);const p=a((i-t)/2);switch(r){case"XYX":e.set(o*u,l*h,l*d,o*c);break;case"YZY":e.set(l*d,o*u,l*h,o*c);break;case"ZXZ":e.set(l*h,l*d,o*u,o*c);break;case"XZX":e.set(o*u,l*p,l*f,o*c);break;case"YXY":e.set(l*f,o*u,l*p,o*c);break;case"ZYZ":e.set(l*p,l*f,o*u,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Hn(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function Vn(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(e*65535);case Uint8Array:return Math.round(e*255);case Int16Array:return Math.round(e*32767);case Int8Array:return Math.round(e*127);default:throw new Error("Invalid component type.")}}const Wn={DEG2RAD:vn,RAD2DEG:Mn,generateUUID:bn,clamp:Sn,euclideanModulo:Tn,mapLinear:wn,inverseLerp:En,lerp:An,damp:Rn,pingpong:Cn,smoothstep:Ln,smootherstep:Pn,randInt:In,randFloat:Dn,randFloatSpread:Nn,seededRandom:On,degToRad:Un,radToDeg:Fn,isPowerOfTwo:Bn,ceilPowerOfTwo:zn,floorPowerOfTwo:Gn,setQuaternionFromProperEuler:kn,normalize:Vn,denormalize:Hn};class Xn{constructor(e=0,t=0){Xn.prototype.isVector2=true;this.x=e;this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){this.x=e;this.y=t;return this}setScalar(e){this.x=e;this.y=e;return this}setX(e){this.x=e;return this}setY(e){this.y=e;return this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){this.x=e.x;this.y=e.y;return this}add(e){this.x+=e.x;this.y+=e.y;return this}addScalar(e){this.x+=e;this.y+=e;return this}addVectors(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this}addScaledVector(e,t){this.x+=e.x*t;this.y+=e.y*t;return this}sub(e){this.x-=e.x;this.y-=e.y;return this}subScalar(e){this.x-=e;this.y-=e;return this}subVectors(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this}multiply(e){this.x*=e.x;this.y*=e.y;return this}multiplyScalar(e){this.x*=e;this.y*=e;return this}divide(e){this.x/=e.x;this.y/=e.y;return this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y;const i=e.elements;this.x=i[0]*t+i[3]*n+i[6];this.y=i[1]*t+i[4]*n+i[7];return this}min(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);return this}max(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);return this}clamp(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));return this}clampScalar(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));return this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this}negate(){this.x=-this.x;this.y=-this.y;return this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this}lerpVectors(e,t,n){this.x=e.x+(t.x-e.x)*n;this.y=e.y+(t.y-e.y)*n;return this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){this.x=e[t];this.y=e[t+1];return this}toArray(e=[],t=0){e[t]=this.x;e[t+1]=this.y;return e}fromBufferAttribute(e,t){this.x=e.getX(t);this.y=e.getY(t);return this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t);const r=this.x-e.x;const s=this.y-e.y;this.x=r*n-s*i+e.x;this.y=r*i+s*n+e.y;return this}random(){this.x=Math.random();this.y=Math.random();return this}*[Symbol.iterator](){yield this.x;yield this.y}}class jn{constructor(){jn.prototype.isMatrix3=true;this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,s,a,o,l){const c=this.elements;c[0]=e;c[1]=i;c[2]=a;c[3]=t;c[4]=r;c[5]=o;c[6]=n;c[7]=s;c[8]=l;return this}identity(){this.set(1,0,0,0,1,0,0,0,1);return this}copy(e){const t=this.elements;const n=e.elements;t[0]=n[0];t[1]=n[1];t[2]=n[2];t[3]=n[3];t[4]=n[4];t[5]=n[5];t[6]=n[6];t[7]=n[7];t[8]=n[8];return this}extractBasis(e,t,n){e.setFromMatrix3Column(this,0);t.setFromMatrix3Column(this,1);n.setFromMatrix3Column(this,2);return this}setFromMatrix4(e){const t=e.elements;this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]);return this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements;const i=t.elements;const r=this.elements;const s=n[0],a=n[3],o=n[6];const l=n[1],c=n[4],u=n[7];const h=n[2],d=n[5],f=n[8];const p=i[0],m=i[3],g=i[6];const _=i[1],x=i[4],y=i[7];const v=i[2],M=i[5],b=i[8];r[0]=s*p+a*_+o*v;r[3]=s*m+a*x+o*M;r[6]=s*g+a*y+o*b;r[1]=l*p+c*_+u*v;r[4]=l*m+c*x+u*M;r[7]=l*g+c*y+u*b;r[2]=h*p+d*_+f*v;r[5]=h*m+d*x+f*M;r[8]=h*g+d*y+f*b;return this}multiplyScalar(e){const t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this}determinant(){const e=this.elements;const t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],c=e[8];return t*s*c-t*a*l-n*r*c+n*a*o+i*r*l-i*s*o}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],c=e[8],u=c*s-a*l,h=a*o-c*r,d=l*r-s*o,f=t*u+n*h+i*d;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/f;e[0]=u*p;e[1]=(i*l-c*n)*p;e[2]=(a*n-i*s)*p;e[3]=h*p;e[4]=(c*t-i*o)*p;e[5]=(i*r-a*t)*p;e[6]=d*p;e[7]=(n*o-l*t)*p;e[8]=(s*t-n*r)*p;return this}transpose(){let e;const t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this}setUvTransform(e,t,n,i,r,s,a){const o=Math.cos(r);const l=Math.sin(r);this.set(n*o,n*l,-n*(o*s+l*a)+s+e,-i*l,i*o,-i*(-l*s+o*a)+a+t,0,0,1);return this}scale(e,t){this.premultiply(qn.makeScale(e,t));return this}rotate(e){this.premultiply(qn.makeRotation(-e));return this}translate(e,t){this.premultiply(qn.makeTranslation(e,t));return this}makeTranslation(e,t){this.set(1,0,e,0,1,t,0,0,1);return this}makeRotation(e){const t=Math.cos(e);const n=Math.sin(e);this.set(t,-n,0,n,t,0,0,0,1);return this}makeScale(e,t){this.set(e,0,0,0,t,0,0,0,1);return this}equals(e){const t=this.elements;const n=e.elements;for(let e=0;e<9;e++){if(t[e]!==n[e])return false}return true}fromArray(e,t=0){for(let n=0;n<9;n++){this.elements[n]=e[n+t]}return this}toArray(e=[],t=0){const n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];return e}clone(){return(new this.constructor).fromArray(this.elements)}}const qn=new jn;function Yn(e){for(let t=e.length-1;t>=0;--t){if(e[t]>=65535)return true}return false}const Zn={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Jn(e,t){return new Zn[e](t)}function Kn(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}class $n{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=true;this._x=e;this._y=t;this._z=n;this._w=i}static slerpFlat(e,t,n,i,r,s,a){let o=n[i+0],l=n[i+1],c=n[i+2],u=n[i+3];const h=r[s+0],d=r[s+1],f=r[s+2],p=r[s+3];if(a===0){e[t+0]=o;e[t+1]=l;e[t+2]=c;e[t+3]=u;return}if(a===1){e[t+0]=h;e[t+1]=d;e[t+2]=f;e[t+3]=p;return}if(u!==p||o!==h||l!==d||c!==f){let e=1-a;const t=o*h+l*d+c*f+u*p,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),s=Math.atan2(r,t*n);e=Math.sin(e*s)/r;a=Math.sin(a*s)/r}const r=a*n;o=o*e+h*r;l=l*e+d*r;c=c*e+f*r;u=u*e+p*r;if(e===1-a){const e=1/Math.sqrt(o*o+l*l+c*c+u*u);o*=e;l*=e;c*=e;u*=e}}e[t]=o;e[t+1]=l;e[t+2]=c;e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,s){const a=n[i];const o=n[i+1];const l=n[i+2];const c=n[i+3];const u=r[s];const h=r[s+1];const d=r[s+2];const f=r[s+3];e[t]=a*f+c*u+o*d-l*h;e[t+1]=o*f+c*h+l*u-a*d;e[t+2]=l*f+c*d+a*h-o*u;e[t+3]=c*f-a*u-o*h-l*d;return e}get x(){return this._x}set x(e){this._x=e;this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e;this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e;this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e;this._onChangeCallback()}set(e,t,n,i){this._x=e;this._y=t;this._z=n;this._w=i;this._onChangeCallback();return this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){this._x=e.x;this._y=e.y;this._z=e.z;this._w=e.w;this._onChangeCallback();return this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,s=e._order;const a=Math.cos;const o=Math.sin;const l=a(n/2);const c=a(i/2);const u=a(r/2);const h=o(n/2);const d=o(i/2);const f=o(r/2);switch(s){case"XYZ":this._x=h*c*u+l*d*f;this._y=l*d*u-h*c*f;this._z=l*c*f+h*d*u;this._w=l*c*u-h*d*f;break;case"YXZ":this._x=h*c*u+l*d*f;this._y=l*d*u-h*c*f;this._z=l*c*f-h*d*u;this._w=l*c*u+h*d*f;break;case"ZXY":this._x=h*c*u-l*d*f;this._y=l*d*u+h*c*f;this._z=l*c*f+h*d*u;this._w=l*c*u-h*d*f;break;case"ZYX":this._x=h*c*u-l*d*f;this._y=l*d*u+h*c*f;this._z=l*c*f-h*d*u;this._w=l*c*u+h*d*f;break;case"YZX":this._x=h*c*u+l*d*f;this._y=l*d*u+h*c*f;this._z=l*c*f-h*d*u;this._w=l*c*u-h*d*f;break;case"XZY":this._x=h*c*u-l*d*f;this._y=l*d*u-h*c*f;this._z=l*c*f+h*d*u;this._w=l*c*u+h*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}if(t!==false)this._onChangeCallback();return this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);this._x=e.x*i;this._y=e.y*i;this._z=e.z*i;this._w=Math.cos(n);this._onChangeCallback();return this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],s=t[1],a=t[5],o=t[9],l=t[2],c=t[6],u=t[10],h=n+a+u;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e;this._x=(c-o)*e;this._y=(r-l)*e;this._z=(s-i)*e}else if(n>a&&n>u){const e=2*Math.sqrt(1+n-a-u);this._w=(c-o)/e;this._x=.25*e;this._y=(i+s)/e;this._z=(r+l)/e}else if(a>u){const e=2*Math.sqrt(1+a-n-u);this._w=(r-l)/e;this._x=(i+s)/e;this._y=.25*e;this._z=(o+c)/e}else{const e=2*Math.sqrt(1+u-n-a);this._w=(s-i)/e;this._x=(r+l)/e;this._y=(o+c)/e;this._z=.25*e}this._onChangeCallback();return this}setFromUnitVectors(e,t){let n=e.dot(t)+1;if(n<Number.EPSILON){n=0;if(Math.abs(e.x)>Math.abs(e.z)){this._x=-e.y;this._y=e.x;this._z=0;this._w=n}else{this._x=0;this._y=-e.z;this._z=e.y;this._w=n}}else{this._x=e.y*t.z-e.z*t.y;this._y=e.z*t.x-e.x*t.z;this._z=e.x*t.y-e.y*t.x;this._w=n}return this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Sn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);this.slerp(e,i);return this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();if(e===0){this._x=0;this._y=0;this._z=0;this._w=1}else{e=1/e;this._x=this._x*e;this._y=this._y*e;this._z=this._z*e;this._w=this._w*e}this._onChangeCallback();return this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,s=e._w;const a=t._x,o=t._y,l=t._z,c=t._w;this._x=n*c+s*a+i*l-r*o;this._y=i*c+s*o+r*a-n*l;this._z=r*c+s*l+n*o-i*a;this._w=s*c-n*a-i*o-r*l;this._onChangeCallback();return this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,s=this._w;let a=s*e._w+n*e._x+i*e._y+r*e._z;if(a<0){this._w=-e._w;this._x=-e._x;this._y=-e._y;this._z=-e._z;a=-a}else{this.copy(e)}if(a>=1){this._w=s;this._x=n;this._y=i;this._z=r;return this}const o=1-a*a;if(o<=Number.EPSILON){const e=1-t;this._w=e*s+t*this._w;this._x=e*n+t*this._x;this._y=e*i+t*this._y;this._z=e*r+t*this._z;this.normalize();this._onChangeCallback();return this}const l=Math.sqrt(o);const c=Math.atan2(l,a);const u=Math.sin((1-t)*c)/l,h=Math.sin(t*c)/l;this._w=s*u+this._w*h;this._x=n*u+this._x*h;this._y=i*u+this._y*h;this._z=r*u+this._z*h;this._onChangeCallback();return this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random();const t=Math.sqrt(1-e);const n=Math.sqrt(e);const i=2*Math.PI*Math.random();const r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){this._x=e[t];this._y=e[t+1];this._z=e[t+2];this._w=e[t+3];this._onChangeCallback();return this}toArray(e=[],t=0){e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._w;return e}fromBufferAttribute(e,t){this._x=e.getX(t);this._y=e.getY(t);this._z=e.getZ(t);this._w=e.getW(t);return this}_onChange(e){this._onChangeCallback=e;return this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x;yield this._y;yield this._z;yield this._w}}class Qn{constructor(e=0,t=0,n=0){Qn.prototype.isVector3=true;this.x=e;this.y=t;this.z=n}set(e,t,n){if(n===undefined)n=this.z;this.x=e;this.y=t;this.z=n;return this}setScalar(e){this.x=e;this.y=e;this.z=e;return this}setX(e){this.x=e;return this}setY(e){this.y=e;return this}setZ(e){this.z=e;return this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){this.x=e.x;this.y=e.y;this.z=e.z;return this}add(e){this.x+=e.x;this.y+=e.y;this.z+=e.z;return this}addScalar(e){this.x+=e;this.y+=e;this.z+=e;return this}addVectors(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this}addScaledVector(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;return this}sub(e){this.x-=e.x;this.y-=e.y;this.z-=e.z;return this}subScalar(e){this.x-=e;this.y-=e;this.z-=e;return this}subVectors(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this}multiply(e){this.x*=e.x;this.y*=e.y;this.z*=e.z;return this}multiplyScalar(e){this.x*=e;this.y*=e;this.z*=e;return this}multiplyVectors(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this}applyEuler(e){return this.applyQuaternion(ti.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ti.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z;const r=e.elements;this.x=r[0]*t+r[3]*n+r[6]*i;this.y=r[1]*t+r[4]*n+r[7]*i;this.z=r[2]*t+r[5]*n+r[8]*i;return this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z;const r=e.elements;const s=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*s;this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*s;this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*s;return this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z;const r=e.x,s=e.y,a=e.z,o=e.w;const l=o*t+s*i-a*n;const c=o*n+a*t-r*i;const u=o*i+r*n-s*t;const h=-r*t-s*n-a*i;this.x=l*o+h*-r+c*-a-u*-s;this.y=c*o+h*-s+u*-r-l*-a;this.z=u*o+h*-a+l*-s-c*-r;return this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z;const r=e.elements;this.x=r[0]*t+r[4]*n+r[8]*i;this.y=r[1]*t+r[5]*n+r[9]*i;this.z=r[2]*t+r[6]*n+r[10]*i;return this.normalize()}divide(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);return this}max(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);return this}clamp(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));return this}clampScalar(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));this.z=Math.max(e,Math.min(t,this.z));return this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this}lerpVectors(e,t,n){this.x=e.x+(t.x-e.x)*n;this.y=e.y+(t.y-e.y)*n;this.z=e.z+(t.z-e.z)*n;return this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z;const s=t.x,a=t.y,o=t.z;this.x=i*o-r*a;this.y=r*s-n*o;this.z=n*a-i*s;return this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){ei.copy(this).projectOnVector(e);return this.sub(ei)}reflect(e){return this.sub(ei.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Sn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;this.x=i*Math.sin(n);this.y=Math.cos(t)*e;this.z=i*Math.cos(n);return this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){this.x=e*Math.sin(t);this.y=n;this.z=e*Math.cos(t);return this}setFromMatrixPosition(e){const t=e.elements;this.x=t[12];this.y=t[13];this.z=t[14];return this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length();const n=this.setFromMatrixColumn(e,1).length();const i=this.setFromMatrixColumn(e,2).length();this.x=t;this.y=n;this.z=i;return this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){this.x=e._x;this.y=e._y;this.z=e._z;return this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){this.x=e[t];this.y=e[t+1];this.z=e[t+2];return this}toArray(e=[],t=0){e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;return e}fromBufferAttribute(e,t){this.x=e.getX(t);this.y=e.getY(t);this.z=e.getZ(t);return this}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this}randomDirection(){const e=(Math.random()-.5)*2;const t=Math.random()*Math.PI*2;const n=Math.sqrt(1-e**2);this.x=n*Math.cos(t);this.y=n*Math.sin(t);this.z=e;return this}*[Symbol.iterator](){yield this.x;yield this.y;yield this.z}}const ei=new Qn;const ti=new $n;function ni(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function ii(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}const ri=(new jn).fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]);const si=(new jn).fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);const ai=new Qn;function oi(e){e.convertSRGBToLinear();ai.set(e.r,e.g,e.b).applyMatrix3(si);return e.setRGB(ai.x,ai.y,ai.z)}function li(e){ai.set(e.r,e.g,e.b).applyMatrix3(ri);return e.setRGB(ai.x,ai.y,ai.z).convertLinearToSRGB()}const ci={[Gt]:e=>e,[zt]:e=>e.convertSRGBToLinear(),[kt]:oi};const ui={[Gt]:e=>e,[zt]:e=>e.convertLinearToSRGB(),[kt]:li};const hi={enabled:false,get legacyMode(){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.");return!this.enabled},set legacyMode(e){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.");this.enabled=!e},get workingColorSpace(){return Gt},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.enabled===false||t===n||!t||!n){return e}const i=ci[t];const r=ui[n];if(i===undefined||r===undefined){throw new Error(`Unsupported color space conversion, "${t}" to "${n}".`)}return r(i(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}};let di;class fi{static getDataURL(e){if(/^data:/i.test(e.src)){return e.src}if(typeof HTMLCanvasElement=="undefined"){return e.src}let t;if(e instanceof HTMLCanvasElement){t=e}else{if(di===undefined)di=Kn("canvas");di.width=e.width;di.height=e.height;const n=di.getContext("2d");if(e instanceof ImageData){n.putImageData(e,0,0)}else{n.drawImage(e,0,0,e.width,e.height)}t=di}if(t.width>2048||t.height>2048){console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e);return t.toDataURL("image/jpeg",.6)}else{return t.toDataURL("image/png")}}static sRGBToLinear(e){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){const t=Kn("canvas");t.width=e.width;t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height);const r=i.data;for(let e=0;e<r.length;e++){r[e]=ni(r[e]/255)*255}n.putImageData(i,0,0);return t}else if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++){if(t instanceof Uint8Array||t instanceof Uint8ClampedArray){t[e]=Math.floor(ni(t[e]/255)*255)}else{t[e]=ni(t[e])}}return{data:t,width:e.width,height:e.height}}else{console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.");return e}}}class pi{constructor(e=null){this.isSource=true;this.uuid=bn();this.data=e;this.version=0}set needsUpdate(e){if(e===true)this.version++}toJSON(e){const t=e===undefined||typeof e==="string";if(!t&&e.images[this.uuid]!==undefined){return e.images[this.uuid]}const n={uuid:this.uuid,url:""};const i=this.data;if(i!==null){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++){if(i[t].isDataTexture){e.push(mi(i[t].image))}else{e.push(mi(i[t]))}}}else{e=mi(i)}n.url=e}if(!t){e.images[this.uuid]=n}return n}}function mi(e){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){return fi.getDataURL(e)}else{if(e.data){return{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}}else{console.warn("THREE.Texture: Unable to serialize Texture.");return{}}}}let gi=0;class _i extends _n{constructor(e=_i.DEFAULT_IMAGE,t=_i.DEFAULT_MAPPING,n=le,i=le,r=me,s=xe,a=Ie,o=ve,l=_i.DEFAULT_ANISOTROPY,c=It){super();this.isTexture=true;Object.defineProperty(this,"id",{value:gi++});this.uuid=bn();this.name="";this.source=new pi(e);this.mipmaps=[];this.mapping=t;this.wrapS=n;this.wrapT=i;this.magFilter=r;this.minFilter=s;this.anisotropy=l;this.format=a;this.internalFormat=null;this.type=o;this.offset=new Xn(0,0);this.repeat=new Xn(1,1);this.center=new Xn(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new jn;this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.encoding=c;this.userData={};this.version=0;this.onUpdate=null;this.isRenderTargetTexture=false;this.needsPMREMUpdate=false}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name;this.source=e.source;this.mipmaps=e.mipmaps.slice(0);this.mapping=e.mapping;this.wrapS=e.wrapS;this.wrapT=e.wrapT;this.magFilter=e.magFilter;this.minFilter=e.minFilter;this.anisotropy=e.anisotropy;this.format=e.format;this.internalFormat=e.internalFormat;this.type=e.type;this.offset.copy(e.offset);this.repeat.copy(e.repeat);this.center.copy(e.center);this.rotation=e.rotation;this.matrixAutoUpdate=e.matrixAutoUpdate;this.matrix.copy(e.matrix);this.generateMipmaps=e.generateMipmaps;this.premultiplyAlpha=e.premultiplyAlpha;this.flipY=e.flipY;this.unpackAlignment=e.unpackAlignment;this.encoding=e.encoding;this.userData=JSON.parse(JSON.stringify(e.userData));this.needsUpdate=true;return this}toJSON(e){const t=e===undefined||typeof e==="string";if(!t&&e.textures[this.uuid]!==undefined){return e.textures[this.uuid]}const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(Object.keys(this.userData).length>0)n.userData=this.userData;if(!t){e.textures[this.uuid]=n}return n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==te)return e;e.applyMatrix3(this.matrix);if(e.x<0||e.x>1){switch(this.wrapS){case oe:e.x=e.x-Math.floor(e.x);break;case le:e.x=e.x<0?0:1;break;case ce:if(Math.abs(Math.floor(e.x)%2)===1){e.x=Math.ceil(e.x)-e.x}else{e.x=e.x-Math.floor(e.x)}break}}if(e.y<0||e.y>1){switch(this.wrapT){case oe:e.y=e.y-Math.floor(e.y);break;case le:e.y=e.y<0?0:1;break;case ce:if(Math.abs(Math.floor(e.y)%2)===1){e.y=Math.ceil(e.y)-e.y}else{e.y=e.y-Math.floor(e.y)}break}}if(this.flipY){e.y=1-e.y}return e}set needsUpdate(e){if(e===true){this.version++;this.source.needsUpdate=true}}}_i.DEFAULT_IMAGE=null;_i.DEFAULT_MAPPING=te;_i.DEFAULT_ANISOTROPY=1;class xi{constructor(e=0,t=0,n=0,i=1){xi.prototype.isVector4=true;this.x=e;this.y=t;this.z=n;this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){this.x=e;this.y=t;this.z=n;this.w=i;return this}setScalar(e){this.x=e;this.y=e;this.z=e;this.w=e;return this}setX(e){this.x=e;return this}setY(e){this.y=e;return this}setZ(e){this.z=e;return this}setW(e){this.w=e;return this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=e.w!==undefined?e.w:1;return this}add(e){this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this}addScalar(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this}addVectors(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this}addScaledVector(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;this.w+=e.w*t;return this}sub(e){this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this}subScalar(e){this.x-=e;this.y-=e;this.z-=e;this.w-=e;return this}subVectors(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this}multiply(e){this.x*=e.x;this.y*=e.y;this.z*=e.z;this.w*=e.w;return this}multiplyScalar(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w;const s=e.elements;this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*r;this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*r;this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*r;this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*r;return this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);if(t<1e-4){this.x=1;this.y=0;this.z=0}else{this.x=e.x/t;this.y=e.y/t;this.z=e.z/t}return this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const s=.01,a=.1,o=e.elements,l=o[0],c=o[4],u=o[8],h=o[1],d=o[5],f=o[9],p=o[2],m=o[6],g=o[10];if(Math.abs(c-h)<s&&Math.abs(u-p)<s&&Math.abs(f-m)<s){if(Math.abs(c+h)<a&&Math.abs(u+p)<a&&Math.abs(f+m)<a&&Math.abs(l+d+g-3)<a){this.set(1,0,0,0);return this}t=Math.PI;const e=(l+1)/2;const o=(d+1)/2;const _=(g+1)/2;const x=(c+h)/4;const y=(u+p)/4;const v=(f+m)/4;if(e>o&&e>_){if(e<s){n=0;i=.707106781;r=.707106781}else{n=Math.sqrt(e);i=x/n;r=y/n}}else if(o>_){if(o<s){n=.707106781;i=0;r=.707106781}else{i=Math.sqrt(o);n=x/i;r=v/i}}else{if(_<s){n=.707106781;i=.707106781;r=0}else{r=Math.sqrt(_);n=y/r;i=v/r}}this.set(n,i,r,t);return this}let _=Math.sqrt((m-f)*(m-f)+(u-p)*(u-p)+(h-c)*(h-c));if(Math.abs(_)<.001)_=1;this.x=(m-f)/_;this.y=(u-p)/_;this.z=(h-c)/_;this.w=Math.acos((l+d+g-1)/2);return this}min(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);this.w=Math.min(this.w,e.w);return this}max(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);this.w=Math.max(this.w,e.w);return this}clamp(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));this.w=Math.max(e.w,Math.min(t.w,this.w));return this}clampScalar(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));this.z=Math.max(e,Math.min(t,this.z));this.w=Math.max(e,Math.min(t,this.w));return this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this}lerpVectors(e,t,n){this.x=e.x+(t.x-e.x)*n;this.y=e.y+(t.y-e.y)*n;this.z=e.z+(t.z-e.z)*n;this.w=e.w+(t.w-e.w)*n;return this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){this.x=e[t];this.y=e[t+1];this.z=e[t+2];this.w=e[t+3];return this}toArray(e=[],t=0){e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;e[t+3]=this.w;return e}fromBufferAttribute(e,t){this.x=e.getX(t);this.y=e.getY(t);this.z=e.getZ(t);this.w=e.getW(t);return this}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this}*[Symbol.iterator](){yield this.x;yield this.y;yield this.z;yield this.w}}class yi extends _n{constructor(e=1,t=1,n={}){super();this.isWebGLRenderTarget=true;this.width=e;this.height=t;this.depth=1;this.scissor=new xi(0,0,e,t);this.scissorTest=false;this.viewport=new xi(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new _i(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding);this.texture.isRenderTargetTexture=true;this.texture.flipY=false;this.texture.generateMipmaps=n.generateMipmaps!==undefined?n.generateMipmaps:false;this.texture.internalFormat=n.internalFormat!==undefined?n.internalFormat:null;this.texture.minFilter=n.minFilter!==undefined?n.minFilter:me;this.depthBuffer=n.depthBuffer!==undefined?n.depthBuffer:true;this.stencilBuffer=n.stencilBuffer!==undefined?n.stencilBuffer:false;this.depthTexture=n.depthTexture!==undefined?n.depthTexture:null;this.samples=n.samples!==undefined?n.samples:0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e;this.height=t;this.depth=n;this.texture.image.width=e;this.texture.image.height=t;this.texture.image.depth=n;this.dispose()}this.viewport.set(0,0,e,t);this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width;this.height=e.height;this.depth=e.depth;this.viewport.copy(e.viewport);this.texture=e.texture.clone();this.texture.isRenderTargetTexture=true;const t=Object.assign({},e.texture.image);this.texture.source=new pi(t);this.depthBuffer=e.depthBuffer;this.stencilBuffer=e.stencilBuffer;if(e.depthTexture!==null)this.depthTexture=e.depthTexture.clone();this.samples=e.samples;return this}dispose(){this.dispatchEvent({type:"dispose"})}}class vi extends _i{constructor(e=null,t=1,n=1,i=1){super(null);this.isDataArrayTexture=true;this.image={data:e,width:t,height:n,depth:i};this.magFilter=ue;this.minFilter=ue;this.wrapR=le;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1}}class Mi extends yi{constructor(e=1,t=1,n=1){super(e,t);this.isWebGLArrayRenderTarget=true;this.depth=n;this.texture=new vi(null,e,t,n);this.texture.isRenderTargetTexture=true}}class bi extends _i{constructor(e=null,t=1,n=1,i=1){super(null);this.isData3DTexture=true;this.image={data:e,width:t,height:n,depth:i};this.magFilter=ue;this.minFilter=ue;this.wrapR=le;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1}}class Si extends yi{constructor(e=1,t=1,n=1){super(e,t);this.isWebGL3DRenderTarget=true;this.depth=n;this.texture=new bi(null,e,t,n);this.texture.isRenderTargetTexture=true}}class Ti extends yi{constructor(e=1,t=1,n=1,i={}){super(e,t,i);this.isWebGLMultipleRenderTargets=true;const r=this.texture;this.texture=[];for(let e=0;e<n;e++){this.texture[e]=r.clone();this.texture[e].isRenderTargetTexture=true}}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e;this.height=t;this.depth=n;for(let i=0,r=this.texture.length;i<r;i++){this.texture[i].image.width=e;this.texture[i].image.height=t;this.texture[i].image.depth=n}this.dispose()}this.viewport.set(0,0,e,t);this.scissor.set(0,0,e,t);return this}copy(e){this.dispose();this.width=e.width;this.height=e.height;this.depth=e.depth;this.viewport.set(0,0,this.width,this.height);this.scissor.set(0,0,this.width,this.height);this.depthBuffer=e.depthBuffer;this.stencilBuffer=e.stencilBuffer;if(e.depthTexture!==null)this.depthTexture=e.depthTexture.clone();this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++){this.texture[t]=e.texture[t].clone();this.texture[t].isRenderTargetTexture=true}return this}}class wi{constructor(e=new Qn(+Infinity,+Infinity,+Infinity),t=new Qn(-Infinity,-Infinity,-Infinity)){this.isBox3=true;this.min=e;this.max=t}set(e,t){this.min.copy(e);this.max.copy(t);return this}setFromPackedArray(e){this.min.set(e[0],e[1],e[2]);this.max.set(e[3],e[4],e[5]);return this}static newFromPackedArray(e){return new wi(new Qn(e[0],e[1],e[2]),new Qn(e[3],e[4],e[5]))}setFromArray(e){let t=+Infinity;let n=+Infinity;let i=+Infinity;let r=-Infinity;let s=-Infinity;let a=-Infinity;for(let o=0,l=e.length;o<l;o+=3){const l=e[o];const c=e[o+1];const u=e[o+2];if(l<t)t=l;if(c<n)n=c;if(u<i)i=u;if(l>r)r=l;if(c>s)s=c;if(u>a)a=u}this.min.set(t,n,i);this.max.set(r,s,a);return this}setFromBufferAttribute(e,t,n){let i=+Infinity;let r=+Infinity;let s=+Infinity;let a=-Infinity;let o=-Infinity;let l=-Infinity;for(let c=t===undefined?0:t,u=n===undefined?e.count:n;c<u;c++){const t=e.getX(c);const n=e.getY(c);const u=e.getZ(c);if(t<i)i=t;if(n<r)r=n;if(u<s)s=u;if(t>a)a=t;if(n>o)o=n;if(u>l)l=u}this.min.set(i,r,s);this.max.set(a,o,l);return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++){this.expandByPoint(e[t])}return this}setFromCenterAndSize(e,t){const n=Ai.copy(t).multiplyScalar(.5);this.min.copy(e).sub(n);this.max.copy(e).add(n);return this}setFromObject(e,t=false){this.makeEmpty();return this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.min.copy(e.min);this.max.copy(e.max);return this}makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){this.min.min(e);this.max.max(e);return this}expandByVector(e){this.min.sub(e);this.max.add(e);return this}expandByScalar(e){this.min.addScalar(-e);this.max.addScalar(e);return this}expandByObject(e,t=false){e.updateWorldMatrix(false,false);const n=e.geometry;if(n!==undefined){const i=e.userData.renderGroup;if(t&&n.attributes!=undefined&&n.attributes.position!==undefined){const t=n.attributes.position;for(let n=i?i.firstVertex:0,r=i?i.lastVertex:t.count;n<r;n++){Ai.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld);this.expandByPoint(Ai)}}else{if(i&&i.boundingBox){Ri.setFromPackedArray(i.boundingBox)}else{if(n.boundingBox===null){n.computeBoundingBox()}Ri.copy(n.boundingBox)}Ri.applyMatrix4(e.matrixWorld);this.union(Ri)}}const i=e.children;for(let e=0,n=i.length;e<n;e++){this.expandByObject(i[e],t)}return this}containsPoint(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?false:true}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?false:true}intersectsSphere(e){this.clampPoint(e.center,Ai);return Ai.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;if(e.normal.x>0){t=e.normal.x*this.min.x;n=e.normal.x*this.max.x}else{t=e.normal.x*this.max.x;n=e.normal.x*this.min.x}if(e.normal.y>0){t+=e.normal.y*this.min.y;n+=e.normal.y*this.max.y}else{t+=e.normal.y*this.max.y;n+=e.normal.y*this.min.y}if(e.normal.z>0){t+=e.normal.z*this.min.z;n+=e.normal.z*this.max.z}else{t+=e.normal.z*this.max.z;n+=e.normal.z*this.min.z}return t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty()){return false}this.getCenter(Oi);Ui.subVectors(this.max,Oi);Ci.subVectors(e.a,Oi);Li.subVectors(e.b,Oi);Pi.subVectors(e.c,Oi);Ii.subVectors(Li,Ci);Di.subVectors(Pi,Li);Ni.subVectors(Ci,Pi);let t=[0,-Ii.z,Ii.y,0,-Di.z,Di.y,0,-Ni.z,Ni.y,Ii.z,0,-Ii.x,Di.z,0,-Di.x,Ni.z,0,-Ni.x,-Ii.y,Ii.x,0,-Di.y,Di.x,0,-Ni.y,Ni.x,0];if(!zi(t,Ci,Li,Pi,Ui)){return false}t=[1,0,0,0,1,0,0,0,1];if(!zi(t,Ci,Li,Pi,Ui)){return false}Fi.crossVectors(Ii,Di);t=[Fi.x,Fi.y,Fi.z];return zi(t,Ci,Li,Pi,Ui)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ai).distanceTo(e)}getBoundingSphere(e){if(this.isEmpty()){e.makeEmpty()}else{this.getCenter(e.center);e.radius=this.getSize(Ai).length()*.5}return e}intersect(e){this.min.max(e.min);this.max.min(e.max);if(this.isEmpty())this.makeEmpty();return this}union(e){this.min.min(e.min);this.max.max(e.max);return this}applyMatrix4(e){if(this.isEmpty())return this;Ei[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e);Ei[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e);Ei[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e);Ei[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e);Ei[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e);Ei[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e);Ei[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e);Ei[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e);this.setFromPoints(Ei);return this}translate(e){this.min.add(e);this.max.add(e);return this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ei=[new Qn,new Qn,new Qn,new Qn,new Qn,new Qn,new Qn,new Qn];const Ai=new Qn;const Ri=new wi;const Ci=new Qn;const Li=new Qn;const Pi=new Qn;const Ii=new Qn;const Di=new Qn;const Ni=new Qn;const Oi=new Qn;const Ui=new Qn;const Fi=new Qn;const Bi=new Qn;function zi(e,t,n,i,r){for(let s=0,a=e.length-3;s<=a;s+=3){Bi.fromArray(e,s);const a=r.x*Math.abs(Bi.x)+r.y*Math.abs(Bi.y)+r.z*Math.abs(Bi.z);const o=t.dot(Bi);const l=n.dot(Bi);const c=i.dot(Bi);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a){return false}}return true}const Gi=new wi;const ki=new Qn;const Hi=new Qn;class Vi{constructor(e=new Qn,t=-1){this.center=e;this.radius=t}set(e,t){this.center.copy(e);this.radius=t;return this}setFromPackedArray(e){this.center.set(e[0],e[1],e[2]);this.radius=e[3];return this}static newFromPackedArray(e){return new Vi(new Qn(e[0],e[1],e[2]),e[3])}setFromPoints(e,t){const n=this.center;if(t!==undefined){n.copy(t)}else{Gi.setFromPoints(e).getCenter(n)}let i=0;for(let t=0,r=e.length;t<r;t++){i=Math.max(i,n.distanceToSquared(e[t]))}this.radius=Math.sqrt(i);return this}copy(e){this.center.copy(e.center);this.radius=e.radius;return this}isEmpty(){return this.radius<0}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);t.copy(e);if(n>this.radius*this.radius){t.sub(this.center).normalize();t.multiplyScalar(this.radius).add(this.center)}return t}getBoundingBox(e){if(this.isEmpty()){e.makeEmpty();return e}e.set(this.center,this.center);e.expandByScalar(this.radius);return e}applyMatrix4(e){this.center.applyMatrix4(e);this.radius=this.radius*e.getMaxScaleOnAxis();return this}translate(e){this.center.add(e);return this}expandByPoint(e){if(this.isEmpty()){this.center.copy(e);this.radius=0;return this}ki.subVectors(e,this.center);const t=ki.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t);const n=(e-this.radius)*.5;this.center.addScaledVector(ki,n/e);this.radius+=n}return this}union(e){if(e.isEmpty()){return this}if(this.isEmpty()){this.copy(e);return this}if(this.center.equals(e.center)===true){this.radius=Math.max(this.radius,e.radius)}else{Hi.subVectors(e.center,this.center).setLength(e.radius);this.expandByPoint(ki.copy(e.center).add(Hi));this.expandByPoint(ki.copy(e.center).sub(Hi))}return this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Wi=new Qn;const Xi=new Qn;const ji=new Qn;const qi=new Qn;const Yi=new Qn;const Zi=new Qn;const Ji=new Qn;class Ki{constructor(e=new Qn,t=new Qn(0,0,-1)){this.origin=e;this.direction=t}set(e,t){this.origin.copy(e);this.direction.copy(t);return this}copy(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){this.direction.copy(e).sub(this.origin).normalize();return this}recast(e){this.origin.copy(this.at(e,Wi));return this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);if(n<0){return t.copy(this.origin)}return t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Wi.subVectors(e,this.origin).dot(this.direction);if(t<0){return this.origin.distanceToSquared(e)}Wi.copy(this.origin).addScaledVector(this.direction,t);return Wi.distanceToSquared(e)}distanceSqToSegment(e,t,n,i){Xi.copy(e).add(t).multiplyScalar(.5);ji.copy(t).sub(e).normalize();qi.copy(this.origin).sub(Xi);const r=e.distanceTo(t)*.5;const s=-this.direction.dot(ji);const a=qi.dot(this.direction);const o=-qi.dot(ji);const l=qi.lengthSq();const c=Math.abs(1-s*s);let u,h,d,f;if(c>0){u=s*o-a;h=s*a-o;f=r*c;if(u>=0){if(h>=-f){if(h<=f){const e=1/c;u*=e;h*=e;d=u*(u+s*h+2*a)+h*(s*u+h+2*o)+l}else{h=r;u=Math.max(0,-(s*h+a));d=-u*u+h*(h+2*o)+l}}else{h=-r;u=Math.max(0,-(s*h+a));d=-u*u+h*(h+2*o)+l}}else{if(h<=-f){u=Math.max(0,-(-s*r+a));h=u>0?-r:Math.min(Math.max(-r,-o),r);d=-u*u+h*(h+2*o)+l}else if(h<=f){u=0;h=Math.min(Math.max(-r,-o),r);d=h*(h+2*o)+l}else{u=Math.max(0,-(s*r+a));h=u>0?r:Math.min(Math.max(-r,-o),r);d=-u*u+h*(h+2*o)+l}}}else{h=s>0?-r:r;u=Math.max(0,-(s*h+a));d=-u*u+h*(h+2*o)+l}if(n){n.copy(this.origin).addScaledVector(this.direction,u)}if(i){i.copy(Xi).addScaledVector(ji,h)}return d}intersectSphere(e,t){Wi.subVectors(e.center,this.origin);const n=Wi.dot(this.direction);const i=Wi.dot(Wi)-n*n;const r=e.radius*e.radius;if(i>r)return null;const s=Math.sqrt(r-i);const a=n-s;const o=n+s;if(o<0)return null;if(a<0)return this.at(o,t);return this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0){if(e.distanceToPoint(this.origin)===0){return 0}return null}const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);if(n===null){return null}return this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(t===0){return true}const n=e.normal.dot(this.direction);if(n*t<0){return true}return false}intersectBox(e,t){let n,i,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z;const h=this.origin;if(l>=0){n=(e.min.x-h.x)*l;i=(e.max.x-h.x)*l}else{n=(e.max.x-h.x)*l;i=(e.min.x-h.x)*l}if(c>=0){r=(e.min.y-h.y)*c;s=(e.max.y-h.y)*c}else{r=(e.max.y-h.y)*c;s=(e.min.y-h.y)*c}if(n>s||r>i)return null;if(r>n||isNaN(n))n=r;if(s<i||isNaN(i))i=s;if(u>=0){a=(e.min.z-h.z)*u;o=(e.max.z-h.z)*u}else{a=(e.max.z-h.z)*u;o=(e.min.z-h.z)*u}if(n>o||a>i)return null;if(a>n||n!==n)n=a;if(o<i||i!==i)i=o;if(i<0)return null;return this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Wi)!==null}intersectTriangle(e,t,n,i,r){Yi.subVectors(t,e);Zi.subVectors(n,e);Ji.crossVectors(Yi,Zi);let s=this.direction.dot(Ji);let a;if(s>0){if(i)return null;a=1}else if(s<0){a=-1;s=-s}else{return null}qi.subVectors(this.origin,e);const o=a*this.direction.dot(Zi.crossVectors(qi,Zi));if(o<0){return null}const l=a*this.direction.dot(Yi.cross(qi));if(l<0){return null}if(o+l>s){return null}const c=-a*qi.dot(Ji);if(c<0){return null}return this.at(c/s,r)}applyMatrix4(e){this.origin.applyMatrix4(e);this.direction.transformDirection(e);return this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class $i{constructor(){$i.prototype.isMatrix4=true;this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,s,a,o,l,c,u,h,d,f,p,m){const g=this.elements;g[0]=e;g[4]=t;g[8]=n;g[12]=i;g[1]=r;g[5]=s;g[9]=a;g[13]=o;g[2]=l;g[6]=c;g[10]=u;g[14]=h;g[3]=d;g[7]=f;g[11]=p;g[15]=m;return this}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this}clone(){return(new $i).fromArray(this.elements)}copy(e){const t=this.elements;const n=e.elements;t[0]=n[0];t[1]=n[1];t[2]=n[2];t[3]=n[3];t[4]=n[4];t[5]=n[5];t[6]=n[6];t[7]=n[7];t[8]=n[8];t[9]=n[9];t[10]=n[10];t[11]=n[11];t[12]=n[12];t[13]=n[13];t[14]=n[14];t[15]=n[15];return this}copyPosition(e){const t=this.elements,n=e.elements;t[12]=n[12];t[13]=n[13];t[14]=n[14];return this}setFromMatrix3(e){const t=e.elements;this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1);return this}extractBasis(e,t,n){e.setFromMatrixColumn(this,0);t.setFromMatrixColumn(this,1);n.setFromMatrixColumn(this,2);return this}makeBasis(e,t,n){this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1);return this}extractRotation(e){const t=this.elements;const n=e.elements;const i=1/Qi.setFromMatrixColumn(e,0).length();const r=1/Qi.setFromMatrixColumn(e,1).length();const s=1/Qi.setFromMatrixColumn(e,2).length();t[0]=n[0]*i;t[1]=n[1]*i;t[2]=n[2]*i;t[3]=0;t[4]=n[4]*r;t[5]=n[5]*r;t[6]=n[6]*r;t[7]=0;t[8]=n[8]*s;t[9]=n[9]*s;t[10]=n[10]*s;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this}makeRotationFromEuler(e){const t=this.elements;const n=e.x,i=e.y,r=e.z;const s=Math.cos(n),a=Math.sin(n);const o=Math.cos(i),l=Math.sin(i);const c=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const e=s*c,n=s*u,i=a*c,r=a*u;t[0]=o*c;t[4]=-o*u;t[8]=l;t[1]=n+i*l;t[5]=e-r*l;t[9]=-a*o;t[2]=r-e*l;t[6]=i+n*l;t[10]=s*o}else if(e.order==="YXZ"){const e=o*c,n=o*u,i=l*c,r=l*u;t[0]=e+r*a;t[4]=i*a-n;t[8]=s*l;t[1]=s*u;t[5]=s*c;t[9]=-a;t[2]=n*a-i;t[6]=r+e*a;t[10]=s*o}else if(e.order==="ZXY"){const e=o*c,n=o*u,i=l*c,r=l*u;t[0]=e-r*a;t[4]=-s*u;t[8]=i+n*a;t[1]=n+i*a;t[5]=s*c;t[9]=r-e*a;t[2]=-s*l;t[6]=a;t[10]=s*o}else if(e.order==="ZYX"){const e=s*c,n=s*u,i=a*c,r=a*u;t[0]=o*c;t[4]=i*l-n;t[8]=e*l+r;t[1]=o*u;t[5]=r*l+e;t[9]=n*l-i;t[2]=-l;t[6]=a*o;t[10]=s*o}else if(e.order==="YZX"){const e=s*o,n=s*l,i=a*o,r=a*l;t[0]=o*c;t[4]=r-e*u;t[8]=i*u+n;t[1]=u;t[5]=s*c;t[9]=-a*c;t[2]=-l*c;t[6]=n*u+i;t[10]=e-r*u}else if(e.order==="XZY"){const e=s*o,n=s*l,i=a*o,r=a*l;t[0]=o*c;t[4]=-u;t[8]=l*c;t[1]=e*u+r;t[5]=s*c;t[9]=n*u-i;t[2]=i*u-n;t[6]=a*c;t[10]=r*u+e}t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this}makeRotationFromQuaternion(e){return this.compose(tr,e,nr)}lookAt(e,t,n){const i=this.elements;sr.subVectors(e,t);if(sr.lengthSq()===0){sr.z=1}sr.normalize();ir.crossVectors(n,sr);if(ir.lengthSq()===0){if(Math.abs(n.z)===1){sr.x+=1e-4}else{sr.z+=1e-4}sr.normalize();ir.crossVectors(n,sr)}ir.normalize();rr.crossVectors(sr,ir);i[0]=ir.x;i[4]=rr.x;i[8]=sr.x;i[1]=ir.y;i[5]=rr.y;i[9]=sr.y;i[2]=ir.z;i[6]=rr.z;i[10]=sr.z;return this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements;const i=t.elements;const r=this.elements;const s=n[0],a=n[4],o=n[8],l=n[12];const c=n[1],u=n[5],h=n[9],d=n[13];const f=n[2],p=n[6],m=n[10],g=n[14];const _=n[3],x=n[7],y=n[11],v=n[15];const M=i[0],b=i[4],S=i[8],T=i[12];const w=i[1],E=i[5],A=i[9],R=i[13];const C=i[2],L=i[6],P=i[10],I=i[14];const D=i[3],N=i[7],O=i[11],U=i[15];r[0]=s*M+a*w+o*C+l*D;r[4]=s*b+a*E+o*L+l*N;r[8]=s*S+a*A+o*P+l*O;r[12]=s*T+a*R+o*I+l*U;r[1]=c*M+u*w+h*C+d*D;r[5]=c*b+u*E+h*L+d*N;r[9]=c*S+u*A+h*P+d*O;r[13]=c*T+u*R+h*I+d*U;r[2]=f*M+p*w+m*C+g*D;r[6]=f*b+p*E+m*L+g*N;r[10]=f*S+p*A+m*P+g*O;r[14]=f*T+p*R+m*I+g*U;r[3]=_*M+x*w+y*C+v*D;r[7]=_*b+x*E+y*L+v*N;r[11]=_*S+x*A+y*P+v*O;r[15]=_*T+x*R+y*I+v*U;return this}multiplyScalar(e){const t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this}determinant(){const e=this.elements;const t=e[0],n=e[4],i=e[8],r=e[12];const s=e[1],a=e[5],o=e[9],l=e[13];const c=e[2],u=e[6],h=e[10],d=e[14];const f=e[3],p=e[7],m=e[11],g=e[15];return f*(+r*o*u-i*l*u-r*a*h+n*l*h+i*a*d-n*o*d)+p*(+t*o*d-t*l*h+r*s*h-i*s*d+i*l*c-r*o*c)+m*(+t*l*u-t*a*d-r*s*u+n*s*d+r*a*c-n*l*c)+g*(-i*a*c-t*o*u+t*a*h+i*s*u-n*s*h+n*o*c)}transpose(){const e=this.elements;let t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this}setPosition(e,t,n){const i=this.elements;if(e.isVector3){i[12]=e.x;i[13]=e.y;i[14]=e.z}else{i[12]=e;i[13]=t;i[14]=n}return this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],c=e[8],u=e[9],h=e[10],d=e[11],f=e[12],p=e[13],m=e[14],g=e[15],_=u*m*l-p*h*l+p*o*d-a*m*d-u*o*g+a*h*g,x=f*h*l-c*m*l-f*o*d+s*m*d+c*o*g-s*h*g,y=c*p*l-f*u*l+f*a*d-s*p*d-c*a*g+s*u*g,v=f*u*o-c*p*o-f*a*h+s*p*h+c*a*m-s*u*m;const M=t*_+n*x+i*y+r*v;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;e[0]=_*b;e[1]=(p*h*r-u*m*r-p*i*d+n*m*d+u*i*g-n*h*g)*b;e[2]=(a*m*r-p*o*r+p*i*l-n*m*l-a*i*g+n*o*g)*b;e[3]=(u*o*r-a*h*r-u*i*l+n*h*l+a*i*d-n*o*d)*b;e[4]=x*b;e[5]=(c*m*r-f*h*r+f*i*d-t*m*d-c*i*g+t*h*g)*b;e[6]=(f*o*r-s*m*r-f*i*l+t*m*l+s*i*g-t*o*g)*b;e[7]=(s*h*r-c*o*r+c*i*l-t*h*l-s*i*d+t*o*d)*b;e[8]=y*b;e[9]=(f*u*r-c*p*r-f*n*d+t*p*d+c*n*g-t*u*g)*b;e[10]=(s*p*r-f*a*r+f*n*l-t*p*l-s*n*g+t*a*g)*b;e[11]=(c*a*r-s*u*r-c*n*l+t*u*l+s*n*d-t*a*d)*b;e[12]=v*b;e[13]=(c*p*i-f*u*i+f*n*h-t*p*h-c*n*m+t*u*m)*b;e[14]=(f*a*i-s*p*i-f*n*o+t*p*o+s*n*m-t*a*m)*b;e[15]=(s*u*i-c*a*i+c*n*o-t*u*o-s*n*h+t*a*h)*b;return this}scale(e){const t=this.elements;const n=e.x,i=e.y,r=e.z;t[0]*=n;t[4]*=i;t[8]*=r;t[1]*=n;t[5]*=i;t[9]*=r;t[2]*=n;t[6]*=i;t[10]*=r;t[3]*=n;t[7]*=i;t[11]*=r;return this}getMaxScaleOnAxis(){const e=this.elements;const t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];const n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6];const i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1);return this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1);return this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1);return this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1);return this}makeRotationAxis(e,t){const n=Math.cos(t);const i=Math.sin(t);const r=1-n;const s=e.x,a=e.y,o=e.z;const l=r*s,c=r*a;this.set(l*s+n,l*a-i*o,l*o+i*a,0,l*a+i*o,c*a+n,c*o-i*s,0,l*o-i*a,c*o+i*s,r*o*o+n,0,0,0,0,1);return this}makeScale(e,t,n){this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1);return this}makeShear(e,t,n,i,r,s){this.set(1,n,r,0,e,1,s,0,t,i,1,0,0,0,0,1);return this}compose(e,t,n){const i=this.elements;const r=t._x,s=t._y,a=t._z,o=t._w;const l=r+r,c=s+s,u=a+a;const h=r*l,d=r*c,f=r*u;const p=s*c,m=s*u,g=a*u;const _=o*l,x=o*c,y=o*u;const v=n.x,M=n.y,b=n.z;i[0]=(1-(p+g))*v;i[1]=(d+y)*v;i[2]=(f-x)*v;i[3]=0;i[4]=(d-y)*M;i[5]=(1-(h+g))*M;i[6]=(m+_)*M;i[7]=0;i[8]=(f+x)*b;i[9]=(m-_)*b;i[10]=(1-(h+p))*b;i[11]=0;i[12]=e.x;i[13]=e.y;i[14]=e.z;i[15]=1;return this}decompose(e,t,n){const i=this.elements;let r=Qi.set(i[0],i[1],i[2]).length();const s=Qi.set(i[4],i[5],i[6]).length();const a=Qi.set(i[8],i[9],i[10]).length();const o=this.determinant();if(o<0)r=-r;e.x=i[12];e.y=i[13];e.z=i[14];er.copy(this);const l=1/r;const c=1/s;const u=1/a;er.elements[0]*=l;er.elements[1]*=l;er.elements[2]*=l;er.elements[4]*=c;er.elements[5]*=c;er.elements[6]*=c;er.elements[8]*=u;er.elements[9]*=u;er.elements[10]*=u;t.setFromRotationMatrix(er);n.x=r;n.y=s;n.z=a;return this}makePerspective(e,t,n,i,r,s){const a=this.elements;const o=2*r/(t-e);const l=2*r/(n-i);const c=(t+e)/(t-e);const u=(n+i)/(n-i);const h=-(s+r)/(s-r);const d=-2*s*r/(s-r);a[0]=o;a[4]=0;a[8]=c;a[12]=0;a[1]=0;a[5]=l;a[9]=u;a[13]=0;a[2]=0;a[6]=0;a[10]=h;a[14]=d;a[3]=0;a[7]=0;a[11]=-1;a[15]=0;return this}makeOrthographic(e,t,n,i,r,s){const a=this.elements;const o=1/(t-e);const l=1/(n-i);const c=1/(s-r);const u=(t+e)*o;const h=(n+i)*l;const d=(s+r)*c;a[0]=2*o;a[4]=0;a[8]=0;a[12]=-u;a[1]=0;a[5]=2*l;a[9]=0;a[13]=-h;a[2]=0;a[6]=0;a[10]=-2*c;a[14]=-d;a[3]=0;a[7]=0;a[11]=0;a[15]=1;return this}equals(e){const t=this.elements;const n=e.elements;for(let e=0;e<16;e++){if(t[e]!==n[e])return false}return true}fromArray(e,t=0){for(let n=0;n<16;n++){this.elements[n]=e[n+t]}return this}toArray(e=[],t=0){const n=this.elements;e[t]=n[0];e[t+1]=n[1];e[t+2]=n[2];e[t+3]=n[3];e[t+4]=n[4];e[t+5]=n[5];e[t+6]=n[6];e[t+7]=n[7];e[t+8]=n[8];e[t+9]=n[9];e[t+10]=n[10];e[t+11]=n[11];e[t+12]=n[12];e[t+13]=n[13];e[t+14]=n[14];e[t+15]=n[15];return e}}const Qi=new Qn;const er=new $i;const tr=new Qn(0,0,0);const nr=new Qn(1,1,1);const ir=new Qn;const rr=new Qn;const sr=new Qn;const ar=new $i;const or=new $n;class lr{constructor(e=0,t=0,n=0,i=lr.DEFAULT_ORDER){this.isEuler=true;this._x=e;this._y=t;this._z=n;this._order=i}get x(){return this._x}set x(e){this._x=e;this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e;this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e;this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e;this._onChangeCallback()}set(e,t,n,i=this._order){this._x=e;this._y=t;this._z=n;this._order=i;this._onChangeCallback();return this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this._onChangeCallback();return this}setFromRotationMatrix(e,t=this._order,n=true){const i=e.elements;const r=i[0],s=i[4],a=i[8];const o=i[1],l=i[5],c=i[9];const u=i[2],h=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(Sn(a,-1,1));if(Math.abs(a)<.9999999){this._x=Math.atan2(-c,d);this._z=Math.atan2(-s,r)}else{this._x=Math.atan2(h,l);this._z=0}break;case"YXZ":this._x=Math.asin(-Sn(c,-1,1));if(Math.abs(c)<.9999999){this._y=Math.atan2(a,d);this._z=Math.atan2(o,l)}else{this._y=Math.atan2(-u,r);this._z=0}break;case"ZXY":this._x=Math.asin(Sn(h,-1,1));if(Math.abs(h)<.9999999){this._y=Math.atan2(-u,d);this._z=Math.atan2(-s,l)}else{this._y=0;this._z=Math.atan2(o,r)}break;case"ZYX":this._y=Math.asin(-Sn(u,-1,1));if(Math.abs(u)<.9999999){this._x=Math.atan2(h,d);this._z=Math.atan2(o,r)}else{this._x=0;this._z=Math.atan2(-s,l)}break;case"YZX":this._z=Math.asin(Sn(o,-1,1));if(Math.abs(o)<.9999999){this._x=Math.atan2(-c,l);this._y=Math.atan2(-u,r)}else{this._x=0;this._y=Math.atan2(a,d)}break;case"XZY":this._z=Math.asin(-Sn(s,-1,1));if(Math.abs(s)<.9999999){this._x=Math.atan2(h,l);this._y=Math.atan2(a,r)}else{this._x=Math.atan2(-c,d);this._y=0}break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}this._order=t;if(n===true)this._onChangeCallback();return this}setFromQuaternion(e,t,n){ar.makeRotationFromQuaternion(e);return this.setFromRotationMatrix(ar,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){or.setFromEuler(this);return this.setFromQuaternion(or,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){this._x=e[0];this._y=e[1];this._z=e[2];if(e[3]!==undefined)this._order=e[3];this._onChangeCallback();return this}toArray(e=[],t=0){e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._order;return e}_onChange(e){this._onChangeCallback=e;return this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x;yield this._y;yield this._z;yield this._order}}lr.DEFAULT_ORDER="XYZ";class cr{constructor(){this.mask=1|0}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ur=0;const hr=new Qn;const dr=new $n;const fr=new $i;const pr=new Qn;const mr=new Qn;const gr=new Qn;const _r=new $n;const xr=new Qn(1,0,0);const yr=new Qn(0,1,0);const vr=new Qn(0,0,1);const Mr={type:"added"};const br={type:"removed"};class Sr extends _n{constructor(){super();this.isObject3D=true;Object.defineProperty(this,"id",{value:ur++});this.uuid=bn();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=Sr.DEFAULT_UP.clone();const e=new Qn;const t=new lr;const n=new $n;const i=new Qn(1,1,1);function r(){n.setFromEuler(t,false)}function s(){t.setFromQuaternion(n,undefined,false)}t._onChange(r);n._onChange(s);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:e},rotation:{configurable:true,enumerable:true,value:t},quaternion:{configurable:true,enumerable:true,value:n},scale:{configurable:true,enumerable:true,value:i},modelViewMatrix:{value:new $i},normalMatrix:{value:new jn}});this.matrix=new $i;this.matrixWorld=new $i;this.matrixAutoUpdate=Sr.DEFAULT_MATRIX_AUTO_UPDATE;this.matrixWorldNeedsUpdate=false;this.matrixWorldAutoUpdate=Sr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;this.layers=new cr;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(e);this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){this.quaternion.premultiply(e);return this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,true)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){dr.setFromAxisAngle(e,t);this.quaternion.multiply(dr);return this}rotateOnWorldAxis(e,t){dr.setFromAxisAngle(e,t);this.quaternion.premultiply(dr);return this}rotateX(e){return this.rotateOnAxis(xr,e)}rotateY(e){return this.rotateOnAxis(yr,e)}rotateZ(e){return this.rotateOnAxis(vr,e)}translateOnAxis(e,t){hr.copy(e).applyQuaternion(this.quaternion);this.position.add(hr.multiplyScalar(t));return this}translateX(e){return this.translateOnAxis(xr,e)}translateY(e){return this.translateOnAxis(yr,e)}translateZ(e){return this.translateOnAxis(vr,e)}localToWorld(e){this.updateWorldMatrix(true,false);return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){this.updateWorldMatrix(true,false);return e.applyMatrix4(fr.copy(this.matrixWorld).invert())}lookAt(e,t,n){if(e.isVector3){pr.copy(e)}else{pr.set(e,t,n)}const i=this.parent;this.updateWorldMatrix(true,false);mr.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){fr.lookAt(mr,pr,this.up)}else{fr.lookAt(pr,mr,this.up)}this.quaternion.setFromRotationMatrix(fr);if(i){fr.extractRotation(i.matrixWorld);dr.setFromRotationMatrix(fr);this.quaternion.premultiply(dr.invert())}}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++){this.add(arguments[e])}return this}if(e===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",e);return this}if(e&&e.isObject3D){if(e.parent!==null){e.parent.remove(e)}e.parent=this;this.children.push(e);e.dispatchEvent(Mr)}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e)}return this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++){this.remove(arguments[e])}return this}const t=this.children.indexOf(e);if(t!==-1){e.parent=null;this.children.splice(t,1);e.dispatchEvent(br)}return this}removeFromParent(){const e=this.parent;if(e!==null){e.remove(this)}return this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null;t.dispatchEvent(br)}this.children.length=0;return this}attach(e){this.updateWorldMatrix(true,false);fr.copy(this.matrixWorld).invert();if(e.parent!==null){e.parent.updateWorldMatrix(true,false);fr.multiply(e.parent.matrixWorld)}e.applyMatrix4(fr);this.add(e);e.updateWorldMatrix(false,true);return this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n];const r=i.getObjectByProperty(e,t);if(r!==undefined){return r}}return undefined}getObjectsByProperty(e,t){let n=[];if(this[e]===t)n.push(this);for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectsByProperty(e,t);if(r.length>0){n=n.concat(r)}}return n}getWorldPosition(e){this.updateWorldMatrix(true,false);return e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){this.updateWorldMatrix(true,false);this.matrixWorld.decompose(mr,e,gr);return e}getWorldScale(e){this.updateWorldMatrix(true,false);this.matrixWorld.decompose(mr,_r,e);return e}getWorldDirection(e){this.updateWorldMatrix(true,false);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++){t[n].traverse(e)}}traverseVisible(e){if(this.visible===false)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++){t[n].traverseVisible(e)}}traverseAncestors(e){const t=this.parent;if(t!==null){e(t);t.traverseAncestors(e)}}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true}updateMatrixWorld(e){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;e=true}const t=this.children;for(let n=0,i=t.length;n<i;n++){const i=t[n];if(i.matrixWorldAutoUpdate===true||e===true){i.updateMatrixWorld(e)}}}updateWorldMatrix(e,t){const n=this.parent;if(e===true&&n!==null&&n.matrixWorldAutoUpdate===true){n.updateWorldMatrix(true,false)}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}if(t===true){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];if(n.matrixWorldAutoUpdate===true){n.updateWorldMatrix(false,true)}}}}toJSON(e){const t=e===undefined||typeof e==="string";const n={};if(t){e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}};n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}}const i={};i.uuid=this.uuid;i.type=this.type;if(this.name!=="")i.name=this.name;if(this.castShadow===true)i.castShadow=true;if(this.receiveShadow===true)i.receiveShadow=true;if(this.visible===false)i.visible=false;if(this.frustumCulled===false)i.frustumCulled=false;if(this.renderOrder!==0)i.renderOrder=this.renderOrder;if(Object.keys(this.userData).length>0)i.userData=this.userData;i.layers=this.layers.mask;i.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)i.matrixAutoUpdate=false;if(this.isInstancedMesh){i.type="InstancedMesh";i.count=this.count;i.instanceMatrix=this.instanceMatrix.toJSON();if(this.instanceColor!==null)i.instanceColor=this.instanceColor.toJSON()}function r(t,n){if(t[n.uuid]===undefined){t[n.uuid]=n.toJSON(e)}return n.uuid}if(this.isScene){if(this.background){if(this.background.isColor){i.background=this.background.toJSON()}else if(this.background.isTexture){i.background=this.background.toJSON(e).uuid}}if(this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==true){i.environment=this.environment.toJSON(e).uuid}}else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(t!==undefined&&t.shapes!==undefined){const n=t.shapes;if(Array.isArray(n)){for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}}else{r(e.shapes,n)}}}if(this.isSkinnedMesh){i.bindMode=this.bindMode;i.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){r(e.skeletons,this.skeleton);i.skeleton=this.skeleton.uuid}}if(this.material!==undefined){if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++){t.push(r(e.materials,this.material[n]))}i.material=t}else{i.material=r(e.materials,this.material)}}if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++){i.children.push(this.children[t].toJSON(e).object)}}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=s(e.geometries);const i=s(e.materials);const r=s(e.textures);const a=s(e.images);const o=s(e.shapes);const l=s(e.skeletons);const c=s(e.animations);const u=s(e.nodes);if(t.length>0)n.geometries=t;if(i.length>0)n.materials=i;if(r.length>0)n.textures=r;if(a.length>0)n.images=a;if(o.length>0)n.shapes=o;if(l.length>0)n.skeletons=l;if(c.length>0)n.animations=c;if(u.length>0)n.nodes=u}n.object=i;return n;function s(e){const t=[];for(const n in e){const i=e[n];delete i.metadata;t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=true){this.name=e.name;this.up.copy(e.up);this.position.copy(e.position);this.rotation.order=e.rotation.order;this.quaternion.copy(e.quaternion);this.scale.copy(e.scale);this.matrix.copy(e.matrix);this.matrixWorld.copy(e.matrixWorld);this.matrixAutoUpdate=e.matrixAutoUpdate;this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate;this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate;this.layers.mask=e.layers.mask;this.visible=e.visible;this.castShadow=e.castShadow;this.receiveShadow=e.receiveShadow;this.frustumCulled=e.frustumCulled;this.renderOrder=e.renderOrder;this.userData=JSON.parse(JSON.stringify(e.userData));if(t===true){for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}}return this}}Sr.DEFAULT_UP=new Qn(0,1,0);Sr.DEFAULT_MATRIX_AUTO_UPDATE=true;Sr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=true;const Tr=new Qn;const wr=new Qn;const Er=new Qn;const Ar=new Qn;const Rr=new Qn;const Cr=new Qn;const Lr=new Qn;const Pr=new Qn;const Ir=new Qn;const Dr=new Qn;class Nr{constructor(e=new Qn,t=new Qn,n=new Qn){this.a=e;this.b=t;this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t);Tr.subVectors(e,t);i.cross(Tr);const r=i.lengthSq();if(r>0){return i.multiplyScalar(1/Math.sqrt(r))}return i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Tr.subVectors(i,t);wr.subVectors(n,t);Er.subVectors(e,t);const s=Tr.dot(Tr);const a=Tr.dot(wr);const o=Tr.dot(Er);const l=wr.dot(wr);const c=wr.dot(Er);const u=s*l-a*a;if(u===0){return r.set(-2,-1,-1)}const h=1/u;const d=(l*o-a*c)*h;const f=(s*c-a*o)*h;return r.set(1-d-f,f,d)}static containsPoint(e,t,n,i){this.getBarycoord(e,t,n,i,Ar);return Ar.x>=0&&Ar.y>=0&&Ar.x+Ar.y<=1}static getUV(e,t,n,i,r,s,a,o){this.getBarycoord(e,t,n,i,Ar);o.set(0,0);o.addScaledVector(r,Ar.x);o.addScaledVector(s,Ar.y);o.addScaledVector(a,Ar.z);return o}static isFrontFacing(e,t,n,i){Tr.subVectors(n,t);wr.subVectors(e,t);return Tr.cross(wr).dot(i)<0?true:false}set(e,t,n){this.a.copy(e);this.b.copy(t);this.c.copy(n);return this}setFromPointsAndIndices(e,t,n,i){this.a.copy(e[t]);this.b.copy(e[n]);this.c.copy(e[i]);return this}setFromAttributeAndIndices(e,t,n,i){this.a.fromBufferAttribute(e,t);this.b.fromBufferAttribute(e,n);this.c.fromBufferAttribute(e,i);return this}clone(){return(new this.constructor).copy(this)}copy(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this}getArea(){Tr.subVectors(this.c,this.b);wr.subVectors(this.a,this.b);return Tr.cross(wr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Nr.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Nr.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return Nr.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Nr.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Nr.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let s,a;
// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
// under the accompanying license; see chapter 5.1.5 for detailed explanation.
Rr.subVectors(i,n);Cr.subVectors(r,n);Pr.subVectors(e,n);const o=Rr.dot(Pr);const l=Cr.dot(Pr);if(o<=0&&l<=0){return t.copy(n)}Ir.subVectors(e,i);const c=Rr.dot(Ir);const u=Cr.dot(Ir);if(c>=0&&u<=c){return t.copy(i)}const h=o*u-c*l;if(h<=0&&o>=0&&c<=0){s=o/(o-c);return t.copy(n).addScaledVector(Rr,s)}Dr.subVectors(e,r);const d=Rr.dot(Dr);const f=Cr.dot(Dr);if(f>=0&&d<=f){return t.copy(r)}const p=d*l-o*f;if(p<=0&&l>=0&&f<=0){a=l/(l-f);return t.copy(n).addScaledVector(Cr,a)}const m=c*f-d*u;if(m<=0&&u-c>=0&&d-f>=0){Lr.subVectors(r,i);a=(u-c)/(u-c+(d-f));return t.copy(i).addScaledVector(Lr,a)}const g=1/(m+p+h);s=p*g;a=h*g;return t.copy(n).addScaledVector(Rr,s).addScaledVector(Cr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Or=0;class Ur extends _n{constructor(){super();this.isMaterial=true;Object.defineProperty(this,"id",{value:Or++});this.uuid=bn();this.name="";this.type="Material";this.blending=_;this.side=d;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=P;this.blendDst=I;this.blendEquation=b;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=k;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=255;this.stencilFunc=rn;this.stencilRef=0;this.stencilFuncMask=255;this.stencilFail=Vt;this.stencilZFail=Vt;this.stencilZPass=Vt;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaToCoverage=false;this.premultipliedAlpha=false;this.forceSinglePass=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0;this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){if(this._alphaTest>0!==e>0){this.version++}this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e===undefined)return;for(const t in e){const n=e[t];if(n===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===undefined){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}if(i&&i.isColor){i.set(n)}else if(i&&i.isVector3&&(n&&n.isVector3)){i.copy(n)}else{this[t]=n}}}toJSON(e){const t=e===undefined||typeof e==="string";if(t){e={textures:{},images:{}}}const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid;n.type=this.type;if(this.name!=="")n.name=this.name;if(this.color&&this.color.isColor)n.color=this.color.getHex();if(this.roughness!==undefined)n.roughness=this.roughness;if(this.metalness!==undefined)n.metalness=this.metalness;if(this.sheen!==undefined)n.sheen=this.sheen;if(this.sheenColor&&this.sheenColor.isColor)n.sheenColor=this.sheenColor.getHex();if(this.sheenRoughness!==undefined)n.sheenRoughness=this.sheenRoughness;if(this.emissive&&this.emissive.isColor)n.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)n.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)n.specular=this.specular.getHex();if(this.specularIntensity!==undefined)n.specularIntensity=this.specularIntensity;if(this.specularColor&&this.specularColor.isColor)n.specularColor=this.specularColor.getHex();if(this.shininess!==undefined)n.shininess=this.shininess;if(this.clearcoat!==undefined)n.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)n.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid;n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()}if(this.iridescence!==undefined)n.iridescence=this.iridescence;if(this.iridescenceIOR!==undefined)n.iridescenceIOR=this.iridescenceIOR;if(this.iridescenceThicknessRange!==undefined)n.iridescenceThicknessRange=this.iridescenceThicknessRange;if(this.iridescenceMap&&this.iridescenceMap.isTexture){n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid}if(this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture){n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid}if(this.map&&this.map.isTexture)n.map=this.map.toJSON(e).uuid;if(this.matcap&&this.matcap.isTexture)n.matcap=this.matcap.toJSON(e).uuid;if(this.alphaMap&&this.alphaMap.isTexture)n.alphaMap=this.alphaMap.toJSON(e).uuid;if(this.lightMap&&this.lightMap.isTexture){n.lightMap=this.lightMap.toJSON(e).uuid;n.lightMapIntensity=this.lightMapIntensity}if(this.aoMap&&this.aoMap.isTexture){n.aoMap=this.aoMap.toJSON(e).uuid;n.aoMapIntensity=this.aoMapIntensity}if(this.bumpMap&&this.bumpMap.isTexture){n.bumpMap=this.bumpMap.toJSON(e).uuid;n.bumpScale=this.bumpScale}if(this.normalMap&&this.normalMap.isTexture){n.normalMap=this.normalMap.toJSON(e).uuid;n.normalMapType=this.normalMapType;n.normalScale=this.normalScale.toArray()}if(this.displacementMap&&this.displacementMap.isTexture){n.displacementMap=this.displacementMap.toJSON(e).uuid;n.displacementScale=this.displacementScale;n.displacementBias=this.displacementBias}if(this.roughnessMap&&this.roughnessMap.isTexture)n.roughnessMap=this.roughnessMap.toJSON(e).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)n.metalnessMap=this.metalnessMap.toJSON(e).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)n.emissiveMap=this.emissiveMap.toJSON(e).uuid;if(this.specularMap&&this.specularMap.isTexture)n.specularMap=this.specularMap.toJSON(e).uuid;if(this.specularIntensityMap&&this.specularIntensityMap.isTexture)n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid;if(this.specularColorMap&&this.specularColorMap.isTexture)n.specularColorMap=this.specularColorMap.toJSON(e).uuid;if(this.envMap&&this.envMap.isTexture){n.envMap=this.envMap.toJSON(e).uuid;if(this.combine!==undefined)n.combine=this.combine}if(this.envMapIntensity!==undefined)n.envMapIntensity=this.envMapIntensity;if(this.reflectivity!==undefined)n.reflectivity=this.reflectivity;if(this.refractionRatio!==undefined)n.refractionRatio=this.refractionRatio;if(this.gradientMap&&this.gradientMap.isTexture){n.gradientMap=this.gradientMap.toJSON(e).uuid}if(this.transmission!==undefined)n.transmission=this.transmission;if(this.transmissionMap&&this.transmissionMap.isTexture)n.transmissionMap=this.transmissionMap.toJSON(e).uuid;if(this.thickness!==undefined)n.thickness=this.thickness;if(this.thicknessMap&&this.thicknessMap.isTexture)n.thicknessMap=this.thicknessMap.toJSON(e).uuid;if(this.attenuationDistance!==undefined&&this.attenuationDistance!==Infinity)n.attenuationDistance=this.attenuationDistance;if(this.attenuationColor!==undefined)n.attenuationColor=this.attenuationColor.getHex();if(this.size!==undefined)n.size=this.size;if(this.shadowSide!==null)n.shadowSide=this.shadowSide;if(this.sizeAttenuation!==undefined)n.sizeAttenuation=this.sizeAttenuation;if(this.blending!==_)n.blending=this.blending;if(this.side!==d)n.side=this.side;if(this.vertexColors)n.vertexColors=true;if(this.opacity<1)n.opacity=this.opacity;if(this.transparent===true)n.transparent=this.transparent;n.depthFunc=this.depthFunc;n.depthTest=this.depthTest;n.depthWrite=this.depthWrite;n.colorWrite=this.colorWrite;n.stencilWrite=this.stencilWrite;n.stencilWriteMask=this.stencilWriteMask;n.stencilFunc=this.stencilFunc;n.stencilRef=this.stencilRef;n.stencilFuncMask=this.stencilFuncMask;n.stencilFail=this.stencilFail;n.stencilZFail=this.stencilZFail;n.stencilZPass=this.stencilZPass;if(this.rotation!==undefined&&this.rotation!==0)n.rotation=this.rotation;if(this.polygonOffset===true)n.polygonOffset=true;if(this.polygonOffsetFactor!==0)n.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)n.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth!==undefined&&this.linewidth!==1)n.linewidth=this.linewidth;if(this.dashSize!==undefined)n.dashSize=this.dashSize;if(this.gapSize!==undefined)n.gapSize=this.gapSize;if(this.scale!==undefined)n.scale=this.scale;if(this.dithering===true)n.dithering=true;if(this.alphaTest>0)n.alphaTest=this.alphaTest;if(this.alphaToCoverage===true)n.alphaToCoverage=this.alphaToCoverage;if(this.premultipliedAlpha===true)n.premultipliedAlpha=this.premultipliedAlpha;if(this.forceSinglePass===true)n.forceSinglePass=this.forceSinglePass;if(this.wireframe===true)n.wireframe=this.wireframe;if(this.wireframeLinewidth>1)n.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=="round")n.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=="round")n.wireframeLinejoin=this.wireframeLinejoin;if(this.flatShading===true)n.flatShading=this.flatShading;if(this.visible===false)n.visible=false;if(this.toneMapped===false)n.toneMapped=false;if(this.fog===false)n.fog=false;if(Object.keys(this.userData).length>0)n.userData=this.userData;function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata;t.push(i)}return t}if(t){const t=i(e.textures);const r=i(e.images);if(t.length>0)n.textures=t;if(r.length>0)n.images=r}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name;this.blending=e.blending;this.side=e.side;this.vertexColors=e.vertexColors;this.opacity=e.opacity;this.transparent=e.transparent;this.blendSrc=e.blendSrc;this.blendDst=e.blendDst;this.blendEquation=e.blendEquation;this.blendSrcAlpha=e.blendSrcAlpha;this.blendDstAlpha=e.blendDstAlpha;this.blendEquationAlpha=e.blendEquationAlpha;this.depthFunc=e.depthFunc;this.depthTest=e.depthTest;this.depthWrite=e.depthWrite;this.stencilWriteMask=e.stencilWriteMask;this.stencilFunc=e.stencilFunc;this.stencilRef=e.stencilRef;this.stencilFuncMask=e.stencilFuncMask;this.stencilFail=e.stencilFail;this.stencilZFail=e.stencilZFail;this.stencilZPass=e.stencilZPass;this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i){n[i]=t[i].clone()}}this.clippingPlanes=n;this.clipIntersection=e.clipIntersection;this.clipShadows=e.clipShadows;this.shadowSide=e.shadowSide;this.colorWrite=e.colorWrite;this.precision=e.precision;this.polygonOffset=e.polygonOffset;this.polygonOffsetFactor=e.polygonOffsetFactor;this.polygonOffsetUnits=e.polygonOffsetUnits;this.dithering=e.dithering;this.alphaTest=e.alphaTest;this.alphaToCoverage=e.alphaToCoverage;this.premultipliedAlpha=e.premultipliedAlpha;this.forceSinglePass=e.forceSinglePass;this.visible=e.visible;this.toneMapped=e.toneMapped;this.userData=JSON.parse(JSON.stringify(e.userData));return this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){if(e===true)this.version++}}const Fr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};const Br={h:0,s:0,l:0};const zr={h:0,s:0,l:0};function Gr(e,t,n){if(n<0)n+=1;if(n>1)n-=1;if(n<1/6)return e+(t-e)*6*n;if(n<1/2)return t;if(n<2/3)return e+(t-e)*6*(2/3-n);return e}class kr{constructor(e,t,n){this.isColor=true;this.r=1;this.g=1;this.b=1;if(t===undefined&&n===undefined){return this.set(e)}return this.setRGB(e,t,n)}set(e){if(e&&e.isColor){this.copy(e)}else if(typeof e==="number"){this.setHex(e)}else if(typeof e==="string"){this.setStyle(e)}return this}setScalar(e){this.r=e;this.g=e;this.b=e;return this}setHex(e,t=zt){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;hi.toWorkingColorSpace(this,t);return this}setRGB(e,t,n,i=hi.workingColorSpace){this.r=e;this.g=t;this.b=n;hi.toWorkingColorSpace(this,i);return this}setHSL(e,t,n,i=hi.workingColorSpace){e=Tn(e,1);t=Sn(t,0,1);n=Sn(n,0,1);if(t===0){this.r=this.g=this.b=n}else{const i=n<=.5?n*(1+t):n+t-n*t;const r=2*n-i;this.r=Gr(r,i,e+1/3);this.g=Gr(r,i,e);this.b=Gr(r,i,e-1/3)}hi.toWorkingColorSpace(this,i);return this}setStyle(e,t=zt){function n(t){if(t===undefined)return;if(parseFloat(t)<1){console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const s=i[1];const a=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){this.r=Math.min(255,parseInt(r[1],10))/255;this.g=Math.min(255,parseInt(r[2],10))/255;this.b=Math.min(255,parseInt(r[3],10))/255;hi.toWorkingColorSpace(this,t);n(r[4]);return this}if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){this.r=Math.min(100,parseInt(r[1],10))/100;this.g=Math.min(100,parseInt(r[2],10))/100;this.b=Math.min(100,parseInt(r[3],10))/100;hi.toWorkingColorSpace(this,t);n(r[4]);return this}break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const e=parseFloat(r[1])/360;const i=parseFloat(r[2])/100;const s=parseFloat(r[3])/100;n(r[4]);return this.setHSL(e,i,s,t)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=i[1];const r=n.length;if(r===3){this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255;this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255;this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255;hi.toWorkingColorSpace(this,t);return this}else if(r===6){this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255;this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255;this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255;hi.toWorkingColorSpace(this,t);return this}else{console.warn("THREE.Color: Invalid hex color "+e)}}else if(e&&e.length>0){return this.setColorName(e,t)}return this}setColorName(e,t=zt){const n=Fr[e.toLowerCase()];if(n!==undefined){this.setHex(n,t)}else{console.warn("THREE.Color: Unknown color "+e)}return this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){this.r=e.r;this.g=e.g;this.b=e.b;return this}copySRGBToLinear(e){this.r=ni(e.r);this.g=ni(e.g);this.b=ni(e.b);return this}copyLinearToSRGB(e){this.r=ii(e.r);this.g=ii(e.g);this.b=ii(e.b);return this}convertSRGBToLinear(){this.copySRGBToLinear(this);return this}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this}getHex(e=zt){hi.fromWorkingColorSpace(Hr.copy(this),e);return Sn(Hr.r*255,0,255)<<16^Sn(Hr.g*255,0,255)<<8^Sn(Hr.b*255,0,255)<<0}getHexString(e=zt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=hi.workingColorSpace){hi.fromWorkingColorSpace(Hr.copy(this),t);const n=Hr.r,i=Hr.g,r=Hr.b;const s=Math.max(n,i,r);const a=Math.min(n,i,r);let o,l;const c=(a+s)/2;if(a===s){o=0;l=0}else{const e=s-a;l=c<=.5?e/(s+a):e/(2-s-a);switch(s){case n:o=(i-r)/e+(i<r?6:0);break;case i:o=(r-n)/e+2;break;case r:o=(n-i)/e+4;break}o/=6}e.h=o;e.s=l;e.l=c;return e}getRGB(e,t=hi.workingColorSpace){hi.fromWorkingColorSpace(Hr.copy(this),t);e.r=Hr.r;e.g=Hr.g;e.b=Hr.b;return e}getStyle(e=zt){hi.fromWorkingColorSpace(Hr.copy(this),e);const t=Hr.r,n=Hr.g,i=Hr.b;if(e!==zt){return`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`}return`rgb(${t*255|0},${n*255|0},${i*255|0})`}offsetHSL(e,t,n){this.getHSL(Br);Br.h+=e;Br.s+=t;Br.l+=n;this.setHSL(Br.h,Br.s,Br.l);return this}add(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this}addColors(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this}addScalar(e){this.r+=e;this.g+=e;this.b+=e;return this}sub(e){this.r=Math.max(0,this.r-e.r);this.g=Math.max(0,this.g-e.g);this.b=Math.max(0,this.b-e.b);return this}multiply(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this}multiplyScalar(e){this.r*=e;this.g*=e;this.b*=e;return this}lerp(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this}lerpColors(e,t,n){this.r=e.r+(t.r-e.r)*n;this.g=e.g+(t.g-e.g)*n;this.b=e.b+(t.b-e.b)*n;return this}lerpHSL(e,t){this.getHSL(Br);e.getHSL(zr);const n=An(Br.h,zr.h,t);const i=An(Br.s,zr.s,t);const r=An(Br.l,zr.l,t);this.setHSL(n,i,r);return this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){this.r=e[t];this.g=e[t+1];this.b=e[t+2];return this}toArray(e=[],t=0){e[t]=this.r;e[t+1]=this.g;e[t+2]=this.b;return e}fromBufferAttribute(e,t){this.r=e.getX(t);this.g=e.getY(t);this.b=e.getZ(t);return this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r;yield this.g;yield this.b}}const Hr=new kr;kr.NAMES=Fr;class Vr extends Ur{constructor(e){super();this.isMeshBasicMaterial=true;this.type="MeshBasicMaterial";this.color=new kr(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=j;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.fog=e.fog;return this}}const Wr=new Qn;const Xr=new Xn;class jr{constructor(e,t,n=false){if(Array.isArray(e)){throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.")}this.isBufferAttribute=true;this.name="";this.array=e;this.itemSize=t;this.count=e!==undefined?e.length/t:0;this.normalized=n;this.usage=sn;this.updateRange={offset:0,count:-1};this.version=0}onUploadCallback(){}set needsUpdate(e){if(e===true)this.version++}setUsage(e){this.usage=e;return this}copy(e){this.name=e.name;this.array=new e.array.constructor(e.array);this.itemSize=e.itemSize;this.count=e.count;this.normalized=e.normalized;this.usage=e.usage;return this}copyAt(e,t,n){e*=this.itemSize;n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++){this.array[e+i]=t.array[n+i]}return this}copyArray(e){this.array.set(e);return this}applyMatrix3(e){if(this.itemSize===2){for(let t=0,n=this.count;t<n;t++){Xr.fromBufferAttribute(this,t);Xr.applyMatrix3(e);this.setXY(t,Xr.x,Xr.y)}}else if(this.itemSize===3){for(let t=0,n=this.count;t<n;t++){Wr.fromBufferAttribute(this,t);Wr.applyMatrix3(e);this.setXYZ(t,Wr.x,Wr.y,Wr.z)}}return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++){Wr.fromBufferAttribute(this,t);Wr.applyMatrix4(e);this.setXYZ(t,Wr.x,Wr.y,Wr.z)}return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++){Wr.fromBufferAttribute(this,t);Wr.applyNormalMatrix(e);this.setXYZ(t,Wr.x,Wr.y,Wr.z)}return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++){Wr.fromBufferAttribute(this,t);Wr.transformDirection(e);this.setXYZ(t,Wr.x,Wr.y,Wr.z)}return this}set(e,t=0){this.array.set(e,t);return this}getX(e){let t=this.array[e*this.itemSize];if(this.normalized)t=Hn(t,this.array);return t}setX(e,t){if(this.normalized)t=Vn(t,this.array);this.array[e*this.itemSize]=t;return this}getY(e){let t=this.array[e*this.itemSize+1];if(this.normalized)t=Hn(t,this.array);return t}setY(e,t){if(this.normalized)t=Vn(t,this.array);this.array[e*this.itemSize+1]=t;return this}getZ(e){let t=this.array[e*this.itemSize+2];if(this.normalized)t=Hn(t,this.array);return t}setZ(e,t){if(this.normalized)t=Vn(t,this.array);this.array[e*this.itemSize+2]=t;return this}getW(e){let t=this.array[e*this.itemSize+3];if(this.normalized)t=Hn(t,this.array);return t}setW(e,t){if(this.normalized)t=Vn(t,this.array);this.array[e*this.itemSize+3]=t;return this}setXY(e,t,n){e*=this.itemSize;if(this.normalized){t=Vn(t,this.array);n=Vn(n,this.array)}this.array[e+0]=t;this.array[e+1]=n;return this}setXYZ(e,t,n,i){e*=this.itemSize;if(this.normalized){t=Vn(t,this.array);n=Vn(n,this.array);i=Vn(i,this.array)}this.array[e+0]=t;this.array[e+1]=n;this.array[e+2]=i;return this}setXYZW(e,t,n,i,r){e*=this.itemSize;if(this.normalized){t=Vn(t,this.array);n=Vn(n,this.array);i=Vn(i,this.array);r=Vn(r,this.array)}this.array[e+0]=t;this.array[e+1]=n;this.array[e+2]=i;this.array[e+3]=r;return this}onUpload(e){this.onUploadCallback=e;return this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};if(this.name!=="")e.name=this.name;if(this.usage!==sn)e.usage=this.usage;if(this.updateRange.offset!==0||this.updateRange.count!==-1)e.updateRange=this.updateRange;return e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class qr extends jr{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Yr extends jr{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Zr extends jr{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Jr extends jr{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Kr extends jr{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class $r extends jr{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Qr extends jr{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class es extends jr{constructor(e,t,n){super(new Uint16Array(e),t,n);this.isFloat16BufferAttribute=true}}class ts extends jr{constructor(e,t,n){super(new Float32Array(e),t,n)}}class ns extends jr{constructor(e,t,n){super(new Float64Array(e),t,n)}}let is=0;const rs=new $i;const ss=new Sr;const as=new Qn;const os=new wi;const ls=new wi;const cs=new Qn;class us extends _n{constructor(){super();this.isBufferGeometry=true;Object.defineProperty(this,"id",{value:is++});this.uuid=bn();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={}}getIndex(){return this.index}setIndex(e){if(Array.isArray(e)){this.index=new(Yn(e)?Qr:Kr)(e,1)}else{this.index=e}return this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){this.attributes[e]=t;return this}deleteAttribute(e){delete this.attributes[e];return this}hasAttribute(e){return this.attributes[e]!==undefined}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e;this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;if(t!==undefined){t.applyMatrix4(e);t.needsUpdate=true}const n=this.attributes.normal;if(n!==undefined){const t=(new jn).getNormalMatrix(e);n.applyNormalMatrix(t);n.needsUpdate=true}const i=this.attributes.tangent;if(i!==undefined){i.transformDirection(e);i.needsUpdate=true}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}return this}applyQuaternion(e){rs.makeRotationFromQuaternion(e);this.applyMatrix4(rs);return this}rotateX(e){rs.makeRotationX(e);this.applyMatrix4(rs);return this}rotateY(e){rs.makeRotationY(e);this.applyMatrix4(rs);return this}rotateZ(e){rs.makeRotationZ(e);this.applyMatrix4(rs);return this}translate(e,t,n){rs.makeTranslation(e,t,n);this.applyMatrix4(rs);return this}scale(e,t,n){rs.makeScale(e,t,n);this.applyMatrix4(rs);return this}lookAt(e){ss.lookAt(e);ss.updateMatrix();this.applyMatrix4(ss.matrix);return this}center(){this.computeBoundingBox();this.boundingBox.getCenter(as).negate();this.translate(as.x,as.y,as.z);return this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}this.setAttribute("position",new ts(t,3));return this}computeBoundingBox(e,t){if(this.boundingBox===null){this.boundingBox=new wi}const n=this.attributes.position;const i=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingBox.set(new Qn(-Infinity,-Infinity,-Infinity),new Qn(+Infinity,+Infinity,+Infinity));return}if(n!==undefined){this.boundingBox.setFromBufferAttribute(n,e,t);if(i){for(let e=0,t=i.length;e<t;e++){const t=i[e];os.setFromBufferAttribute(t);if(this.morphTargetsRelative){cs.addVectors(this.boundingBox.min,os.min);this.boundingBox.expandByPoint(cs);cs.addVectors(this.boundingBox.max,os.max);this.boundingBox.expandByPoint(cs)}else{this.boundingBox.expandByPoint(os.min);this.boundingBox.expandByPoint(os.max)}}}}else{this.boundingBox.makeEmpty()}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}computeBoundingSphere(e,t,n){if(this.boundingSphere===null){this.boundingSphere=new Vi}const i=this.attributes.position;const r=this.morphAttributes.position;if(i&&i.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingSphere.set(new Qn,Infinity);return}if(i){const s=this.boundingSphere.center;if(n){this.boundingBox.getCenter(s)}else{os.setFromBufferAttribute(i,e,t);if(r){for(let e=0,t=r.length;e<t;e++){const t=r[e];ls.setFromBufferAttribute(t);if(this.morphTargetsRelative){cs.addVectors(os.min,ls.min);os.expandByPoint(cs);cs.addVectors(os.max,ls.max);os.expandByPoint(cs)}else{os.expandByPoint(ls.min);os.expandByPoint(ls.max)}}}os.getCenter(s)}let a=0;for(let n=e===undefined?0:e,r=t===undefined?i.count:t;n<r;n++){cs.fromBufferAttribute(i,n);a=Math.max(a,s.distanceToSquared(cs))}if(r){for(let e=0,t=r.length;e<t;e++){const t=r[e];const n=this.morphTargetsRelative;for(let e=0,r=t.count;e<r;e++){cs.fromBufferAttribute(t,e);if(n){as.fromBufferAttribute(i,e);cs.add(as)}a=Math.max(a,s.distanceToSquared(cs))}}}this.boundingSphere.radius=Math.sqrt(a);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}computeTangents(){const e=this.index;const t=this.attributes;if(e===null||t.position===undefined||t.normal===undefined||t.uv===undefined){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array;const i=t.position.array;const r=t.normal.array;const s=t.uv.array;const a=i.length/3;if(this.hasAttribute("tangent")===false){this.setAttribute("tangent",new jr(new Float32Array(4*a),4))}const o=this.getAttribute("tangent").array;const l=[],c=[];for(let e=0;e<a;e++){l[e]=new Qn;c[e]=new Qn}const u=new Qn,h=new Qn,d=new Qn,f=new Xn,p=new Xn,m=new Xn,g=new Qn,_=new Qn;function x(e,t,n){u.fromArray(i,e*3);h.fromArray(i,t*3);d.fromArray(i,n*3);f.fromArray(s,e*2);p.fromArray(s,t*2);m.fromArray(s,n*2);h.sub(u);d.sub(u);p.sub(f);m.sub(f);const r=1/(p.x*m.y-m.x*p.y);if(!isFinite(r))return;g.copy(h).multiplyScalar(m.y).addScaledVector(d,-p.y).multiplyScalar(r);_.copy(d).multiplyScalar(p.x).addScaledVector(h,-m.x).multiplyScalar(r);l[e].add(g);l[t].add(g);l[n].add(g);c[e].add(_);c[t].add(_);c[n].add(_)}let y=this.groups;if(y.length===0){y=[{start:0,count:n.length}]}for(let e=0,t=y.length;e<t;++e){const t=y[e];const i=t.start;const r=t.count;for(let e=i,t=i+r;e<t;e+=3){x(n[e+0],n[e+1],n[e+2])}}const v=new Qn,M=new Qn;const b=new Qn,S=new Qn;function T(e){b.fromArray(r,e*3);S.copy(b);const t=l[e];v.copy(t);v.sub(b.multiplyScalar(b.dot(t))).normalize();M.crossVectors(S,t);const n=M.dot(c[e]);const i=n<0?-1:1;o[e*4]=v.x;o[e*4+1]=v.y;o[e*4+2]=v.z;o[e*4+3]=i}for(let e=0,t=y.length;e<t;++e){const t=y[e];const i=t.start;const r=t.count;for(let e=i,t=i+r;e<t;e+=3){T(n[e+0]);T(n[e+1]);T(n[e+2])}}}computeVertexNormals(){const e=this.index;const t=this.getAttribute("position");if(t!==undefined){let n=this.getAttribute("normal");if(n===undefined){n=new jr(new Float32Array(t.count*3),3);this.setAttribute("normal",n)}else{for(let e=0,t=n.count;e<t;e++){n.setXYZ(e,0,0,0)}}const i=new Qn,r=new Qn,s=new Qn;const a=new Qn,o=new Qn,l=new Qn;const c=new Qn,u=new Qn;if(e){for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0);const f=e.getX(h+1);const p=e.getX(h+2);i.fromBufferAttribute(t,d);r.fromBufferAttribute(t,f);s.fromBufferAttribute(t,p);c.subVectors(s,r);u.subVectors(i,r);c.cross(u);a.fromBufferAttribute(n,d);o.fromBufferAttribute(n,f);l.fromBufferAttribute(n,p);a.add(c);o.add(c);l.add(c);n.setXYZ(d,a.x,a.y,a.z);n.setXYZ(f,o.x,o.y,o.z);n.setXYZ(p,l.x,l.y,l.z)}}else{for(let e=0,a=t.count;e<a;e+=3){i.fromBufferAttribute(t,e+0);r.fromBufferAttribute(t,e+1);s.fromBufferAttribute(t,e+2);c.subVectors(s,r);u.subVectors(i,r);c.cross(u);n.setXYZ(e+0,c.x,c.y,c.z);n.setXYZ(e+1,c.x,c.y,c.z);n.setXYZ(e+2,c.x,c.y,c.z)}}this.normalizeNormals();n.needsUpdate=true}}merge(){console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.");return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++){cs.fromBufferAttribute(e,t);cs.normalize();e.setXYZ(t,cs.x,cs.y,cs.z)}}toNonIndexed(){function e(e,t){const n=e.array;const i=e.itemSize;const r=e.normalized;const s=new n.constructor(t.length*i);let a=0,o=0;for(let r=0,l=t.length;r<l;r++){if(e.isInterleavedBufferAttribute){a=t[r]*e.data.stride+e.offset}else{a=t[r]*i}for(let e=0;e<i;e++){s[o++]=n[a++]}}return new jr(s,i,r)}if(this.index===null){console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.");return this}const t=new us;const n=this.index.array;const i=this.attributes;for(const r in i){const s=i[r];const a=e(s,n);t.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const s=[];const a=r[i];for(let t=0,i=a.length;t<i;t++){const i=a[t];const r=e(i,n);s.push(r)}t.morphAttributes[i]=s}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,n=s.length;e<n;e++){const n=s[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;if(this.name!=="")e.name=this.name;if(Object.keys(this.userData).length>0)e.userData=this.userData;if(this.parameters!==undefined){const t=this.parameters;for(const n in t){if(t[n]!==undefined)e[n]=t[n]}return e}e.data={attributes:{}};const t=this.index;if(t!==null){e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)}}const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let r=false;for(const t in this.morphAttributes){const n=this.morphAttributes[t];const s=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];s.push(i.toJSON(e.data))}if(s.length>0){i[t]=s;r=true}}if(r){e.data.morphAttributes=i;e.data.morphTargetsRelative=this.morphTargetsRelative}const s=this.groups;if(s.length>0){e.data.groups=JSON.parse(JSON.stringify(s))}const a=this.boundingSphere;if(a!==null){e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}}return e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;if(n!==null){this.setIndex(n.clone(t))}const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const r=e.morphAttributes;for(const e in r){const n=[];const i=r[e];for(let e=0,r=i.length;e<r;e++){n.push(i[e].clone(t))}this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let e=0,t=s.length;e<t;e++){const t=s[e];this.addGroup(t.start,t.count,t.materialIndex)}const a=e.boundingBox;if(a!==null){this.boundingBox=a.clone()}const o=e.boundingSphere;if(o!==null){this.boundingSphere=o.clone()}this.drawRange.start=e.drawRange.start;this.drawRange.count=e.drawRange.count;this.userData=e.userData;return this}dispose(){this.dispatchEvent({type:"dispose"})}}const hs=new $i;const ds=new Ki;const fs=new Vi;const ps=new Qn;const ms=new Qn;const gs=new Qn;const _s=new Qn;const xs=new Qn;const ys=new Qn;const vs=new Xn;const Ms=new Xn;const bs=new Xn;const Ss=new Qn;const Ts=new Qn;class ws extends Sr{constructor(e=new us,t=new Vr){super();this.isMesh=true;this.type="Mesh";this.geometry=e;this.material=t;this.updateMorphTargets()}copy(e,t){super.copy(e,t);if(e.morphTargetInfluences!==undefined){this.morphTargetInfluences=e.morphTargetInfluences.slice()}if(e.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)}this.material=e.material;this.geometry=e.geometry;return this}updateMorphTargets(){const e=this.geometry;const t=e.morphAttributes;const n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(e!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0);this.morphTargetDictionary[n]=t}}}}getVertexPosition(e,t){const n=this.geometry;const i=n.attributes.position;const r=n.morphAttributes.position;const s=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(r&&a){ys.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=a[n];const o=r[n];if(i===0)continue;xs.fromBufferAttribute(o,e);if(s){ys.addScaledVector(xs,i)}else{ys.addScaledVector(xs.sub(t),i)}}t.add(ys)}if(this.isSkinnedMesh){this.boneTransform(e,t)}return t}raycast(e,t){const n=this.geometry;const i=this.material;const r=this.matrixWorld;const s=this.userData.renderGroup;if(i===undefined)return;if(s&&s.boundingSphere){fs.setFromPackedArray(s.boundingSphere)}else{if(n.boundingSphere===null)n.computeBoundingSphere();fs.copy(n.boundingSphere)}fs.applyMatrix4(r);ds.copy(e.ray).recast(e.near);if(fs.containsPoint(ds.origin)===false){if(ds.intersectSphere(fs,ps)===null)return;if(ds.origin.distanceToSquared(ps)>(e.far-e.near)**2)return}hs.copy(r).invert();ds.copy(e.ray).applyMatrix4(hs);if(s&&s.boundingBox){if(ds.intersectsBox(wi.newFromPackedArray(s.boundingBox))===false)return}else if(n.boundingBox!==null){if(ds.intersectsBox(n.boundingBox)===false)return}let a;const o=n.index;const l=n.attributes.position;const c=n.attributes.uv;const u=n.attributes.uv2;const h=n.groups;const d=n.drawRange;if(o!==null){if(Array.isArray(i)){for(let n=0,r=h.length;n<r;n++){const r=h[n];const s=i[r.materialIndex];const l=Math.max(r.start,d.start);const f=Math.min(o.count,Math.min(r.start+r.count,d.start+d.count));for(let n=l,i=f;n<i;n+=3){const i=o.getX(n);const l=o.getX(n+1);const h=o.getX(n+2);a=As(this,s,e,ds,c,u,i,l,h);if(a){a.faceIndex=Math.floor(n/3);a.face.materialIndex=r.materialIndex;t.push(a)}}}}else{const n=Math.max(0,d.start);const r=Math.min(o.count,d.start+d.count);for(let s=n,l=r;s<l;s+=3){const n=o.getX(s);const r=o.getX(s+1);const l=o.getX(s+2);a=As(this,i,e,ds,c,u,n,r,l);if(a){a.faceIndex=Math.floor(s/3);t.push(a)}}}}else if(l!==undefined){if(Array.isArray(i)){for(let n=0,r=h.length;n<r;n++){const r=h[n];const s=i[r.materialIndex];const o=Math.max(r.start,d.start);const f=Math.min(l.count,Math.min(r.start+r.count,d.start+d.count));for(let n=o,i=f;n<i;n+=3){const i=n;const o=n+1;const l=n+2;a=As(this,s,e,ds,c,u,i,o,l);if(a){a.faceIndex=Math.floor(n/3);a.face.materialIndex=r.materialIndex;t.push(a)}}}}else{const n=Math.max(0,d.start);const r=Math.min(l.count,d.start+d.count);for(let s=n,o=r;s<o;s+=3){const n=s;const r=s+1;const o=s+2;a=As(this,i,e,ds,c,u,n,r,o);if(a){a.faceIndex=Math.floor(s/3);t.push(a)}}}}}}function Es(e,t,n,i,r,s,a,o){let l;if(t.side===f){l=i.intersectTriangle(a,s,r,true,o)}else{l=i.intersectTriangle(r,s,a,t.side===d,o)}if(l===null)return null;Ts.copy(o);Ts.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(Ts);if(c<n.near||c>n.far)return null;return{distance:c,point:Ts.clone(),object:e}}function As(e,t,n,i,r,s,a,o,l){e.getVertexPosition(a,ms);e.getVertexPosition(o,gs);e.getVertexPosition(l,_s);const c=Es(e,t,n,i,ms,gs,_s,Ss);if(c){if(r){vs.fromBufferAttribute(r,a);Ms.fromBufferAttribute(r,o);bs.fromBufferAttribute(r,l);c.uv=Nr.getUV(Ss,ms,gs,_s,vs,Ms,bs,new Xn)}if(s){vs.fromBufferAttribute(s,a);Ms.fromBufferAttribute(s,o);bs.fromBufferAttribute(s,l);c.uv2=Nr.getUV(Ss,ms,gs,_s,vs,Ms,bs,new Xn)}const e={a:a,b:o,c:l,normal:new Qn,materialIndex:0};Nr.getNormal(ms,gs,_s,e.normal);c.face=e}return c}class Rs extends us{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super();this.type="BoxGeometry";this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const a=this;i=Math.floor(i);r=Math.floor(r);s=Math.floor(s);const o=[];const l=[];const c=[];const u=[];let h=0;let d=0;f("z","y","x",-1,-1,n,t,e,s,r,0);f("z","y","x",1,-1,n,t,-e,s,r,1);f("x","z","y",1,1,e,n,t,i,s,2);f("x","z","y",1,-1,e,n,-t,i,s,3);f("x","y","z",1,-1,e,t,n,i,r,4);f("x","y","z",-1,-1,e,t,-n,i,r,5);this.setIndex(o);this.setAttribute("position",new ts(l,3));this.setAttribute("normal",new ts(c,3));this.setAttribute("uv",new ts(u,2));function f(e,t,n,i,r,s,f,p,m,g,_){const x=s/m;const y=f/g;const v=s/2;const M=f/2;const b=p/2;const S=m+1;const T=g+1;let w=0;let E=0;const A=new Qn;for(let s=0;s<T;s++){const a=s*y-M;for(let o=0;o<S;o++){const h=o*x-v;A[e]=h*i;A[t]=a*r;A[n]=b;l.push(A.x,A.y,A.z);A[e]=0;A[t]=0;A[n]=p>0?1:-1;c.push(A.x,A.y,A.z);u.push(o/m);u.push(1-s/g);w+=1}}for(let e=0;e<g;e++){for(let t=0;t<m;t++){const n=h+t+S*e;const i=h+t+S*(e+1);const r=h+(t+1)+S*(e+1);const s=h+(t+1)+S*e;o.push(n,i,s);o.push(i,r,s);E+=6}}a.addGroup(d,E,_);d+=E;h+=w}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new Rs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Cs(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];if(r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)){t[n][i]=r.clone()}else if(Array.isArray(r)){t[n][i]=r.slice()}else{t[n][i]=r}}}return t}function Ls(e){const t={};for(let n=0;n<e.length;n++){const i=Cs(e[n]);for(const e in i){t[e]=i[e]}}return t}function Ps(e){const t=[];for(let n=0;n<e.length;n++){t.push(e[n].clone())}return t}function Is(e){if(e.getRenderTarget()===null){return e.outputEncoding===Dt?zt:Gt}return Gt}const Ds={clone:Cs,merge:Ls};var Ns="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";var Os="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class Us extends Ur{constructor(e){super();this.isShaderMaterial=true;this.type="ShaderMaterial";this.defines={};this.uniforms={};this.uniformsGroups=[];this.vertexShader=Ns;this.fragmentShader=Os;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.clipping=false;this.extensions={derivatives:false,fragDepth:false,drawBuffers:false,shaderTextureLOD:false};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(e!==undefined){this.setValues(e)}}copy(e){super.copy(e);this.fragmentShader=e.fragmentShader;this.vertexShader=e.vertexShader;this.uniforms=Cs(e.uniforms);this.uniformsGroups=Ps(e.uniformsGroups);this.defines=Object.assign({},e.defines);this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.fog=e.fog;this.lights=e.lights;this.clipping=e.clipping;this.extensions=Object.assign({},e.extensions);this.glslVersion=e.glslVersion;return this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion;t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n];const r=i.value;if(r&&r.isTexture){t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}}else if(r&&r.isColor){t.uniforms[n]={type:"c",value:r.getHex()}}else if(r&&r.isVector2){t.uniforms[n]={type:"v2",value:r.toArray()}}else if(r&&r.isVector3){t.uniforms[n]={type:"v3",value:r.toArray()}}else if(r&&r.isVector4){t.uniforms[n]={type:"v4",value:r.toArray()}}else if(r&&r.isMatrix3){t.uniforms[n]={type:"m3",value:r.toArray()}}else if(r&&r.isMatrix4){t.uniforms[n]={type:"m4",value:r.toArray()}}else{t.uniforms[n]={value:r}}}if(Object.keys(this.defines).length>0)t.defines=this.defines;t.vertexShader=this.vertexShader;t.fragmentShader=this.fragmentShader;const n={};for(const e in this.extensions){if(this.extensions[e]===true)n[e]=true}if(Object.keys(n).length>0)t.extensions=n;return t}}class Fs extends Sr{constructor(){super();this.isCamera=true;this.type="Camera";this.matrixWorldInverse=new $i;this.projectionMatrix=new $i;this.projectionMatrixInverse=new $i}copy(e,t){super.copy(e,t);this.matrixWorldInverse.copy(e.matrixWorldInverse);this.projectionMatrix.copy(e.projectionMatrix);this.projectionMatrixInverse.copy(e.projectionMatrixInverse);return this}getWorldDirection(e){this.updateWorldMatrix(true,false);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e);this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t);this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class Bs extends Fs{constructor(e=50,t=1,n=.1,i=2e3){super();this.isPerspectiveCamera=true;this.type="PerspectiveCamera";this.fov=e;this.zoom=1;this.near=n;this.far=i;this.focus=10;this.aspect=t;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}copy(e,t){super.copy(e,t);this.fov=e.fov;this.zoom=e.zoom;this.near=e.near;this.far=e.far;this.focus=e.focus;this.aspect=e.aspect;this.view=e.view===null?null:Object.assign({},e.view);this.filmGauge=e.filmGauge;this.filmOffset=e.filmOffset;return this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Mn*2*Math.atan(t);this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(vn*.5*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return Mn*2*Math.atan(Math.tan(vn*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,s){this.aspect=e/t;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}}this.view.enabled=true;this.view.fullWidth=e;this.view.fullHeight=t;this.view.offsetX=n;this.view.offsetY=i;this.view.width=r;this.view.height=s;this.updateProjectionMatrix()}clearViewOffset(){if(this.view!==null){this.view.enabled=false}this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(vn*.5*this.fov)/this.zoom;let n=2*t;let i=this.aspect*n;let r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const e=s.fullWidth,a=s.fullHeight;r+=s.offsetX*i/e;t-=s.offsetY*n/a;i*=s.width/e;n*=s.height/a}const a=this.filmOffset;if(a!==0)r+=e*a/this.getFilmWidth();this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);t.object.fov=this.fov;t.object.zoom=this.zoom;t.object.near=this.near;t.object.far=this.far;t.object.focus=this.focus;t.object.aspect=this.aspect;if(this.view!==null)t.object.view=Object.assign({},this.view);t.object.filmGauge=this.filmGauge;t.object.filmOffset=this.filmOffset;return t}}const zs=-90;const Gs=1;class ks extends Sr{constructor(e,t,n){super();this.type="CubeCamera";this.renderTarget=n;const i=new Bs(zs,Gs,e,t);i.layers=this.layers;i.up.set(0,1,0);i.lookAt(1,0,0);this.add(i);const r=new Bs(zs,Gs,e,t);r.layers=this.layers;r.up.set(0,1,0);r.lookAt(-1,0,0);this.add(r);const s=new Bs(zs,Gs,e,t);s.layers=this.layers;s.up.set(0,0,-1);s.lookAt(0,1,0);this.add(s);const a=new Bs(zs,Gs,e,t);a.layers=this.layers;a.up.set(0,0,1);a.lookAt(0,-1,0);this.add(a);const o=new Bs(zs,Gs,e,t);o.layers=this.layers;o.up.set(0,1,0);o.lookAt(0,0,1);this.add(o);const l=new Bs(zs,Gs,e,t);l.layers=this.layers;l.up.set(0,1,0);l.lookAt(0,0,-1);this.add(l)}update(e,t){if(this.parent===null)this.updateMatrixWorld();const n=this.renderTarget;const[i,r,s,a,o,l]=this.children;const c=e.getRenderTarget();const u=e.toneMapping;const h=e.xr.enabled;e.toneMapping=Z;e.xr.enabled=false;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=false;e.setRenderTarget(n,0);e.render(t,i);e.setRenderTarget(n,1);e.render(t,r);e.setRenderTarget(n,2);e.render(t,s);e.setRenderTarget(n,3);e.render(t,a);e.setRenderTarget(n,4);e.render(t,o);n.texture.generateMipmaps=d;e.setRenderTarget(n,5);e.render(t,l);e.setRenderTarget(c);e.toneMapping=u;e.xr.enabled=h;n.texture.needsPMREMUpdate=true}}class Hs extends _i{constructor(e,t,n,i,r,s,a,o,l,c){e=e!==undefined?e:[];t=t!==undefined?t:ne;super(e,t,n,i,r,s,a,o,l,c);this.isCubeTexture=true;this.flipY=false}get images(){return this.image}set images(e){this.image=e}}class Vs extends yi{constructor(e=1,t={}){super(e,e,t);this.isWebGLCubeRenderTarget=true;const n={width:e,height:e,depth:1};const i=[n,n,n,n,n,n];this.texture=new Hs(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding);this.texture.isRenderTargetTexture=true;this.texture.generateMipmaps=t.generateMipmaps!==undefined?t.generateMipmaps:false;this.texture.minFilter=t.minFilter!==undefined?t.minFilter:me}fromEquirectangularTexture(e,t){this.texture.type=t.type;this.texture.encoding=t.encoding;this.texture.generateMipmaps=t.generateMipmaps;this.texture.minFilter=t.minFilter;this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,fragmentShader:`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`};const i=new Rs(5,5,5);const r=new Us({name:"CubemapFromEquirect",uniforms:Cs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:f,blending:g});r.uniforms.tEquirect.value=t;const s=new ws(i,r);const a=t.minFilter;if(t.minFilter===xe)t.minFilter=me;const o=new ks(1,10,this);o.update(e,s);t.minFilter=a;s.geometry.dispose();s.material.dispose();return this}clear(e,t,n,i){const r=e.getRenderTarget();for(let r=0;r<6;r++){e.setRenderTarget(this,r);e.clear(t,n,i)}e.setRenderTarget(r)}}const Ws=new Qn;const Xs=new Qn;const js=new jn;class qs{constructor(e=new Qn(1,0,0),t=0){this.isPlane=true;this.normal=e;this.constant=t}set(e,t){this.normal.copy(e);this.constant=t;return this}setComponents(e,t,n,i){this.normal.set(e,t,n);this.constant=i;return this}setFromNormalAndCoplanarPoint(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this}setFromCoplanarPoints(e,t,n){const i=Ws.subVectors(n,t).cross(Xs.subVectors(e,t)).normalize();this.setFromNormalAndCoplanarPoint(i,e);return this}copy(e){this.normal.copy(e.normal);this.constant=e.constant;return this}normalize(){const e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this}negate(){this.constant*=-1;this.normal.negate();return this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Ws);const i=this.normal.dot(n);if(i===0){if(this.distanceToPoint(e.start)===0){return t.copy(e.start)}return null}const r=-(e.start.dot(this.normal)+this.constant)/i;if(r<0||r>1){return null}return t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start);const n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||js.getNormalMatrix(e);const i=this.coplanarPoint(Ws).applyMatrix4(e);const r=this.normal.applyMatrix3(n).normalize();this.constant=-i.dot(r);return this}translate(e){this.constant-=e.dot(this.normal);return this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const Ys=new Vi;const Zs=new Qn;class Js{constructor(e=new qs,t=new qs,n=new qs,i=new qs,r=new qs,s=new qs){this.planes=[e,t,n,i,r,s]}set(e,t,n,i,r,s){const a=this.planes;a[0].copy(e);a[1].copy(t);a[2].copy(n);a[3].copy(i);a[4].copy(r);a[5].copy(s);return this}copy(e){const t=this.planes;for(let n=0;n<6;n++){t[n].copy(e.planes[n])}return this}setFromProjectionMatrix(e){const t=this.planes;const n=e.elements;const i=n[0],r=n[1],s=n[2],a=n[3];const o=n[4],l=n[5],c=n[6],u=n[7];const h=n[8],d=n[9],f=n[10],p=n[11];const m=n[12],g=n[13],_=n[14],x=n[15];t[0].setComponents(a-i,u-o,p-h,x-m).normalize();t[1].setComponents(a+i,u+o,p+h,x+m).normalize();t[2].setComponents(a+r,u+l,p+d,x+g).normalize();t[3].setComponents(a-r,u-l,p-d,x-g).normalize();t[4].setComponents(a-s,u-c,p-f,x-_).normalize();t[5].setComponents(a+s,u+c,p+f,x+_).normalize();return this}intersectsObject(e){const t=e.geometry;const n=e.userData.renderGroup;if(n&&n.boundingSphere){Ys.setFromPackedArray(n.boundingSphere)}else{if(t.boundingSphere===null)t.computeBoundingSphere();Ys.copy(t.boundingSphere)}Ys.applyMatrix4(e.matrixWorld);return this.intersectsSphere(Ys)}intersectsSprite(e){Ys.center.set(0,0,0);Ys.radius=.7071067811865476;Ys.applyMatrix4(e.matrixWorld);return this.intersectsSphere(Ys)}intersectsSphere(e){const t=this.planes;const n=e.center;const i=-e.radius;for(let e=0;e<6;e++){const r=t[e].distanceToPoint(n);if(r<i){return false}}return true}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];Zs.x=i.normal.x>0?e.max.x:e.min.x;Zs.y=i.normal.y>0?e.max.y:e.min.y;Zs.z=i.normal.z>0?e.max.z:e.min.z;if(i.distanceToPoint(Zs)<0){return false}}return true}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++){if(t[n].distanceToPoint(e)<0){return false}}return true}clone(){return(new this.constructor).copy(this)}}function Ks(){let e=null;let t=false;let n=null;let i=null;function r(t,s){n(t,s);i=e.requestAnimationFrame(r)}return{start:function(){if(t===true)return;if(n===null)return;i=e.requestAnimationFrame(r);t=true},stop:function(){e.cancelAnimationFrame(i);t=false},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function $s(e,t){const n=t.isWebGL2;const i=new WeakMap;function r(t,i){const r=t.array;const s=t.usage;const a=e.createBuffer();e.bindBuffer(i,a);e.bufferData(i,r,s);t.onUploadCallback();let o;if(r instanceof Float32Array){o=e.FLOAT}else if(r instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(n){o=e.HALF_FLOAT}else{throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}}else{o=e.UNSIGNED_SHORT}}else if(r instanceof Int16Array){o=e.SHORT}else if(r instanceof Uint32Array){o=e.UNSIGNED_INT}else if(r instanceof Int32Array){o=e.INT}else if(r instanceof Int8Array){o=e.BYTE}else if(r instanceof Uint8Array){o=e.UNSIGNED_BYTE}else if(r instanceof Uint8ClampedArray){o=e.UNSIGNED_BYTE}else{throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r)}return{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}function s(t,i,r){const s=i.array;const a=i.updateRange;e.bindBuffer(r,t);if(a.count===-1){e.bufferSubData(r,0,s)}else{if(n){e.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count)}else{e.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count))}a.count=-1}i.onUploadCallback()}function a(e){if(e.isInterleavedBufferAttribute)e=e.data;return i.get(e)}function o(t){if(t.isInterleavedBufferAttribute)t=t.data;const n=i.get(t);if(n){e.deleteBuffer(n.buffer);i.delete(t)}}function l(e,t){if(e.isGLBufferAttribute){const t=i.get(e);if(!t||t.version<e.version){i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}return}if(e.isInterleavedBufferAttribute)e=e.data;const n=i.get(e);if(n===undefined){i.set(e,r(e,t))}else if(n.version<e.version){s(n.buffer,e,t);n.version=e.version}}return{get:a,remove:o,update:l}}class Qs extends us{constructor(e=1,t=1,n=1,i=1){super();this.type="PlaneGeometry";this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2;const s=t/2;const a=Math.floor(n);const o=Math.floor(i);const l=a+1;const c=o+1;const u=e/a;const h=t/o;const d=[];const f=[];const p=[];const m=[];for(let e=0;e<c;e++){const t=e*h-s;for(let n=0;n<l;n++){const i=n*u-r;f.push(i,-t,0);p.push(0,0,1);m.push(n/a);m.push(1-e/o)}}for(let e=0;e<o;e++){for(let t=0;t<a;t++){const n=t+l*e;const i=t+l*(e+1);const r=t+1+l*(e+1);const s=t+1+l*e;d.push(n,i,s);d.push(i,r,s)}}this.setIndex(d);this.setAttribute("position",new ts(f,3));this.setAttribute("normal",new ts(p,3));this.setAttribute("uv",new ts(m,2))}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new Qs(e.width,e.height,e.widthSegments,e.heightSegments)}}var ea="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";var ta="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var na="#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif";var ia="#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif";var ra="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif";var sa="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";var aa="vec3 transformed = vec3( position );\n#ifdef USE_DATATEXTURE\nif(useDataTexture) {\n    transformed = (vec4( transformed, 1.0) * modelMatrixFromDataTexture).xyz;\n}\n#endif";var oa="vec3 objectNormal = vec3( normal );\n#ifdef USE_DATATEXTURE\nhighp mat4 modelMatrixFromDataTexture;\nif(useDataTexture) {\n\tfloat dataOffset = (5.0 * (clusterInstance + float(gl_InstanceID))) * uOccurrenceTexelWidth;\n\tfloat row = floor(dataOffset);\n\thighp vec4 extra = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tmodelMatrixFromDataTexture[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\thighp uint uExtra0 = floatBitsToUint(extra[0]);\n\thighp uint uExtraTop = uExtra0 >> 24u;\n\tif ((uExtraTop & 1u) == 0u) {\n\t\tgl_Position = vec4(-10.0, -10.0, -10.0, 1.0);\n\t\treturn;\n\t}\n\thighp vec4 extra2 = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tif ((uExtraTop & 2u) == 2u) {\n\t\tcolorFromDataTexture.r = float(uExtra0 & 0xFFu) / 255.0;\n\t\tcolorFromDataTexture.g = float((uExtra0 >> 8u) & 0xFFu) / 255.0;\n\t\tcolorFromDataTexture.b = float((uExtra0 >> 16u) & 0xFFu) / 255.0;\n\t} else {\n\t\tcolorFromDataTexture.r = -1.0;\t}\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\tmodelMatrixFromDataTexture[0] = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\tmodelMatrixFromDataTexture[1] = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\tmodelMatrixFromDataTexture[2] = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tobjectNormal = objectNormal * mat3(modelMatrixFromDataTexture);\n} else {\n\tcolorFromDataTexture.r = -1.0;}\n#endif\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";var la="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif";var ca="#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif";var ua="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";var ha="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";var da="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";var fa="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";var pa="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";var ma="#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif";var ga="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif";var _a="#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif";var xa="#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif";var ya="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}";var va="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif";var Ma="#ifdef USE_DATATEXTURE\nhighp mat4 modelMatrixFromDataTexture;\nif(useDataTexture) {\n\tfloat dataOffset = (5.0 * (clusterInstance + float(gl_InstanceID))) * uOccurrenceTexelWidth;\n\tfloat row = floor(dataOffset);\n\thighp vec4 extra = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tmodelMatrixFromDataTexture[3] = vec4(0.0, 0.0, 0.0, 1.0);\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\thighp uint uExtra0 = floatBitsToUint(extra[0]);\n\thighp uint uExtraTop = uExtra0 >> 24u;\n\tif ((uExtraTop & 1u) == 0u) {\n\t\tgl_Position = vec4(-10.0, -10.0, -10.0, 1.0);\n\t\treturn;\n\t}\n\thighp vec4 extra2 = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tif ((uExtraTop & 2u) == 2u) {\n\t\tcolorFromDataTexture.r = float(uExtra0 & 0xFFu) / 255.0;\n\t\tcolorFromDataTexture.g = float((uExtra0 >> 8u) & 0xFFu) / 255.0;\n\t\tcolorFromDataTexture.b = float((uExtra0 >> 16u) & 0xFFu) / 255.0;\n\t} else {\n\t\tcolorFromDataTexture.r = -1.0;\t}\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\tmodelMatrixFromDataTexture[0] = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\tmodelMatrixFromDataTexture[1] = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n\tdataOffset += uOccurrenceTexelWidth;\n\trow = floor(dataOffset);\n\tmodelMatrixFromDataTexture[2] = texture2D(specularMap, vec2((dataOffset - row) + uHalfTexelWidth, (0.5 + row) * uOccurrenceTexelHeight));\n} else {\n\tcolorFromDataTexture.r = -1.0;}\n#endif";var ba="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";var Sa="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";var Ta="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";var wa="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";var Ea="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";var Aa="gl_FragColor = linearToOutputTexel( gl_FragColor );";var Ra="vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}";var Ca="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";var La="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";var Pa="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";var Ia="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";var Da="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";var Na="#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif";var Oa="#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif";var Ua="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";var Fa="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";var Ba="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}";var za="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif";var Ga="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";var ka="LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;";var Ha="varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert";var Va="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif";var Wa="#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif";var Xa="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;";var ja="varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon";var qa="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n#ifdef USE_DATATEXTURE\n\tif (colorFromDataTexture.r >= 0.0) {\n\t\tmaterial.specularColor = vec3(0.0602);\n\t}\n#endif";var Ya="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong";var Za="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif";var Ja="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";var Ka="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";var $a="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif";var Qa="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";var eo="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";var to="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";var no="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";var io="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";var ro="#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif";var so="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";var ao="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";var oo="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var lo="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";var co="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";var uo="#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif";var ho="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif";var fo="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif";var po="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif";var mo="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";var go="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif";var _o="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif";var xo="#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif";var yo="#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif";var vo="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif";var Mo="#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";var bo="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif";var So="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";var To="#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif";var wo="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );";var Eo="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";var Ao="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";var Ro="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";var Co="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";var Lo="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";var Po="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";var Io="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";var Do="#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";var No="#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";var Oo="#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif";var Uo="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";var Fo="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";var Bo="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif";var zo="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";var Go="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";var ko="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";var Ho="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";var Vo="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";var Wo="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }";var Xo="#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif";var jo="#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\t\n\t\tvec2 lodFudge = pow( 1.95, lod ) / fullSize;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec2 fullSize = vec2( textureSize( sampler, 0 ) );\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif";var qo="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";var Yo="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";var Zo="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";var Jo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";var Ko="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";var $o="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";var Qo="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";const el="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";const tl="uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";const nl="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";const il="#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";const rl="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";const sl="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";const al="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#else\n\t\t#include <data_texture_explicit>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";const ol="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";const ll="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#else\n\t\t#include <data_texture_explicit>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";const cl="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";const ul="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";const hl="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";const dl="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const fl="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";const pl="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#else\n\t\t#include <data_texture_explicit>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";const ml="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n#ifdef USE_DATATEXTURE\n\tif (colorFromDataTexture.r >= 0.0) {\n\t\tdiffuseColor.rgb = colorFromDataTexture;\n\t}\n#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const gl="#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";const _l="#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const xl="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";const yl="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const vl="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";const Ml="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}";const bl="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";const Sl="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n#ifdef USE_DATATEXTURE\n\tif (colorFromDataTexture.r >= 0.0) {\n\t\tdiffuseColor.rgb = colorFromDataTexture;\n\t\ttotalEmissiveRadiance = vec3(0.0235);\n\t}\n#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const Tl="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}";const wl="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const El="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";const Al="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";const Rl="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";const Cl="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";const Ll="#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";const Pl="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";const Il="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const Dl="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";const Nl={alphamap_fragment:ea,alphamap_pars_fragment:ta,alphatest_fragment:na,alphatest_pars_fragment:ia,aomap_fragment:ra,aomap_pars_fragment:sa,begin_vertex:aa,beginnormal_vertex:oa,bsdfs:la,iridescence_fragment:ca,bumpmap_pars_fragment:ua,clipping_planes_fragment:ha,clipping_planes_pars_fragment:da,clipping_planes_pars_vertex:fa,clipping_planes_vertex:pa,color_fragment:ma,color_pars_fragment:ga,color_pars_vertex:_a,color_vertex:xa,common:ya,cube_uv_reflection_fragment:va,data_texture_explicit:Ma,defaultnormal_vertex:ba,displacementmap_pars_vertex:Sa,displacementmap_vertex:Ta,emissivemap_fragment:wa,emissivemap_pars_fragment:Ea,encodings_fragment:Aa,encodings_pars_fragment:Ra,envmap_fragment:Ca,envmap_common_pars_fragment:La,envmap_pars_fragment:Pa,envmap_pars_vertex:Ia,envmap_physical_pars_fragment:Wa,envmap_vertex:Da,fog_vertex:Na,fog_pars_vertex:Oa,fog_fragment:Ua,fog_pars_fragment:Fa,gradientmap_pars_fragment:Ba,lightmap_fragment:za,lightmap_pars_fragment:Ga,lights_lambert_fragment:ka,lights_lambert_pars_fragment:Ha,lights_pars_begin:Va,lights_toon_fragment:Xa,lights_toon_pars_fragment:ja,lights_phong_fragment:qa,lights_phong_pars_fragment:Ya,lights_physical_fragment:Za,lights_physical_pars_fragment:Ja,lights_fragment_begin:Ka,lights_fragment_maps:$a,lights_fragment_end:Qa,logdepthbuf_fragment:eo,logdepthbuf_pars_fragment:to,logdepthbuf_pars_vertex:no,logdepthbuf_vertex:io,map_fragment:ro,map_pars_fragment:so,map_particle_fragment:ao,map_particle_pars_fragment:oo,metalnessmap_fragment:lo,metalnessmap_pars_fragment:co,morphcolor_vertex:uo,morphnormal_vertex:ho,morphtarget_pars_vertex:fo,morphtarget_vertex:po,normal_fragment_begin:mo,normal_fragment_maps:go,normal_pars_fragment:_o,normal_pars_vertex:xo,normal_vertex:yo,normalmap_pars_fragment:vo,clearcoat_normal_fragment_begin:Mo,clearcoat_normal_fragment_maps:bo,clearcoat_pars_fragment:So,iridescence_pars_fragment:To,output_fragment:wo,packing:Eo,premultiplied_alpha_fragment:Ao,project_vertex:Ro,dithering_fragment:Co,dithering_pars_fragment:Lo,roughnessmap_fragment:Po,roughnessmap_pars_fragment:Io,shadowmap_pars_fragment:Do,shadowmap_pars_vertex:No,shadowmap_vertex:Oo,shadowmask_pars_fragment:Uo,skinbase_vertex:Fo,skinning_pars_vertex:Bo,skinning_vertex:zo,skinnormal_vertex:Go,specularmap_fragment:ko,specularmap_pars_fragment:Ho,tonemapping_fragment:Vo,tonemapping_pars_fragment:Wo,transmission_fragment:Xo,transmission_pars_fragment:jo,uv_pars_fragment:qo,uv_pars_vertex:Yo,uv_vertex:Zo,uv2_pars_fragment:Jo,uv2_pars_vertex:Ko,uv2_vertex:$o,worldpos_vertex:Qo,background_vert:el,background_frag:tl,backgroundCube_vert:nl,backgroundCube_frag:il,cube_vert:rl,cube_frag:sl,depth_vert:al,depth_frag:ol,distanceRGBA_vert:ll,distanceRGBA_frag:cl,equirect_vert:ul,equirect_frag:hl,linedashed_vert:dl,linedashed_frag:fl,meshbasic_vert:pl,meshbasic_frag:ml,meshlambert_vert:gl,meshlambert_frag:_l,meshmatcap_vert:xl,meshmatcap_frag:yl,meshnormal_vert:vl,meshnormal_frag:Ml,meshphong_vert:bl,meshphong_frag:Sl,meshphysical_vert:Tl,meshphysical_frag:wl,meshtoon_vert:El,meshtoon_frag:Al,points_vert:Rl,points_frag:Cl,shadow_vert:Ll,shadow_frag:Pl,sprite_vert:Il,sprite_frag:Dl};const Ol={common:{diffuse:{value:new kr(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new jn},uv2Transform:{value:new jn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Xn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new kr(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new kr(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new jn}},sprite:{diffuse:{value:new kr(16777215)},opacity:{value:1},center:{value:new Xn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new jn}}};const Ul={basic:{uniforms:Ls([Ol.common,Ol.specularmap,Ol.envmap,Ol.aomap,Ol.lightmap,Ol.fog]),vertexShader:Nl.meshbasic_vert,fragmentShader:Nl.meshbasic_frag},lambert:{uniforms:Ls([Ol.common,Ol.specularmap,Ol.envmap,Ol.aomap,Ol.lightmap,Ol.emissivemap,Ol.bumpmap,Ol.normalmap,Ol.displacementmap,Ol.fog,Ol.lights,{emissive:{value:new kr(0)}}]),vertexShader:Nl.meshlambert_vert,fragmentShader:Nl.meshlambert_frag},phong:{uniforms:Ls([Ol.common,Ol.specularmap,Ol.envmap,Ol.aomap,Ol.lightmap,Ol.emissivemap,Ol.bumpmap,Ol.normalmap,Ol.displacementmap,Ol.fog,Ol.lights,{emissive:{value:new kr(0)},specular:{value:new kr(1118481)},shininess:{value:30}}]),vertexShader:Nl.meshphong_vert,fragmentShader:Nl.meshphong_frag},standard:{uniforms:Ls([Ol.common,Ol.envmap,Ol.aomap,Ol.lightmap,Ol.emissivemap,Ol.bumpmap,Ol.normalmap,Ol.displacementmap,Ol.roughnessmap,Ol.metalnessmap,Ol.fog,Ol.lights,{emissive:{value:new kr(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Nl.meshphysical_vert,fragmentShader:Nl.meshphysical_frag},toon:{uniforms:Ls([Ol.common,Ol.aomap,Ol.lightmap,Ol.emissivemap,Ol.bumpmap,Ol.normalmap,Ol.displacementmap,Ol.gradientmap,Ol.fog,Ol.lights,{emissive:{value:new kr(0)}}]),vertexShader:Nl.meshtoon_vert,fragmentShader:Nl.meshtoon_frag},matcap:{uniforms:Ls([Ol.common,Ol.bumpmap,Ol.normalmap,Ol.displacementmap,Ol.fog,{matcap:{value:null}}]),vertexShader:Nl.meshmatcap_vert,fragmentShader:Nl.meshmatcap_frag},points:{uniforms:Ls([Ol.points,Ol.fog]),vertexShader:Nl.points_vert,fragmentShader:Nl.points_frag},dashed:{uniforms:Ls([Ol.common,Ol.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Nl.linedashed_vert,fragmentShader:Nl.linedashed_frag},depth:{uniforms:Ls([Ol.common,Ol.displacementmap]),vertexShader:Nl.depth_vert,fragmentShader:Nl.depth_frag},normal:{uniforms:Ls([Ol.common,Ol.bumpmap,Ol.normalmap,Ol.displacementmap,{opacity:{value:1}}]),vertexShader:Nl.meshnormal_vert,fragmentShader:Nl.meshnormal_frag},sprite:{uniforms:Ls([Ol.sprite,Ol.fog]),vertexShader:Nl.sprite_vert,fragmentShader:Nl.sprite_frag},background:{uniforms:{uvTransform:{value:new jn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Nl.background_vert,fragmentShader:Nl.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Nl.backgroundCube_vert,fragmentShader:Nl.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Nl.cube_vert,fragmentShader:Nl.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Nl.equirect_vert,fragmentShader:Nl.equirect_frag},distanceRGBA:{uniforms:Ls([Ol.common,Ol.displacementmap,{referencePosition:{value:new Qn},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Nl.distanceRGBA_vert,fragmentShader:Nl.distanceRGBA_frag},shadow:{uniforms:Ls([Ol.lights,Ol.fog,{color:{value:new kr(0)},opacity:{value:1}}]),vertexShader:Nl.shadow_vert,fragmentShader:Nl.shadow_frag}};Ul.physical={uniforms:Ls([Ul.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Xn(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new kr(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Xn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new kr(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new kr(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Nl.meshphysical_vert,fragmentShader:Nl.meshphysical_frag};const Fl={r:0,b:0,g:0};function Bl(e,t,n,i,r,s,a){const o=new kr(0);let l=s===true?0:1;let c;let u;let h=null;let p=0;let m=null;function g(i,s){let a=false;let g=s.isScene===true?s.background:null;if(g&&g.isTexture){const e=s.backgroundBlurriness>0;g=(e?n:t).get(g)}const x=e.xr;const y=x.getSession&&x.getSession();if(y&&y.environmentBlendMode==="additive"){g=null}if(g===null){_(o,l)}else if(g&&g.isColor){_(g,1);a=true}if(e.autoClear||a){e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil)}if(g&&(g.isCubeTexture||g.mapping===ae)){if(u===undefined){u=new ws(new Rs(1,1,1),new Us({name:"BackgroundCubeMaterial",uniforms:Cs(Ul.backgroundCube.uniforms),vertexShader:Ul.backgroundCube.vertexShader,fragmentShader:Ul.backgroundCube.fragmentShader,side:f,depthTest:false,depthWrite:false,fog:false}));u.geometry.deleteAttribute("normal");u.geometry.deleteAttribute("uv");u.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)};Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}});r.update(u)}u.material.uniforms.envMap.value=g;u.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g.isRenderTargetTexture===false?-1:1;u.material.uniforms.backgroundBlurriness.value=s.backgroundBlurriness;u.material.uniforms.backgroundIntensity.value=s.backgroundIntensity;u.material.toneMapped=g.encoding===Dt?false:true;if(h!==g||p!==g.version||m!==e.toneMapping){u.material.needsUpdate=true;h=g;p=g.version;m=e.toneMapping}u.layers.enableAll();i.unshift(u,u.geometry,u.material,0,0,null)}else if(g&&g.isTexture){if(c===undefined){c=new ws(new Qs(2,2),new Us({name:"BackgroundMaterial",uniforms:Cs(Ul.background.uniforms),vertexShader:Ul.background.vertexShader,fragmentShader:Ul.background.fragmentShader,side:d,depthTest:false,depthWrite:false,fog:false}));c.geometry.deleteAttribute("normal");Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}});r.update(c)}c.material.uniforms.t2D.value=g;c.material.uniforms.backgroundIntensity.value=s.backgroundIntensity;c.material.toneMapped=g.encoding===Dt?false:true;if(g.matrixAutoUpdate===true){g.updateMatrix()}c.material.uniforms.uvTransform.value.copy(g.matrix);if(h!==g||p!==g.version||m!==e.toneMapping){c.material.needsUpdate=true;h=g;p=g.version;m=e.toneMapping}c.layers.enableAll();i.unshift(c,c.geometry,c.material,0,0,null)}}function _(t,n){t.getRGB(Fl,Is(e));i.buffers.color.setClear(Fl.r,Fl.g,Fl.b,n,a)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e);l=t;_(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e;_(o,l)},render:g}}function zl(e,t,n,i){const r=e.getParameter(e.MAX_VERTEX_ATTRIBS);const s=i.isWebGL2?null:t.get("OES_vertex_array_object");const a=i.isWebGL2||s!==null;const o={};const l=g(null);let c=l;let u=false;function h(t,i,r,s,o){let l=false;if(a){const e=m(s,r,i);if(c!==e){c=e;f(c.object)}l=_(t,s,r,o);if(l)x(t,s,r,o)}else{const e=i.wireframe===true;if(c.geometry!==s.id||c.program!==r.id||c.wireframe!==e){c.geometry=s.id;c.program=r.id;c.wireframe=e;l=true}}if(o!==null){n.update(o,e.ELEMENT_ARRAY_BUFFER)}if(l||u){u=false;T(t,i,r,s);if(o!==null){e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(o).buffer)}}}function d(){if(i.isWebGL2)return e.createVertexArray();return s.createVertexArrayOES()}function f(t){if(i.isWebGL2)return e.bindVertexArray(t);return s.bindVertexArrayOES(t)}function p(t){if(i.isWebGL2)return e.deleteVertexArray(t);return s.deleteVertexArrayOES(t)}function m(e,t,n){const i=n.wireframe===true;let r=o[e.id];if(r===undefined){r={};o[e.id]=r}let s=r[t.id];if(s===undefined){s={};r[t.id]=s}let a=s[i];if(a===undefined){a=g(d());s[i]=a}return a}function g(e){const t=[];const n=[];const i=[];for(let e=0;e<r;e++){t[e]=0;n[e]=0;i[e]=0}return{geometry:null,program:null,wireframe:false,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function _(e,t,n,i){const r=c.attributes;const s=t.attributes;let a=0;const o=n.getAttributes();for(const t in o){const n=o[t];if(n.location>=0){const n=r[t];let i=s[t];if(i===undefined){if(t==="instanceMatrix"&&e.instanceMatrix)i=e.instanceMatrix;if(t==="instanceColor"&&e.instanceColor)i=e.instanceColor}if(n===undefined)return true;if(n.attribute!==i)return true;if(i&&n.data!==i.data)return true;a++}}if(c.attributesNum!==a)return true;if(c.index!==i)return true;return false}function x(e,t,n,i){const r={};const s=t.attributes;let a=0;const o=n.getAttributes();for(const t in o){const n=o[t];if(n.location>=0){let n=s[t];if(n===undefined){if(t==="instanceMatrix"&&e.instanceMatrix)n=e.instanceMatrix;if(t==="instanceColor"&&e.instanceColor)n=e.instanceColor}const i={};i.attribute=n;if(n&&n.data){i.data=n.data}r[t]=i;a++}}c.attributes=r;c.attributesNum=a;c.index=i}function y(){const e=c.newAttributes;for(let t=0,n=e.length;t<n;t++){e[t]=0}}function v(e){M(e,0)}function M(n,r){const s=c.newAttributes;const a=c.enabledAttributes;const o=c.attributeDivisors;s[n]=1;if(a[n]===0){e.enableVertexAttribArray(n);a[n]=1}if(o[n]!==r){const s=i.isWebGL2?e:t.get("ANGLE_instanced_arrays");s[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r);o[n]=r}}function b(){const t=c.newAttributes;const n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++){if(n[i]!==t[i]){e.disableVertexAttribArray(i);n[i]=0}}}function S(t,n,r,s,a,o){if(i.isWebGL2===true&&(r===e.INT||r===e.UNSIGNED_INT)){e.vertexAttribIPointer(t,n,r,a,o)}else{e.vertexAttribPointer(t,n,r,s,a,o)}}function T(r,s,a,o){if(i.isWebGL2===false&&(r.isInstancedMesh||o.isInstancedBufferGeometry)){if(t.get("ANGLE_instanced_arrays")===null)return}y();const l=o.attributes;const c=a.getAttributes();const u=s.defaultAttributeValues;for(const t in c){const i=c[t];if(i.location>=0){let s=l[t];if(s===undefined){if(t==="instanceMatrix"&&r.instanceMatrix)s=r.instanceMatrix;if(t==="instanceColor"&&r.instanceColor)s=r.instanceColor}if(s!==undefined){const t=s.normalized;const a=s.itemSize;const l=n.get(s);if(l===undefined)continue;const c=l.buffer;const u=l.type;const h=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const n=s.data;const l=n.stride;const d=s.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++){M(i.location+e,n.meshPerAttribute)}if(r.isInstancedMesh!==true&&o._maxInstanceCount===undefined){o._maxInstanceCount=n.meshPerAttribute*n.count}}else{for(let e=0;e<i.locationSize;e++){v(i.location+e)}}e.bindBuffer(e.ARRAY_BUFFER,c);for(let e=0;e<i.locationSize;e++){S(i.location+e,a/i.locationSize,u,t,l*h,(d+a/i.locationSize*e)*h)}}else{if(s.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++){M(i.location+e,s.meshPerAttribute)}if(r.isInstancedMesh!==true&&o._maxInstanceCount===undefined){o._maxInstanceCount=s.meshPerAttribute*s.count}}else{for(let e=0;e<i.locationSize;e++){v(i.location+e)}}e.bindBuffer(e.ARRAY_BUFFER,c);for(let e=0;e<i.locationSize;e++){S(i.location+e,a/i.locationSize,u,t,a*h,a/i.locationSize*e*h)}}}else if(u!==undefined){const n=u[t];if(n!==undefined){switch(n.length){case 2:e.vertexAttrib2fv(i.location,n);break;case 3:e.vertexAttrib3fv(i.location,n);break;case 4:e.vertexAttrib4fv(i.location,n);break;default:e.vertexAttrib1fv(i.location,n)}}}}}b()}function w(){R();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n){p(n[e].object);delete n[e]}delete t[e]}delete o[e]}}function E(e){if(o[e.id]===undefined)return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n){p(n[e].object);delete n[e]}delete t[e]}delete o[e.id]}function A(e){for(const t in o){const n=o[t];if(n[e.id]===undefined)continue;const i=n[e.id];for(const e in i){p(i[e].object);delete i[e]}delete n[e.id]}}function R(){C();u=true;if(c===l)return;c=l;f(c.object)}function C(){l.geometry=null;l.program=null;l.wireframe=false}return{setup:h,reset:R,resetDefaultState:C,dispose:w,releaseStatesOfGeometry:E,releaseStatesOfProgram:A,initAttributes:y,enableAttribute:v,disableUnusedAttributes:b}}function Gl(e,t,n,i){const r=i.isWebGL2;let s;function a(e){s=e}function o(t,i){e.drawArrays(s,t,i);n.update(i,s,1)}function l(i,a,o){if(o===0)return;let l,c;if(r){l=e;c="drawArraysInstanced"}else{l=t.get("ANGLE_instanced_arrays");c="drawArraysInstancedANGLE";if(l===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}l[c](s,i,a,o);n.update(a,s,o)}this.setMode=a;this.render=o;this.renderInstances=l}function kl(e,t,n){let i;function r(){if(i!==undefined)return i;if(t.has("EXT_texture_filter_anisotropic")===true){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else{i=0}return i}function s(t){if(t==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0){return"highp"}t="mediump"}if(t==="mediump"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0){return"mediump"}}return"lowp"}const a=typeof WebGL2RenderingContext!=="undefined"&&e instanceof WebGL2RenderingContext;let o=n.precision!==undefined?n.precision:"highp";const l=s(o);if(l!==o){console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead.");o=l}const c=a||t.has("WEBGL_draw_buffers");const u=n.logarithmicDepthBuffer===true;const h=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);const d=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);const f=e.getParameter(e.MAX_TEXTURE_SIZE);const p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE);const m=e.getParameter(e.MAX_VERTEX_ATTRIBS);const g=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS);const _=e.getParameter(e.MAX_VARYING_VECTORS);const x=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS);const y=d>0;const v=a||t.has("OES_texture_float");const M=y&&v;const b=a?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:g,maxVaryings:_,maxFragmentUniforms:x,vertexTextures:y,floatFragmentTextures:v,floatVertexTextures:M,maxSamples:b}}function Hl(e){const t=this;let n=null,i=0,r=false,s=false;const a=new qs,o=new jn,l={value:null,needsUpdate:false};this.uniform=l;this.numPlanes=0;this.numIntersection=0;this.init=function(e,t){const n=e.length!==0||t||i!==0||r;r=t;i=e.length;return n};this.beginShadows=function(){s=true;u(null)};this.endShadows=function(){s=false};this.setGlobalState=function(e,t){n=u(e,t,0)};this.setState=function(t,a,o){const h=t.clippingPlanes,d=t.clipIntersection,f=t.clipShadows;const p=e.get(t);if(!r||h===null||h.length===0||s&&!f){if(s){u(null)}else{c()}}else{const e=s?0:i,t=e*4;let r=p.clippingState||null;l.value=r;r=u(h,a,t,o);for(let e=0;e!==t;++e){r[e]=n[e]}p.clippingState=r;this.numIntersection=d?this.numPlanes:0;this.numPlanes+=e}};function c(){if(l.value!==n){l.value=n;l.needsUpdate=i>0}t.numPlanes=i;t.numIntersection=0}function u(e,n,i,r){const s=e!==null?e.length:0;let c=null;if(s!==0){c=l.value;if(r!==true||c===null){const t=i+s*4,r=n.matrixWorldInverse;o.getNormalMatrix(r);if(c===null||c.length<t){c=new Float32Array(t)}for(let t=0,n=i;t!==s;++t,n+=4){a.copy(e[t]).applyMatrix4(r,o);a.normal.toArray(c,n);c[n+3]=a.constant}}l.value=c;l.needsUpdate=true}t.numPlanes=s;t.numIntersection=0;return c}}function Vl(e){let t=new WeakMap;function n(e,t){if(t===re){e.mapping=ne}else if(t===se){e.mapping=ie}return e}function i(i){if(i&&i.isTexture&&i.isRenderTargetTexture===false){const s=i.mapping;if(s===re||s===se){if(t.has(i)){const e=t.get(i).texture;return n(e,i.mapping)}else{const s=i.image;if(s&&s.height>0){const a=new Vs(s.height/2);a.fromEquirectangularTexture(e,i);t.set(i,a);i.addEventListener("dispose",r);return n(a.texture,i.mapping)}else{return null}}}}return i}function r(e){const n=e.target;n.removeEventListener("dispose",r);const i=t.get(n);if(i!==undefined){t.delete(n);i.dispose()}}function s(){t=new WeakMap}return{get:i,dispose:s}}class Wl extends Fs{constructor(e=-1,t=1,n=1,i=-1,r=.1,s=2e3){super();this.isOrthographicCamera=true;this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=e;this.right=t;this.top=n;this.bottom=i;this.near=r;this.far=s;this.updateProjectionMatrix()}copy(e,t){super.copy(e,t);this.left=e.left;this.right=e.right;this.top=e.top;this.bottom=e.bottom;this.near=e.near;this.far=e.far;this.zoom=e.zoom;this.view=e.view===null?null:Object.assign({},e.view);return this}setViewOffset(e,t,n,i,r,s){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}}this.view.enabled=true;this.view.fullWidth=e;this.view.fullHeight=t;this.view.offsetX=n;this.view.offsetY=i;this.view.width=r;this.view.height=s;this.updateProjectionMatrix()}clearViewOffset(){if(this.view!==null){this.view.enabled=false}this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom);const t=(this.top-this.bottom)/(2*this.zoom);const n=(this.right+this.left)/2;const i=(this.top+this.bottom)/2;let r=n-e;let s=n+e;let a=i+t;let o=i-t;if(this.view!==null&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom;const t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX;s=r+e*this.view.width;a-=t*this.view.offsetY;o=a-t*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);t.object.zoom=this.zoom;t.object.left=this.left;t.object.right=this.right;t.object.top=this.top;t.object.bottom=this.bottom;t.object.near=this.near;t.object.far=this.far;if(this.view!==null)t.object.view=Object.assign({},this.view);return t}}const Xl=4;const jl=[.125,.215,.35,.446,.526,.582];const ql=20;const Yl=new Wl;const Zl=new kr;let Jl=null;const Kl=(1+Math.sqrt(5))/2;const $l=1/Kl;const Ql=[new Qn(1,1,1),new Qn(-1,1,1),new Qn(1,1,-1),new Qn(-1,1,-1),new Qn(0,Kl,$l),new Qn(0,Kl,-$l),new Qn($l,0,Kl),new Qn(-$l,0,Kl),new Qn(Kl,$l,0),new Qn(-Kl,$l,0)];class ec{constructor(e){this._renderer=e;this._pingPongRenderTarget=null;this._lodMax=0;this._cubeSize=0;this._lodPlanes=[];this._sizeLods=[];this._sigmas=[];this._blurMaterial=null;this._cubemapMaterial=null;this._equirectMaterial=null;this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Jl=this._renderer.getRenderTarget();this._setSize(256);const r=this._allocateTargets();r.depthBuffer=true;this._sceneToCubeUV(e,n,i,r);if(t>0){this._blur(r,0,0,t)}this._applyPMREM(r);this._cleanup(r);return r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){if(this._cubemapMaterial===null){this._cubemapMaterial=ac();this._compileMaterial(this._cubemapMaterial)}}compileEquirectangularShader(){if(this._equirectMaterial===null){this._equirectMaterial=sc();this._compileMaterial(this._equirectMaterial)}}dispose(){this._dispose();if(this._cubemapMaterial!==null)this._cubemapMaterial.dispose();if(this._equirectMaterial!==null)this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e));this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){if(this._blurMaterial!==null)this._blurMaterial.dispose();if(this._pingPongRenderTarget!==null)this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++){this._lodPlanes[e].dispose()}}_cleanup(e){this._renderer.setRenderTarget(Jl);e.scissorTest=false;ic(e,0,0,e.width,e.height)}_fromTexture(e,t){if(e.mapping===ne||e.mapping===ie){this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width)}else{this._setSize(e.image.width/4)}Jl=this._renderer.getRenderTarget();const n=t||this._allocateTargets();this._textureToCubeUV(e,n);this._applyPMREM(n);this._cleanup(n);return n}_allocateTargets(){const e=3*Math.max(this._cubeSize,16*7);const t=4*this._cubeSize;const n={magFilter:me,minFilter:me,generateMipmaps:false,type:Ae,format:Ie,encoding:It,depthBuffer:false};const i=nc(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){if(this._pingPongRenderTarget!==null){this._dispose()}this._pingPongRenderTarget=nc(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=tc(i));this._blurMaterial=rc(i,e,t)}return i}_compileMaterial(e){const t=new ws(this._lodPlanes[0],e);this._renderer.compile(t,Yl)}_sceneToCubeUV(e,t,n,i){const r=90;const s=1;const a=new Bs(r,s,t,n);const o=[1,-1,1,1,1,1];const l=[1,1,1,-1,-1,-1];const c=this._renderer;const u=c.autoClear;const h=c.toneMapping;c.getClearColor(Zl);c.toneMapping=Z;c.autoClear=false;const d=new Vr({name:"PMREM.Background",side:f,depthWrite:false,depthTest:false});const p=new ws(new Rs,d);let m=false;const g=e.background;if(g){if(g.isColor){d.color.copy(g);e.background=null;m=true}}else{d.color.copy(Zl);m=true}for(let t=0;t<6;t++){const n=t%3;if(n===0){a.up.set(0,o[t],0);a.lookAt(l[t],0,0)}else if(n===1){a.up.set(0,0,o[t]);a.lookAt(0,l[t],0)}else{a.up.set(0,o[t],0);a.lookAt(0,0,l[t])}const r=this._cubeSize;ic(i,n*r,t>2?r:0,r,r);c.setRenderTarget(i);if(m){c.render(p,a)}c.render(e,a)}p.geometry.dispose();p.material.dispose();c.toneMapping=h;c.autoClear=u;e.background=g}_textureToCubeUV(e,t){const n=this._renderer;const i=e.mapping===ne||e.mapping===ie;if(i){if(this._cubemapMaterial===null){this._cubemapMaterial=ac()}this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===false?-1:1}else{if(this._equirectMaterial===null){this._equirectMaterial=sc()}}const r=i?this._cubemapMaterial:this._equirectMaterial;const s=new ws(this._lodPlanes[0],r);const a=r.uniforms;a["envMap"].value=e;const o=this._cubeSize;ic(t,0,0,3*o,2*o);n.setRenderTarget(t);n.render(s,Yl)}_applyPMREM(e){const t=this._renderer;const n=t.autoClear;t.autoClear=false;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]);const i=Ql[(t-1)%Ql.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,i,"latitudinal",r);this._halfBlur(s,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,s,a){const o=this._renderer;const l=this._blurMaterial;if(s!=="latitudinal"&&s!=="longitudinal"){console.error("blur direction must be either latitudinal or longitudinal!")}const c=3;const u=new ws(this._lodPlanes[i],l);const h=l.uniforms;const d=this._sizeLods[n]-1;const f=isFinite(r)?Math.PI/(2*d):2*Math.PI/(2*ql-1);const p=r/f;const m=isFinite(r)?1+Math.floor(c*p):ql;if(m>ql){console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${ql}`)}const g=[];let _=0;for(let e=0;e<ql;++e){const t=e/p;const n=Math.exp(-t*t/2);g.push(n);if(e===0){_+=n}else if(e<m){_+=2*n}}for(let e=0;e<g.length;e++){g[e]=g[e]/_}h["envMap"].value=e.texture;h["samples"].value=m;h["weights"].value=g;h["latitudinal"].value=s==="latitudinal";if(a){h["poleAxis"].value=a}const{_lodMax:x}=this;h["dTheta"].value=f;h["mipInt"].value=x-n;const y=this._sizeLods[i];const v=3*y*(i>x-Xl?i-x+Xl:0);const M=4*(this._cubeSize-y);ic(t,v,M,3*y,2*y);o.setRenderTarget(t);o.render(u,Yl)}}function tc(e){const t=[];const n=[];const i=[];let r=e;const s=e-Xl+1+jl.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);n.push(s);let o=1/s;if(a>e-Xl){o=jl[a-e+Xl-1]}else if(a===0){o=0}i.push(o);const l=1/(s-2);const c=-l;const u=1+l;const h=[c,c,u,c,u,u,c,c,u,u,c,u];const d=6;const f=6;const p=3;const m=2;const g=1;const _=new Float32Array(p*f*d);const x=new Float32Array(m*f*d);const y=new Float32Array(g*f*d);for(let e=0;e<d;e++){const t=e%3*2/3-1;const n=e>2?0:-1;const i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];_.set(i,p*f*e);x.set(h,m*f*e);const r=[e,e,e,e,e,e];y.set(r,g*f*e)}const v=new us;v.setAttribute("position",new jr(_,p));v.setAttribute("uv",new jr(x,m));v.setAttribute("faceIndex",new jr(y,g));t.push(v);if(r>Xl){r--}}return{lodPlanes:t,sizeLods:n,sigmas:i}}function nc(e,t,n){const i=new yi(e,t,n);i.texture.mapping=ae;i.texture.name="PMREM.cubeUv";i.scissorTest=true;return i}function ic(e,t,n,i,r){e.viewport.set(t,n,i,r);e.scissor.set(t,n,i,r)}function rc(e,t,n){const i=new Float32Array(ql);const r=new Qn(0,1,0);const s=new Us({name:"SphericalGaussianBlur",defines:{n:ql,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:false},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:oc(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,blending:g,depthTest:false,depthWrite:false});return s}function sc(){return new Us({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:oc(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,blending:g,depthTest:false,depthWrite:false})}function ac(){return new Us({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:oc(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,blending:g,depthTest:false,depthWrite:false})}function oc(){return`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`}function lc(e){let t=new WeakMap;let n=null;function i(i){if(i&&i.isTexture){const a=i.mapping;const o=a===re||a===se;const l=a===ne||a===ie;if(o||l){if(i.isRenderTargetTexture&&i.needsPMREMUpdate===true){i.needsPMREMUpdate=false;let r=t.get(i);if(n===null)n=new ec(e);r=o?n.fromEquirectangular(i,r):n.fromCubemap(i,r);t.set(i,r);return r.texture}else{if(t.has(i)){return t.get(i).texture}else{const a=i.image;if(o&&a&&a.height>0||l&&a&&r(a)){if(n===null)n=new ec(e);const r=o?n.fromEquirectangular(i):n.fromCubemap(i);t.set(i,r);i.addEventListener("dispose",s);return r.texture}else{return null}}}}}return i}function r(e){let t=0;const n=6;for(let i=0;i<n;i++){if(e[i]!==undefined)t++}return t===n}function s(e){const n=e.target;n.removeEventListener("dispose",s);const i=t.get(n);if(i!==undefined){t.delete(n);i.dispose()}}function a(){t=new WeakMap;if(n!==null){n.dispose();n=null}}return{get:i,dispose:a}}function cc(e){const t={};function n(n){if(t[n]!==undefined){return t[n]}let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}t[n]=i;return i}return{has:function(e){return n(e)!==null},init:function(e){if(e.isWebGL2){n("EXT_color_buffer_float")}else{n("WEBGL_depth_texture");n("OES_texture_float");n("OES_texture_half_float");n("OES_texture_half_float_linear");n("OES_standard_derivatives");n("OES_element_index_uint");n("OES_vertex_array_object");n("ANGLE_instanced_arrays")}n("OES_texture_float_linear");n("EXT_color_buffer_half_float");n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);if(t===null){console.warn("THREE.WebGLRenderer: "+e+" extension not supported.")}return t}}}function uc(e,t,n,i){const r={};const s=new WeakMap;function a(e){const o=e.target;if(o.index!==null){t.remove(o.index)}for(const e in o.attributes){t.remove(o.attributes[e])}o.removeEventListener("dispose",a);delete r[o.id];const l=s.get(o);if(l){t.remove(l);s.delete(o)}i.releaseStatesOfGeometry(o);if(o.isInstancedBufferGeometry===true){delete o._maxInstanceCount}n.memory.geometries--}function o(e,t){if(r[t.id]===true)return t;t.addEventListener("dispose",a);r[t.id]=true;n.memory.geometries++;return t}function l(n){const i=n.attributes;for(const n in i){t.update(i[n],e.ARRAY_BUFFER)}const r=n.morphAttributes;for(const n in r){const i=r[n];for(let n=0,r=i.length;n<r;n++){t.update(i[n],e.ARRAY_BUFFER)}}}function c(e){const n=[];const i=e.index;const r=e.attributes.position;let a=0;if(i!==null){const e=i.array;a=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0];const r=e[t+1];const s=e[t+2];n.push(i,r,r,s,s,i)}}else{const e=r.array;a=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0;const i=t+1;const r=t+2;n.push(e,i,i,r,r,e)}}const o=new(Yn(n)?Qr:Kr)(n,1);o.version=a;const l=s.get(e);if(l)t.remove(l);s.set(e,o)}function u(e){const t=s.get(e);if(t){const n=e.index;if(n!==null){if(t.version<n.version){c(e)}}}else{c(e)}return s.get(e)}return{get:o,update:l,getWireframeAttribute:u}}function hc(e,t,n,i){const r=i.isWebGL2;let s;function a(e){s=e}let o,l;function c(e){o=e.type;l=e.bytesPerElement}function u(t,i){e.drawElements(s,i,o,t*l);n.update(i,s,1)}function h(i,a,c){if(c===0)return;let u,h;if(r){u=e;h="drawElementsInstanced"}else{u=t.get("ANGLE_instanced_arrays");h="drawElementsInstancedANGLE";if(u===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}u[h](s,a,o,i*l,c);n.update(a,s,c)}this.setMode=a;this.setIndex=c;this.render=u;this.renderInstances=h}function dc(e){const t={geometries:0,textures:0};const n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(t,i,r){n.calls++;switch(i){case e.TRIANGLES:n.triangles+=r*(t/3);break;case e.LINES:n.lines+=r*(t/2);break;case e.LINE_STRIP:n.lines+=r*(t-1);break;case e.LINE_LOOP:n.lines+=r*t;break;case e.POINTS:n.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i);break}}function r(){n.frame++;n.calls=0;n.triangles=0;n.points=0;n.lines=0}return{memory:t,render:n,programs:null,autoReset:true,reset:r,update:i}}function fc(e,t){return e[0]-t[0]}function pc(e,t){return Math.abs(t[1])-Math.abs(e[1])}function mc(e,t,n){const i={};const r=new Float32Array(8);const s=new WeakMap;const a=new xi;const o=[];for(let e=0;e<8;e++){o[e]=[e,0]}function l(l,c,u){const h=l.morphTargetInfluences;if(t.isWebGL2===true){const d=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color;const f=d!==undefined?d.length:0;let p=s.get(c);if(p===undefined||p.count!==f){if(p!==undefined)p.texture.dispose();const _=c.morphAttributes.position!==undefined;const x=c.morphAttributes.normal!==undefined;const y=c.morphAttributes.color!==undefined;const v=c.morphAttributes.position||[];const M=c.morphAttributes.normal||[];const b=c.morphAttributes.color||[];let S=0;if(_===true)S=1;if(x===true)S=2;if(y===true)S=3;let T=c.attributes.position.count*S;let w=1;if(T>t.maxTextureSize){w=Math.ceil(T/t.maxTextureSize);T=t.maxTextureSize}const E=new Float32Array(T*w*4*f);const A=new vi(E,T,w,f);A.type=Ee;A.needsUpdate=true;const R=S*4;for(let L=0;L<f;L++){const P=v[L];const I=M[L];const D=b[L];const N=T*w*4*L;for(let O=0;O<P.count;O++){const U=O*R;if(_===true){a.fromBufferAttribute(P,O);E[N+U+0]=a.x;E[N+U+1]=a.y;E[N+U+2]=a.z;E[N+U+3]=0}if(x===true){a.fromBufferAttribute(I,O);E[N+U+4]=a.x;E[N+U+5]=a.y;E[N+U+6]=a.z;E[N+U+7]=0}if(y===true){a.fromBufferAttribute(D,O);E[N+U+8]=a.x;E[N+U+9]=a.y;E[N+U+10]=a.z;E[N+U+11]=D.itemSize===4?a.w:1}}}p={count:f,texture:A,size:new Xn(T,w)};s.set(c,p);function C(){A.dispose();s.delete(c);c.removeEventListener("dispose",C)}c.addEventListener("dispose",C)}let m=0;for(let F=0;F<h.length;F++){m+=h[F]}const g=c.morphTargetsRelative?1:1-m;u.getUniforms().setValue(e,"morphTargetBaseInfluence",g);u.getUniforms().setValue(e,"morphTargetInfluences",h);u.getUniforms().setValue(e,"morphTargetsTexture",p.texture,n);u.getUniforms().setValue(e,"morphTargetsTextureSize",p.size)}else{const B=h===undefined?0:h.length;let z=i[c.id];if(z===undefined||z.length!==B){z=[];for(let W=0;W<B;W++){z[W]=[W,0]}i[c.id]=z}for(let X=0;X<B;X++){const j=z[X];j[0]=X;j[1]=h[X]}z.sort(pc);for(let q=0;q<8;q++){if(q<B&&z[q][1]){o[q][0]=z[q][0];o[q][1]=z[q][1]}else{o[q][0]=Number.MAX_SAFE_INTEGER;o[q][1]=0}}o.sort(fc);const G=c.morphAttributes.position;const k=c.morphAttributes.normal;let H=0;for(let Y=0;Y<8;Y++){const Z=o[Y];const J=Z[0];const K=Z[1];if(J!==Number.MAX_SAFE_INTEGER&&K){if(G&&c.getAttribute("morphTarget"+Y)!==G[J]){c.setAttribute("morphTarget"+Y,G[J])}if(k&&c.getAttribute("morphNormal"+Y)!==k[J]){c.setAttribute("morphNormal"+Y,k[J])}r[Y]=K;H+=K}else{if(G&&c.hasAttribute("morphTarget"+Y)===true){c.deleteAttribute("morphTarget"+Y)}if(k&&c.hasAttribute("morphNormal"+Y)===true){c.deleteAttribute("morphNormal"+Y)}r[Y]=0}}const V=c.morphTargetsRelative?1:1-H;u.getUniforms().setValue(e,"morphTargetBaseInfluence",V);u.getUniforms().setValue(e,"morphTargetInfluences",r)}}return{update:l}}function gc(e,t,n,i){let r=new WeakMap;function s(s){const a=i.render.frame;const l=s.geometry;const c=t.get(s,l);if(r.get(c)!==a){t.update(c);r.set(c,a)}if(s.isInstancedMesh){if(s.hasEventListener("dispose",o)===false){s.addEventListener("dispose",o)}n.update(s.instanceMatrix,e.ARRAY_BUFFER);if(s.instanceColor!==null){n.update(s.instanceColor,e.ARRAY_BUFFER)}}return c}function a(){r=new WeakMap}function o(e){const t=e.target;t.removeEventListener("dispose",o);n.remove(t.instanceMatrix);if(t.instanceColor!==null)n.remove(t.instanceColor)}return{update:s,dispose:a}}const _c=new _i;const xc=new vi;const yc=new bi;const vc=new Hs;const Mc=[];const bc=[];const Sc=new Float32Array(16);const Tc=new Float32Array(9);const wc=new Float32Array(4);function Ec(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let s=Mc[r];if(s===undefined){s=new Float32Array(r);Mc[r]=s}if(t!==0){i.toArray(s,0);for(let i=1,r=0;i!==t;++i){r+=n;e[i].toArray(s,r)}}return s}function Ac(e,t){if(e.length!==t.length)return false;for(let n=0,i=e.length;n<i;n++){if(e[n]!==t[n])return false}return true}function Rc(e,t){for(let n=0,i=t.length;n<i;n++){e[n]=t[n]}}function Cc(e,t){let n=bc[t];if(n===undefined){n=new Int32Array(t);bc[t]=n}for(let i=0;i!==t;++i){n[i]=e.allocateTextureUnit()}return n}function Lc(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1f(this.addr,t);n[0]=t}function Pc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y){e.uniform2f(this.addr,t.x,t.y);n[0]=t.x;n[1]=t.y}}else{if(Ac(n,t))return;e.uniform2fv(this.addr,t);Rc(n,t)}}function Ic(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z){e.uniform3f(this.addr,t.x,t.y,t.z);n[0]=t.x;n[1]=t.y;n[2]=t.z}}else if(t.r!==undefined){if(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b){e.uniform3f(this.addr,t.r,t.g,t.b);n[0]=t.r;n[1]=t.g;n[2]=t.b}}else{if(Ac(n,t))return;e.uniform3fv(this.addr,t);Rc(n,t)}}function Dc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w){e.uniform4f(this.addr,t.x,t.y,t.z,t.w);n[0]=t.x;n[1]=t.y;n[2]=t.z;n[3]=t.w}}else{if(Ac(n,t))return;e.uniform4fv(this.addr,t);Rc(n,t)}}function Nc(e,t){const n=this.cache;const i=t.elements;if(i===undefined){if(Ac(n,t))return;e.uniformMatrix2fv(this.addr,false,t);Rc(n,t)}else{if(Ac(n,i))return;wc.set(i);e.uniformMatrix2fv(this.addr,false,wc);Rc(n,i)}}function Oc(e,t){const n=this.cache;const i=t.elements;if(i===undefined){if(Ac(n,t))return;e.uniformMatrix3fv(this.addr,false,t);Rc(n,t)}else{if(Ac(n,i))return;Tc.set(i);e.uniformMatrix3fv(this.addr,false,Tc);Rc(n,i)}}function Uc(e,t){const n=this.cache;const i=t.elements;if(i===undefined){if(Ac(n,t))return;e.uniformMatrix4fv(this.addr,false,t);Rc(n,t)}else{if(Ac(n,i))return;Sc.set(i);e.uniformMatrix4fv(this.addr,false,Sc);Rc(n,i)}}function Fc(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1i(this.addr,t);n[0]=t}function Bc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y){e.uniform2i(this.addr,t.x,t.y);n[0]=t.x;n[1]=t.y}}else{if(Ac(n,t))return;e.uniform2iv(this.addr,t);Rc(n,t)}}function zc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z){e.uniform3i(this.addr,t.x,t.y,t.z);n[0]=t.x;n[1]=t.y;n[2]=t.z}}else{if(Ac(n,t))return;e.uniform3iv(this.addr,t);Rc(n,t)}}function Gc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w){e.uniform4i(this.addr,t.x,t.y,t.z,t.w);n[0]=t.x;n[1]=t.y;n[2]=t.z;n[3]=t.w}}else{if(Ac(n,t))return;e.uniform4iv(this.addr,t);Rc(n,t)}}function kc(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1ui(this.addr,t);n[0]=t}function Hc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y){e.uniform2ui(this.addr,t.x,t.y);n[0]=t.x;n[1]=t.y}}else{if(Ac(n,t))return;e.uniform2uiv(this.addr,t);Rc(n,t)}}function Vc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z){e.uniform3ui(this.addr,t.x,t.y,t.z);n[0]=t.x;n[1]=t.y;n[2]=t.z}}else{if(Ac(n,t))return;e.uniform3uiv(this.addr,t);Rc(n,t)}}function Wc(e,t){const n=this.cache;if(t.x!==undefined){if(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w){e.uniform4ui(this.addr,t.x,t.y,t.z,t.w);n[0]=t.x;n[1]=t.y;n[2]=t.z;n[3]=t.w}}else{if(Ac(n,t))return;e.uniform4uiv(this.addr,t);Rc(n,t)}}function Xc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.setTexture2D(t||_c,r)}function jc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.setTexture3D(t||yc,r)}function qc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.setTextureCube(t||vc,r)}function Yc(e,t,n){const i=this.cache;const r=n.allocateTextureUnit();if(i[0]!==r){e.uniform1i(this.addr,r);i[0]=r}n.setTexture2DArray(t||xc,r)}function Zc(e){switch(e){case 5126:return Lc;case 35664:return Pc;case 35665:return Ic;case 35666:return Dc;case 35674:return Nc;case 35675:return Oc;case 35676:return Uc;case 5124:case 35670:return Fc;case 35667:case 35671:return Bc;case 35668:case 35672:return zc;case 35669:case 35673:return Gc;case 5125:return kc;case 36294:return Hc;case 36295:return Vc;case 36296:return Wc;case 35678:case 36198:case 36298:case 36306:case 35682:return Xc;case 35679:case 36299:case 36307:return jc;case 35680:case 36300:case 36308:case 36293:return qc;case 36289:case 36303:case 36311:case 36292:return Yc}}function Jc(e,t){e.uniform1fv(this.addr,t)}function Kc(e,t){const n=Ec(t,this.size,2);e.uniform2fv(this.addr,n)}function $c(e,t){const n=Ec(t,this.size,3);e.uniform3fv(this.addr,n)}function Qc(e,t){const n=Ec(t,this.size,4);e.uniform4fv(this.addr,n)}function eu(e,t){const n=Ec(t,this.size,4);e.uniformMatrix2fv(this.addr,false,n)}function tu(e,t){const n=Ec(t,this.size,9);e.uniformMatrix3fv(this.addr,false,n)}function nu(e,t){const n=Ec(t,this.size,16);e.uniformMatrix4fv(this.addr,false,n)}function iu(e,t){e.uniform1iv(this.addr,t)}function ru(e,t){e.uniform2iv(this.addr,t)}function su(e,t){e.uniform3iv(this.addr,t)}function au(e,t){e.uniform4iv(this.addr,t)}function ou(e,t){e.uniform1uiv(this.addr,t)}function lu(e,t){e.uniform2uiv(this.addr,t)}function cu(e,t){e.uniform3uiv(this.addr,t)}function uu(e,t){e.uniform4uiv(this.addr,t)}function hu(e,t,n){const i=this.cache;const r=t.length;const s=Cc(n,r);if(!Ac(i,s)){e.uniform1iv(this.addr,s);Rc(i,s)}for(let e=0;e!==r;++e){n.setTexture2D(t[e]||_c,s[e])}}function du(e,t,n){const i=this.cache;const r=t.length;const s=Cc(n,r);if(!Ac(i,s)){e.uniform1iv(this.addr,s);Rc(i,s)}for(let e=0;e!==r;++e){n.setTexture3D(t[e]||yc,s[e])}}function fu(e,t,n){const i=this.cache;const r=t.length;const s=Cc(n,r);if(!Ac(i,s)){e.uniform1iv(this.addr,s);Rc(i,s)}for(let e=0;e!==r;++e){n.setTextureCube(t[e]||vc,s[e])}}function pu(e,t,n){const i=this.cache;const r=t.length;const s=Cc(n,r);if(!Ac(i,s)){e.uniform1iv(this.addr,s);Rc(i,s)}for(let e=0;e!==r;++e){n.setTexture2DArray(t[e]||xc,s[e])}}function mu(e){switch(e){case 5126:return Jc;case 35664:return Kc;case 35665:return $c;case 35666:return Qc;case 35674:return eu;case 35675:return tu;case 35676:return nu;case 5124:case 35670:return iu;case 35667:case 35671:return ru;case 35668:case 35672:return su;case 35669:case 35673:return au;case 5125:return ou;case 36294:return lu;case 36295:return cu;case 36296:return uu;case 35678:case 36198:case 36298:case 36306:case 35682:return hu;case 35679:case 36299:case 36307:return du;case 35680:case 36300:case 36308:case 36293:return fu;case 36289:case 36303:case 36311:case 36292:return pu}}class gu{constructor(e,t,n){this.id=e;this.addr=n;this.cache=[];this.setValue=Zc(t.type)}}class _u{constructor(e,t,n){this.id=e;this.addr=n;this.cache=[];this.size=t.size;this.setValue=mu(t.type)}}class xu{constructor(e){this.id=e;this.seq=[];this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const s=i[r];s.setValue(e,t[s.id],n)}}}const yu=/(\w+)(\])?(\[|\.)?/g;function vu(e,t){e.seq.push(t);e.map[t.id]=t}function Mu(e,t,n){const i=e.name,r=i.length;yu.lastIndex=0;while(true){const s=yu.exec(i),a=yu.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l)o=o|0;if(c===undefined||c==="["&&a+2===r){vu(n,c===undefined?new gu(o,e,t):new _u(o,e,t));break}else{const e=n.map;let t=e[o];if(t===undefined){t=new xu(o);vu(n,t)}n=t}}}class bu{constructor(e,t){this.seq=[];this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i),r=e.getUniformLocation(t,n.name);Mu(n,r,this)}}setValue(e,t,n,i){const r=this.map[t];if(r!==undefined)r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];if(i!==undefined)this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const s=t[r],a=n[s.id];if(a.needsUpdate!==false){s.setValue(e,a.value,i)}}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];if(r.id in t)n.push(r)}return n}}function Su(e,t,n){const i=e.createShader(t);e.shaderSource(i,n);e.compileShader(i);return i}let Tu=0;function wu(e,t){const n=e.split("\n");const i=[];const r=Math.max(t-6,0);const s=Math.min(t+6,n.length);for(let e=r;e<s;e++){const r=e+1;i.push(`${r===t?">":" "} ${r}: ${n[e]}`)}return i.join("\n")}function Eu(e){switch(e){case It:return["Linear","( value )"];case Dt:return["sRGB","( value )"];default:console.warn("THREE.WebGLProgram: Unsupported encoding:",e);return["Linear","( value )"]}}function Au(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS);const r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const i=parseInt(s[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+wu(e.getShaderSource(t),i)}else{return r}}function Ru(e,t){const n=Eu(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Cu(e,t){let n;switch(t){case J:n="Linear";break;case K:n="Reinhard";break;case $:n="OptimizedCineon";break;case Q:n="ACESFilmic";break;case ee:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t);n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Lu(e){const t=[e.extensionDerivatives||!!e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Du).join("\n")}function Pu(e){const t=[];for(const n in e){const i=e[n];if(i===false)continue;t.push("#define "+n+" "+i)}return t.join("\n")}function Iu(e,t){const n={};const i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r);const s=i.name;let a=1;if(i.type===e.FLOAT_MAT2)a=2;if(i.type===e.FLOAT_MAT3)a=3;if(i.type===e.FLOAT_MAT4)a=4;n[s]={type:i.type,location:e.getAttribLocation(t,s),locationSize:a}}return n}function Du(e){return e!==""}function Nu(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ou(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Uu=/^[ \t]*#include +<([\w\d./]+)>/gm;function Fu(e){return e.replace(Uu,Bu)}function Bu(e,t){const n=Nl[t];if(n===undefined){throw new Error("Can not resolve #include <"+t+">")}return Fu(n)}const zu=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Gu(e){return e.replace(zu,ku)}function ku(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++){r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e)}return r}function Hu(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";if(e.precision==="highp"){t+="\n#define HIGH_PRECISION"}else if(e.precision==="mediump"){t+="\n#define MEDIUM_PRECISION"}else if(e.precision==="lowp"){t+="\n#define LOW_PRECISION"}return t}function Vu(e){let t="SHADOWMAP_TYPE_BASIC";if(e.shadowMapType===c){t="SHADOWMAP_TYPE_PCF"}else if(e.shadowMapType===u){t="SHADOWMAP_TYPE_PCF_SOFT"}else if(e.shadowMapType===h){t="SHADOWMAP_TYPE_VSM"}return t}function Wu(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap){switch(e.envMapMode){case ne:case ie:t="ENVMAP_TYPE_CUBE";break;case ae:t="ENVMAP_TYPE_CUBE_UV";break}}return t}function Xu(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap){switch(e.envMapMode){case ie:t="ENVMAP_MODE_REFRACTION";break}}return t}function ju(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap){switch(e.combine){case j:t="ENVMAP_BLENDING_MULTIPLY";break;case q:t="ENVMAP_BLENDING_MIX";break;case Y:t="ENVMAP_BLENDING_ADD";break}}return t}function qu(e){const t=e.envMapCubeUVHeight;if(t===null)return null;const n=Math.log2(t)-2;const i=1/t;const r=1/(3*Math.max(Math.pow(2,n),7*16));return{texelWidth:r,texelHeight:i,maxMip:n}}function Yu(e,t,n,i){const r=e.getContext();const s=n.defines;let a=n.vertexShader;let o=n.fragmentShader;const l=Vu(n);const c=Wu(n);const u=Xu(n);const h=ju(n);const d=qu(n);const f=n.isWebGL2?"":Lu(n);const p=Pu(s);const m=r.createProgram();let g,_;let x=n.glslVersion?"#version "+n.glslVersion+"\n":"";if(n.isRawShaderMaterial){g=[p].filter(Du).join("\n");if(g.length>0){g+="\n"}_=[f,p].filter(Du).join("\n");if(_.length>0){_+="\n"}}else{g=[Hu(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.clusterInstanceDataMap?"#define USE_DATATEXTURE":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===false?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_DATATEXTURE","\tattribute float clusterInstance;","\tuniform bool useDataTexture;","\t#define uOccurrenceTexelWidth (1.0 / 2048.0)","\t#define uOccurrenceTexelHeight (1.0 / 2048.0)","\t#define uHalfTexelWidth (0.5 * uOccurrenceTexelWidth)","\tuniform sampler2D specularMap;","\tvarying mediump vec3 colorFromDataTexture;","#endif //USE_DATATEXTURE","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Du).join("\n");_=[f,Hu(n),"#define SHADER_NAME "+n.shaderName,p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.clusterInstanceDataMap?"#define USE_DATATEXTURE":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_DATATEXTURE","\tvarying mediump vec3 colorFromDataTexture;","#endif //USE_DATATEXTURE",n.toneMapping!==Z?"#define TONE_MAPPING":"",n.toneMapping!==Z?Nl["tonemapping_pars_fragment"]:"",n.toneMapping!==Z?Cu("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Nl["encodings_pars_fragment"],Ru("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Du).join("\n")}a=Fu(a);a=Nu(a,n);a=Ou(a,n);o=Fu(o);o=Nu(o,n);o=Ou(o,n);a=Gu(a);o=Gu(o);if(n.isWebGL2&&n.isRawShaderMaterial!==true){x="#version 300 es\n";g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g;_=["#define varying in",n.glslVersion===mn?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===mn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_}const y=x+g+a;const v=x+_+o;const M=Su(r,r.VERTEX_SHADER,y);const b=Su(r,r.FRAGMENT_SHADER,v);r.attachShader(m,M);r.attachShader(m,b);if(n.index0AttributeName!==undefined){r.bindAttribLocation(m,0,n.index0AttributeName)}else if(n.morphTargets===true){r.bindAttribLocation(m,0,"position")}r.linkProgram(m);if(e.debug.checkShaderErrors){const e=r.getProgramInfoLog(m).trim();const t=r.getShaderInfoLog(M).trim();const n=r.getShaderInfoLog(b).trim();let i=true;let s=true;if(r.getProgramParameter(m,r.LINK_STATUS)===false){i=false;const t=Au(r,M,"vertex");const n=Au(r,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - "+"VALIDATE_STATUS "+r.getProgramParameter(m,r.VALIDATE_STATUS)+"\n\n"+"Program Info Log: "+e+"\n"+t+"\n"+n)}else if(e!==""){console.warn("THREE.WebGLProgram: Program Info Log:",e)}else if(t===""||n===""){s=false}if(s){this.diagnostics={runnable:i,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:n,prefix:_}}}}r.deleteShader(M);r.deleteShader(b);let S;this.getUniforms=function(){if(S===undefined){S=new bu(r,m)}return S};let T;this.getAttributes=function(){if(T===undefined){T=Iu(r,m)}return T};this.destroy=function(){i.releaseStatesOfProgram(this);r.deleteProgram(m);this.program=undefined};this.name=n.shaderName;this.id=Tu++;this.cacheKey=t;this.usedTimes=1;this.program=m;this.vertexShader=M;this.fragmentShader=b;return this}let Zu=0;class Ju{constructor(){this.shaderCache=new Map;this.materialCache=new Map}update(e){const t=e.vertexShader;const n=e.fragmentShader;const i=this._getShaderStage(t);const r=this._getShaderStage(n);const s=this._getShaderCacheForMaterial(e);if(s.has(i)===false){s.add(i);i.usedTimes++}if(s.has(r)===false){s.add(r);r.usedTimes++}return this}remove(e){const t=this.materialCache.get(e);for(const e of t){e.usedTimes--;if(e.usedTimes===0)this.shaderCache.delete(e.code)}this.materialCache.delete(e);return this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear();this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);if(n===undefined){n=new Set;t.set(e,n)}return n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);if(n===undefined){n=new Ku(e);t.set(e,n)}return n}}class Ku{constructor(e){this.id=Zu++;this.code=e;this.usedTimes=0}}function $u(e,t,n,i,r,s,a){const o=new cr;const l=new Ju;const c=[];const u=r.isWebGL2;const h=r.logarithmicDepthBuffer;const d=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(s,o,c,x,y){const v=x.fog;const M=y.geometry;const b=s.isMeshStandardMaterial?x.environment:null;const S=(s.isMeshStandardMaterial?n:t).get(s.envMap||b);const T=!!S&&S.mapping===ae?S.image.height:null;const w=g[s.type];if(s.precision!==null){m=r.getMaxPrecision(s.precision);if(m!==s.precision){console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",m,"instead.")}}const E=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color;const A=E!==undefined?E.length:0;let R=0;if(M.morphAttributes.position!==undefined)R=1;if(M.morphAttributes.normal!==undefined)R=2;if(M.morphAttributes.color!==undefined)R=3;let C,L;let P,I;if(w){const e=Ul[w];C=e.vertexShader;L=e.fragmentShader}else{C=s.vertexShader;L=s.fragmentShader;l.update(s);P=l.getVertexShaderID(s);I=l.getFragmentShaderID(s)}const D=e.getRenderTarget();const N=s.alphaTest>0;const O=s.clearcoat>0;const U=s.iridescence>0;const F={isWebGL2:u,shaderID:w,shaderName:s.type,vertexShader:C,fragmentShader:L,defines:s.defines,customVertexShaderID:P,customFragmentShaderID:I,isRawShaderMaterial:s.isRawShaderMaterial===true,glslVersion:s.glslVersion,precision:m,instancing:y.isInstancedMesh===true,instancingColor:y.isInstancedMesh===true&&y.instanceColor!==null,supportsVertexTextures:d,outputEncoding:D===null?e.outputEncoding:D.isXRRenderTarget===true?D.texture.encoding:It,map:!!s.map,matcap:!!s.matcap,envMap:!!S,envMapMode:S&&S.mapping,envMapCubeUVHeight:T,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:s.normalMapType===Ft,tangentSpaceNormalMap:s.normalMapType===Ut,decodeVideoTexture:!!s.map&&s.map.isVideoTexture===true&&s.map.encoding===Dt,clearcoat:O,clearcoatMap:O&&!!s.clearcoatMap,clearcoatRoughnessMap:O&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:O&&!!s.clearcoatNormalMap,iridescence:U,iridescenceMap:U&&!!s.iridescenceMap,iridescenceThicknessMap:U&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:s.specularMap&&!s.specularMap.isDataTexture,clusterInstanceDataMap:s.specularMap&&s.specularMap.isDataTexture,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:s.transparent===false&&s.blending===_,alphaMap:!!s.alphaMap,alphaTest:N,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!M.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:s.vertexColors===true&&!!M.attributes.color&&M.attributes.color.itemSize===4,vertexUvs:!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatMap||!!s.clearcoatRoughnessMap||!!s.clearcoatNormalMap||!!s.iridescenceMap||!!s.iridescenceThicknessMap||!!s.displacementMap||!!s.transmissionMap||!!s.thicknessMap||!!s.specularIntensityMap||!!s.specularColorMap||!!s.sheenColorMap||!!s.sheenRoughnessMap,uvsVertexOnly:!(!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatNormalMap||!!s.iridescenceMap||!!s.iridescenceThicknessMap||s.transmission>0||!!s.transmissionMap||!!s.thicknessMap||!!s.specularIntensityMap||!!s.specularColorMap||s.sheen>0||!!s.sheenColorMap||!!s.sheenRoughnessMap)&&!!s.displacementMap,fog:!!v,useFog:s.fog===true,fogExp2:v&&v.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:h,skinning:y.isSkinnedMesh===true,morphTargets:M.morphAttributes.position!==undefined,morphNormals:M.morphAttributes.normal!==undefined,morphColors:M.morphAttributes.color!==undefined,morphTargetsCount:A,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:s.toneMapped?e.toneMapping:Z,useLegacyLights:e.useLegacyLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===p,flipSided:s.side===f,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()};return F}function y(t){const n=[];if(t.shaderID){n.push(t.shaderID)}else{n.push(t.customVertexShaderID);n.push(t.customFragmentShaderID)}if(t.defines!==undefined){for(const e in t.defines){n.push(e);n.push(t.defines[e])}}if(t.isRawShaderMaterial===false){v(n,t);M(n,t);n.push(e.outputEncoding)}n.push(t.customProgramCacheKey);return n.join()}function v(e,t){e.push(t.precision);e.push(t.outputEncoding);e.push(t.envMapMode);e.push(t.envMapCubeUVHeight);e.push(t.combine);e.push(t.vertexUvs);e.push(t.fogExp2);e.push(t.sizeAttenuation);e.push(t.morphTargetsCount);e.push(t.morphAttributeCount);e.push(t.numDirLights);e.push(t.numPointLights);e.push(t.numSpotLights);e.push(t.numSpotLightMaps);e.push(t.numHemiLights);e.push(t.numRectAreaLights);e.push(t.numDirLightShadows);e.push(t.numPointLightShadows);e.push(t.numSpotLightShadows);e.push(t.numSpotLightShadowsWithMaps);e.push(t.shadowMapType);e.push(t.toneMapping);e.push(t.numClippingPlanes);e.push(t.numClipIntersection);e.push(t.depthPacking)}function M(e,t){o.disableAll();if(t.isWebGL2)o.enable(0);if(t.supportsVertexTextures)o.enable(1);if(t.instancing)o.enable(2);if(t.instancingColor)o.enable(3);if(t.map)o.enable(4);if(t.matcap)o.enable(5);if(t.envMap)o.enable(6);if(t.lightMap)o.enable(7);if(t.aoMap)o.enable(8);if(t.emissiveMap)o.enable(9);if(t.bumpMap)o.enable(10);if(t.normalMap)o.enable(11);if(t.objectSpaceNormalMap)o.enable(12);if(t.tangentSpaceNormalMap)o.enable(13);if(t.clearcoat)o.enable(14);if(t.clearcoatMap)o.enable(15);if(t.clearcoatRoughnessMap)o.enable(16);if(t.clearcoatNormalMap)o.enable(17);if(t.iridescence)o.enable(18);if(t.iridescenceMap)o.enable(19);if(t.iridescenceThicknessMap)o.enable(20);if(t.displacementMap)o.enable(21);if(t.specularMap)o.enable(22);if(t.roughnessMap)o.enable(23);if(t.metalnessMap)o.enable(24);if(t.gradientMap)o.enable(25);if(t.alphaMap)o.enable(26);if(t.alphaTest)o.enable(27);if(t.vertexColors)o.enable(28);if(t.vertexAlphas)o.enable(29);if(t.vertexUvs)o.enable(30);if(t.vertexTangents)o.enable(31);if(t.uvsVertexOnly)o.enable(32);e.push(o.mask);o.disableAll();if(t.fog)o.enable(0);if(t.useFog)o.enable(1);if(t.flatShading)o.enable(2);if(t.logarithmicDepthBuffer)o.enable(3);if(t.skinning)o.enable(4);if(t.morphTargets)o.enable(5);if(t.morphNormals)o.enable(6);if(t.morphColors)o.enable(7);if(t.premultipliedAlpha)o.enable(8);if(t.shadowMapEnabled)o.enable(9);if(t.useLegacyLights)o.enable(10);if(t.doubleSided)o.enable(11);if(t.flipSided)o.enable(12);if(t.useDepthPacking)o.enable(13);if(t.dithering)o.enable(14);if(t.specularIntensityMap)o.enable(15);if(t.specularColorMap)o.enable(16);if(t.transmission)o.enable(17);if(t.transmissionMap)o.enable(18);if(t.thicknessMap)o.enable(19);if(t.sheen)o.enable(20);if(t.sheenColorMap)o.enable(21);if(t.sheenRoughnessMap)o.enable(22);if(t.decodeVideoTexture)o.enable(23);if(t.opaque)o.enable(24);e.push(o.mask)}function b(e){const t=g[e.type];let n;if(t){const e=Ul[t];n=Ds.clone(e.uniforms)}else{n=e.uniforms}return n}function S(t,n){let i;for(let e=0,t=c.length;e<t;e++){const t=c[e];if(t.cacheKey===n){i=t;++i.usedTimes;break}}if(i===undefined){i=new Yu(e,n,t,s);c.push(i)}return i}function T(e){if(--e.usedTimes===0){const t=c.indexOf(e);c[t]=c[c.length-1];c.pop();e.destroy()}}function w(e){l.remove(e)}function E(){l.dispose()}return{getParameters:x,getProgramCacheKey:y,getUniforms:b,acquireProgram:S,releaseProgram:T,releaseShaderCache:w,programs:c,dispose:E}}function Qu(){let e=new WeakMap;function t(t){let n=e.get(t);if(n===undefined){n={};e.set(t,n)}return n}function n(t){e.delete(t)}function i(t,n,i){e.get(t)[n]=i}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function eh(e,t){if(e.groupOrder!==t.groupOrder){return e.groupOrder-t.groupOrder}else if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.material.id!==t.material.id){return e.material.id-t.material.id}else if(e.z!==t.z){return e.z-t.z}else{return e.id-t.id}}function th(e,t){if(e.groupOrder!==t.groupOrder){return e.groupOrder-t.groupOrder}else if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.z!==t.z){return t.z-e.z}else{return e.id-t.id}}function nh(){const e=[];let t=0;const n=[];const i=[];const r=[];let s=false;function a(e){t=0;n.length=0;i.length=0;r.length=0;s=e}function o(n,i,r,s,a,o){let l=e[t];if(l===undefined){l={id:n.id,object:n,geometry:i,material:r,groupOrder:s,renderOrder:n.renderOrder,z:a,group:o};e[t]=l}else{l.id=n.id;l.object=n;l.geometry=i;l.material=r;l.groupOrder=s;l.renderOrder=n.renderOrder;l.z=a;l.group=o}t++;return l}function l(e,t,a,l,c,u){if(!s||e.userData.renderGroup===undefined||a.transparent===true||e.userData.skipDuringClusterRendering){const s=o(e,t,a,l,c,u);if(a.transmission>0){i.push(s)}else if(a.transparent===true){r.push(s)}else{n.push(s)}}}function c(e,t,s,a,l,c){const u=o(e,t,s,a,l,c);if(s.transmission>0){i.unshift(u)}else if(s.transparent===true){r.unshift(u)}else{n.unshift(u)}}function u(e,t){if(n.length>1)n.sort(e||eh);if(i.length>1)i.sort(t||th);if(r.length>1)r.sort(t||th)}function h(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(t.id===null)break;t.id=null;t.object=null;t.geometry=null;t.material=null;t.group=null}}return{opaque:n,transmissive:i,transparent:r,init:a,push:l,unshift:c,finish:h,sort:u}}function ih(){let e=new WeakMap;function t(t,n){const i=e.get(t);let r;if(i===undefined){r=new nh;e.set(t,[r])}else{if(n>=i.length){r=new nh;i.push(r)}else{r=i[n]}}return r}function n(){e=new WeakMap}return{get:t,dispose:n}}function rh(){const e={};return{get:function(t){if(e[t.id]!==undefined){return e[t.id]}let n;switch(t.type){case"DirectionalLight":n={direction:new Qn,color:new kr};break;case"SpotLight":n={position:new Qn,direction:new Qn,color:new kr,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Qn,color:new kr,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Qn,skyColor:new kr,groundColor:new kr};break;case"RectAreaLight":n={color:new kr,position:new Qn,halfWidth:new Qn,halfHeight:new Qn};break}e[t.id]=n;return n}}}function sh(){const e={};return{get:function(t){if(e[t.id]!==undefined){return e[t.id]}let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xn};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xn};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Xn,shadowCameraNear:1,shadowCameraFar:1e3};break}e[t.id]=n;return n}}}let ah=0;function oh(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function lh(e,t){const n=new rh;const i=sh();const r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let e=0;e<9;e++)r.probe.push(new Qn);const s=new Qn;const a=new $i;const o=new $i;function l(s,a){let o=0,l=0,c=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let u=0;let h=0;let d=0;let f=0;let p=0;let m=0;let g=0;let _=0;let x=0;let y=0;s.sort(oh);const v=a===true?Math.PI:1;for(let e=0,t=s.length;e<t;e++){const t=s[e];const a=t.color;const M=t.intensity;const b=t.distance;const S=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight){o+=a.r*M*v;l+=a.g*M*v;c+=a.b*M*v}else if(t.isLightProbe){for(let e=0;e<9;e++){r.probe[e].addScaledVector(t.sh.coefficients[e],M)}}else if(t.isDirectionalLight){const e=n.get(t);e.color.copy(t.color).multiplyScalar(t.intensity*v);if(t.castShadow){const e=t.shadow;const n=i.get(t);n.shadowBias=e.bias;n.shadowNormalBias=e.normalBias;n.shadowRadius=e.radius;n.shadowMapSize=e.mapSize;r.directionalShadow[u]=n;r.directionalShadowMap[u]=S;r.directionalShadowMatrix[u]=t.shadow.matrix;m++}r.directional[u]=e;u++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld);e.color.copy(a).multiplyScalar(M*v);e.distance=b;e.coneCos=Math.cos(t.angle);e.penumbraCos=Math.cos(t.angle*(1-t.penumbra));e.decay=t.decay;r.spot[d]=e;const s=t.shadow;if(t.map){r.spotLightMap[x]=t.map;x++;s.updateMatrices(t);if(t.castShadow)y++}r.spotLightMatrix[d]=s.matrix;if(t.castShadow){const e=i.get(t);e.shadowBias=s.bias;e.shadowNormalBias=s.normalBias;e.shadowRadius=s.radius;e.shadowMapSize=s.mapSize;r.spotShadow[d]=e;r.spotShadowMap[d]=S;_++}d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(a).multiplyScalar(M);e.halfWidth.set(t.width*.5,0,0);e.halfHeight.set(0,t.height*.5,0);r.rectArea[f]=e;f++}else if(t.isPointLight){const e=n.get(t);e.color.copy(t.color).multiplyScalar(t.intensity*v);e.distance=t.distance;e.decay=t.decay;if(t.castShadow){const e=t.shadow;const n=i.get(t);n.shadowBias=e.bias;n.shadowNormalBias=e.normalBias;n.shadowRadius=e.radius;n.shadowMapSize=e.mapSize;n.shadowCameraNear=e.camera.near;n.shadowCameraFar=e.camera.far;r.pointShadow[h]=n;r.pointShadowMap[h]=S;r.pointShadowMatrix[h]=t.shadow.matrix;g++}r.point[h]=e;h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(M*v);e.groundColor.copy(t.groundColor).multiplyScalar(M*v);r.hemi[p]=e;p++}}if(f>0){if(t.isWebGL2){r.rectAreaLTC1=Ol.LTC_FLOAT_1;r.rectAreaLTC2=Ol.LTC_FLOAT_2}else{if(e.has("OES_texture_float_linear")===true){r.rectAreaLTC1=Ol.LTC_FLOAT_1;r.rectAreaLTC2=Ol.LTC_FLOAT_2}else if(e.has("OES_texture_half_float_linear")===true){r.rectAreaLTC1=Ol.LTC_HALF_1;r.rectAreaLTC2=Ol.LTC_HALF_2}else{console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")}}}r.ambient[0]=o;r.ambient[1]=l;r.ambient[2]=c;const M=r.hash;if(M.directionalLength!==u||M.pointLength!==h||M.spotLength!==d||M.rectAreaLength!==f||M.hemiLength!==p||M.numDirectionalShadows!==m||M.numPointShadows!==g||M.numSpotShadows!==_||M.numSpotMaps!==x){r.directional.length=u;r.spot.length=d;r.rectArea.length=f;r.point.length=h;r.hemi.length=p;r.directionalShadow.length=m;r.directionalShadowMap.length=m;r.pointShadow.length=g;r.pointShadowMap.length=g;r.spotShadow.length=_;r.spotShadowMap.length=_;r.directionalShadowMatrix.length=m;r.pointShadowMatrix.length=g;r.spotLightMatrix.length=_+x-y;r.spotLightMap.length=x;r.numSpotLightShadowsWithMaps=y;M.directionalLength=u;M.pointLength=h;M.spotLength=d;M.rectAreaLength=f;M.hemiLength=p;M.numDirectionalShadows=m;M.numPointShadows=g;M.numSpotShadows=_;M.numSpotMaps=x;r.version=ah++}}function c(e,t){let n=0;let i=0;let l=0;let c=0;let u=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=r.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld);s.setFromMatrixPosition(d.target.matrixWorld);e.direction.sub(s);e.direction.transformDirection(h);n++}else if(d.isSpotLight){const e=r.spot[l];e.position.setFromMatrixPosition(d.matrixWorld);e.position.applyMatrix4(h);e.direction.setFromMatrixPosition(d.matrixWorld);s.setFromMatrixPosition(d.target.matrixWorld);e.direction.sub(s);e.direction.transformDirection(h);l++}else if(d.isRectAreaLight){const e=r.rectArea[c];e.position.setFromMatrixPosition(d.matrixWorld);e.position.applyMatrix4(h);o.identity();a.copy(d.matrixWorld);a.premultiply(h);o.extractRotation(a);e.halfWidth.set(d.width*.5,0,0);e.halfHeight.set(0,d.height*.5,0);e.halfWidth.applyMatrix4(o);e.halfHeight.applyMatrix4(o);c++}else if(d.isPointLight){const e=r.point[i];e.position.setFromMatrixPosition(d.matrixWorld);e.position.applyMatrix4(h);i++}else if(d.isHemisphereLight){const e=r.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld);e.direction.transformDirection(h);u++}}}return{setup:l,setupView:c,state:r}}function ch(e,t){const n=new lh(e,t);const i=[];const r=[];function s(){i.length=0;r.length=0}function a(e){i.push(e)}function o(e){r.push(e)}function l(e){n.setup(i,e)}function c(e){n.setupView(i,e)}const u={lightsArray:i,shadowsArray:r,lights:n};return{init:s,state:u,setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function uh(e,t){let n=new WeakMap;function i(i,r=0){const s=n.get(i);let a;if(s===undefined){a=new ch(e,t);n.set(i,[a])}else{if(r>=s.length){a=new ch(e,t);s.push(a)}else{a=s[r]}}return a}function r(){n=new WeakMap}return{get:i,dispose:r}}class hh extends Ur{constructor(e){super();this.isMeshDepthMaterial=true;this.type="MeshDepthMaterial";this.depthPacking=Nt;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(e)}copy(e){super.copy(e);this.depthPacking=e.depthPacking;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;return this}}class dh extends Ur{constructor(e){super();this.isMeshDistanceMaterial=true;this.type="MeshDistanceMaterial";this.referencePosition=new Qn;this.nearDistance=1;this.farDistance=1e3;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.setValues(e)}copy(e){super.copy(e);this.referencePosition.copy(e.referencePosition);this.nearDistance=e.nearDistance;this.farDistance=e.farDistance;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;return this}}const fh="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";const ph="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function mh(e,t,n){let i=new Js;const r=new Xn,s=new Xn,a=new xi,o=new hh({depthPacking:Ot}),l=new dh,u={},m=n.maxTextureSize;const _={[d]:f,[f]:d,[p]:p};const x=new Us({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Xn},radius:{value:4}},vertexShader:fh,fragmentShader:ph});const y=x.clone();y.defines.HORIZONTAL_PASS=1;const v=new us;v.setAttribute("position",new jr(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new ws(v,x);const b=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=c;this.render=function(t,n,o){if(b.enabled===false)return;if(b.autoUpdate===false&&b.needsUpdate===false)return;if(t.length===0)return;const l=e.getRenderTarget();const c=e.getActiveCubeFace();const u=e.getActiveMipmapLevel();const d=e.state;d.setBlending(g);d.buffers.color.setClear(1,1,1,1);d.buffers.depth.setTest(true);d.setScissorTest(false);for(let l=0,c=t.length;l<c;l++){const c=t[l];const u=c.shadow;if(u===undefined){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(u.autoUpdate===false&&u.needsUpdate===false)continue;r.copy(u.mapSize);const f=u.getFrameExtents();r.multiply(f);s.copy(u.mapSize);if(r.x>m||r.y>m){if(r.x>m){s.x=Math.floor(m/f.x);r.x=s.x*f.x;u.mapSize.x=s.x}if(r.y>m){s.y=Math.floor(m/f.y);r.y=s.y*f.y;u.mapSize.y=s.y}}if(u.map===null){const e=this.type!==h?{minFilter:ue,magFilter:ue}:{};u.map=new yi(r.x,r.y,e);u.map.texture.name=c.name+".shadowMap";u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map);e.clear();const p=u.getViewportCount();for(let e=0;e<p;e++){const t=u.getViewport(e);a.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w);d.viewport(a);u.updateMatrices(c,e);i=u.getFrustum();w(n,o,u.camera,c,this.type)}if(u.isPointLightShadow!==true&&this.type===h){S(u,o)}u.needsUpdate=false}b.needsUpdate=false;e.setRenderTarget(l,c,u)};function S(n,i){const s=t.update(M);if(x.defines.VSM_SAMPLES!==n.blurSamples){x.defines.VSM_SAMPLES=n.blurSamples;y.defines.VSM_SAMPLES=n.blurSamples;x.needsUpdate=true;y.needsUpdate=true}if(n.mapPass===null){n.mapPass=new yi(r.x,r.y)}x.uniforms.shadow_pass.value=n.map.texture;x.uniforms.resolution.value=n.mapSize;x.uniforms.radius.value=n.radius;e.setRenderTarget(n.mapPass);e.clear();e.renderBufferDirect(i,null,s,x,M,null);y.uniforms.shadow_pass.value=n.mapPass.texture;y.uniforms.resolution.value=n.mapSize;y.uniforms.radius.value=n.radius;e.setRenderTarget(n.map);e.clear();e.renderBufferDirect(i,null,s,y,M,null)}function T(t,n,i,r,s,a){let c=null;const d=i.isPointLight===true?t.customDistanceMaterial:t.customDepthMaterial;if(d!==undefined){c=d}else{c=i.isPointLight===true?l:o;if(e.localClippingEnabled&&n.clipShadows===true&&Array.isArray(n.clippingPlanes)&&n.clippingPlanes.length!==0||n.displacementMap&&n.displacementScale!==0||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=c.uuid,t=n.uuid;let i=u[e];if(i===undefined){i={};u[e]=i}let r=i[t];if(r===undefined){r=c.clone();i[t]=r}c=r}}c.visible=n.visible;c.wireframe=n.wireframe;if(a===h){c.side=n.shadowSide!==null?n.shadowSide:n.side}else{c.side=n.shadowSide!==null?n.shadowSide:_[n.side]}c.alphaMap=n.alphaMap;c.alphaTest=n.alphaTest;c.map=n.map;c.clipShadows=n.clipShadows;c.clippingPlanes=n.clippingPlanes;c.clipIntersection=n.clipIntersection;c.displacementMap=n.displacementMap;c.displacementScale=n.displacementScale;c.displacementBias=n.displacementBias;c.wireframeLinewidth=n.wireframeLinewidth;c.linewidth=n.linewidth;if(i.isPointLight===true&&c.isMeshDistanceMaterial===true){c.referencePosition.setFromMatrixPosition(i.matrixWorld);c.nearDistance=r;c.farDistance=s}return c}function w(n,r,s,a,o){if(n.visible===false)return;const l=n.layers.test(r.layers);if(l&&(n.isMesh||n.isLine||n.isPoints)){if((n.castShadow||n.receiveShadow&&o===h)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,n.matrixWorld);const i=t.update(n);const r=n.material;if(Array.isArray(r)){const t=i.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l];const u=r[c.materialIndex];if(u&&u.visible){const t=T(n,u,a,s.near,s.far,o);e.renderBufferDirect(s,null,i,t,n,c)}}}else if(r.visible){const t=T(n,r,a,s.near,s.far,o);const l=n.userData.renderGroup;e.renderBufferDirect(s,null,i,t,n,l?l:null)}}}const c=n.children;for(let e=0,t=c.length;e<t;e++){w(c[e],r,s,a,o)}}}function gh(e,t,n){const i=n.isWebGL2;function o(){let t=false;const n=new xi;let i=null;const r=new xi(0,0,0,0);return{setMask:function(n){if(i!==n&&!t){e.colorMask(n,n,n,n);i=n}},setLocked:function(e){t=e},setClear:function(t,i,s,a,o){if(o===true){t*=a;i*=a;s*=a}n.set(t,i,s,a);if(r.equals(n)===false){e.clearColor(t,i,s,a);r.copy(n)}},reset:function(){t=false;i=null;r.set(-1,0,0,0)}}}function l(){let t=false;let n=null;let i=null;let r=null;return{setTest:function(t){if(t){Te(e.DEPTH_TEST)}else{we(e.DEPTH_TEST)}},setMask:function(i){if(n!==i&&!t){e.depthMask(i);n=i}},setFunc:function(t){if(i!==t){switch(t){case B:e.depthFunc(e.NEVER);break;case z:e.depthFunc(e.ALWAYS);break;case G:e.depthFunc(e.LESS);break;case k:e.depthFunc(e.LEQUAL);break;case H:e.depthFunc(e.EQUAL);break;case V:e.depthFunc(e.GEQUAL);break;case W:e.depthFunc(e.GREATER);break;case X:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}i=t}},setLocked:function(e){t=e},setClear:function(t){if(r!==t){e.clearDepth(t);r=t}},reset:function(){t=false;n=null;i=null;r=null}}}function c(){let t=false;let n=null;let i=null;let r=null;let s=null;let a=null;let o=null;let l=null;let c=null;return{setTest:function(n){if(!t){if(n){Te(e.STENCIL_TEST)}else{we(e.STENCIL_TEST)}}},setMask:function(i){if(n!==i&&!t){e.stencilMask(i);n=i}},setFunc:function(t,n,a){if(i!==t||r!==n||s!==a){e.stencilFunc(t,n,a);i=t;r=n;s=a}},setOp:function(t,n,i){if(a!==t||o!==n||l!==i){e.stencilOp(t,n,i);a=t;o=n;l=i}},setLocked:function(e){t=e},setClear:function(t){if(c!==t){e.clearStencil(t);c=t}},reset:function(){t=false;n=null;i=null;r=null;s=null;a=null;o=null;l=null;c=null}}}const u=new o;const h=new l;const d=new c;const m=new WeakMap;const j=new WeakMap;let q={};let Y={};let Z=new WeakMap;let J=[];let K=null;let $=false;let Q=null;let ee=null;let te=null;let ne=null;let ie=null;let re=null;let se=null;let ae=false;let oe=null;let le=null;let ce=null;let ue=null;let he=null;const de=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let fe=false;let pe=0;const me=e.getParameter(e.VERSION);if(me.indexOf("WebGL")!==-1){pe=parseFloat(/^WebGL (\d)/.exec(me)[1]);fe=pe>=1}else if(me.indexOf("OpenGL ES")!==-1){pe=parseFloat(/^OpenGL ES (\d)/.exec(me)[1]);fe=pe>=2}let ge=null;let _e={};const xe=e.getParameter(e.SCISSOR_BOX);const ye=e.getParameter(e.VIEWPORT);const ve=(new xi).fromArray(xe);const Me=(new xi).fromArray(ye);function be(t,n,i){const r=new Uint8Array(4);const s=e.createTexture();e.bindTexture(t,s);e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST);e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let t=0;t<i;t++){e.texImage2D(n+t,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,r)}return s}const Se={};Se[e.TEXTURE_2D]=be(e.TEXTURE_2D,e.TEXTURE_2D,1);Se[e.TEXTURE_CUBE_MAP]=be(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6);u.setClear(0,0,0,1);h.setClear(1);d.setClear(0);Te(e.DEPTH_TEST);h.setFunc(k);De(false);Ne(s);Te(e.CULL_FACE);Pe(g);function Te(t){if(q[t]!==true){e.enable(t);q[t]=true}}function we(t){if(q[t]!==false){e.disable(t);q[t]=false}}function Ee(t,n){if(Y[t]!==n){e.bindFramebuffer(t,n);Y[t]=n;if(i){if(t===e.DRAW_FRAMEBUFFER){Y[e.FRAMEBUFFER]=n}if(t===e.FRAMEBUFFER){Y[e.DRAW_FRAMEBUFFER]=n}}return true}return false}function Ae(i,r){let s=J;let a=false;if(i){s=Z.get(r);if(s===undefined){s=[];Z.set(r,s)}if(i.isWebGLMultipleRenderTargets){const t=i.texture;if(s.length!==t.length||s[0]!==e.COLOR_ATTACHMENT0){for(let n=0,i=t.length;n<i;n++){s[n]=e.COLOR_ATTACHMENT0+n}s.length=t.length;a=true}}else{if(s[0]!==e.COLOR_ATTACHMENT0){s[0]=e.COLOR_ATTACHMENT0;a=true}}}else{if(s[0]!==e.BACK){s[0]=e.BACK;a=true}}if(a){if(n.isWebGL2){e.drawBuffers(s)}else{t.get("WEBGL_draw_buffers").drawBuffersWEBGL(s)}}}function Re(t){if(K!==t){e.useProgram(t);K=t;return true}return false}const Ce={[b]:e.FUNC_ADD,[S]:e.FUNC_SUBTRACT,[T]:e.FUNC_REVERSE_SUBTRACT};if(i){Ce[w]=e.MIN;Ce[E]=e.MAX}else{const e=t.get("EXT_blend_minmax");if(e!==null){Ce[w]=e.MIN_EXT;Ce[E]=e.MAX_EXT}}const Le={[A]:e.ZERO,[R]:e.ONE,[C]:e.SRC_COLOR,[P]:e.SRC_ALPHA,[F]:e.SRC_ALPHA_SATURATE,[O]:e.DST_COLOR,[D]:e.DST_ALPHA,[L]:e.ONE_MINUS_SRC_COLOR,[I]:e.ONE_MINUS_SRC_ALPHA,[U]:e.ONE_MINUS_DST_COLOR,[N]:e.ONE_MINUS_DST_ALPHA};function Pe(t,n,i,r,s,a,o,l){if(t===g){if($===true){we(e.BLEND);$=false}return}if($===false){Te(e.BLEND);$=true}if(t!==M){if(t!==Q||l!==ae){if(ee!==b||ie!==b){e.blendEquation(e.FUNC_ADD);ee=b;ie=b}if(l){switch(t){case _:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case x:e.blendFunc(e.ONE,e.ONE);break;case y:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case v:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}}else{switch(t){case _:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case x:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case y:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case v:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}}te=null;ne=null;re=null;se=null;Q=t;ae=l}return}s=s||n;a=a||i;o=o||r;if(n!==ee||s!==ie){e.blendEquationSeparate(Ce[n],Ce[s]);ee=n;ie=s}if(i!==te||r!==ne||a!==re||o!==se){e.blendFuncSeparate(Le[i],Le[r],Le[a],Le[o]);te=i;ne=r;re=a;se=o}Q=t;ae=false}function Ie(t,n){t.side===p?we(e.CULL_FACE):Te(e.CULL_FACE);let i=t.side===f;if(n)i=!i;De(i);t.blending===_&&t.transparent===false?Pe(g):Pe(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha);h.setFunc(t.depthFunc);h.setTest(t.depthTest);h.setMask(t.depthWrite);u.setMask(t.colorWrite);const r=t.stencilWrite;d.setTest(r);if(r){d.setMask(t.stencilWriteMask);d.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask);d.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)}Ue(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits);t.alphaToCoverage===true?Te(e.SAMPLE_ALPHA_TO_COVERAGE):we(e.SAMPLE_ALPHA_TO_COVERAGE)}function De(t){if(oe!==t){if(t){e.frontFace(e.CW)}else{e.frontFace(e.CCW)}oe=t}}function Ne(t){if(t!==r){Te(e.CULL_FACE);if(t!==le){if(t===s){e.cullFace(e.BACK)}else if(t===a){e.cullFace(e.FRONT)}else{e.cullFace(e.FRONT_AND_BACK)}}}else{we(e.CULL_FACE)}le=t}function Oe(t){if(t!==ce){if(fe)e.lineWidth(t);ce=t}}function Ue(t,n,i){if(t){Te(e.POLYGON_OFFSET_FILL);if(ue!==n||he!==i){e.polygonOffset(n,i);ue=n;he=i}}else{we(e.POLYGON_OFFSET_FILL)}}function Fe(t){if(t){Te(e.SCISSOR_TEST)}else{we(e.SCISSOR_TEST)}}function Be(t){if(t===undefined)t=e.TEXTURE0+de-1;if(ge!==t){e.activeTexture(t);ge=t}}function ze(t,n,i){if(i===undefined){if(ge===null){i=e.TEXTURE0+de-1}else{i=ge}}let r=_e[i];if(r===undefined){r={type:undefined,texture:undefined};_e[i]=r}if(r.type!==t||r.texture!==n){if(ge!==i){e.activeTexture(i);ge=i}e.bindTexture(t,n||Se[t]);r.type=t;r.texture=n}}function Ge(){const t=_e[ge];if(t!==undefined&&t.type!==undefined){e.bindTexture(t.type,null);t.type=undefined;t.texture=undefined}}function ke(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function He(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ve(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function We(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Xe(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function je(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function qe(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ye(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ze(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Je(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function Ke(t){if(ve.equals(t)===false){e.scissor(t.x,t.y,t.z,t.w);ve.copy(t)}}function $e(t){if(Me.equals(t)===false){e.viewport(t.x,t.y,t.z,t.w);Me.copy(t)}}function Qe(t,n){let i=j.get(n);if(i===undefined){i=new WeakMap;j.set(n,i)}let r=i.get(t);if(r===undefined){r=e.getUniformBlockIndex(n,t.name);i.set(t,r)}}function et(t,n){const i=j.get(n);const r=i.get(t);if(m.get(n)!==r){e.uniformBlockBinding(n,r,t.__bindingPointIndex);m.set(n,r)}}function tt(){e.disable(e.BLEND);e.disable(e.CULL_FACE);e.disable(e.DEPTH_TEST);e.disable(e.POLYGON_OFFSET_FILL);e.disable(e.SCISSOR_TEST);e.disable(e.STENCIL_TEST);e.disable(e.SAMPLE_ALPHA_TO_COVERAGE);e.blendEquation(e.FUNC_ADD);e.blendFunc(e.ONE,e.ZERO);e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO);e.colorMask(true,true,true,true);e.clearColor(0,0,0,0);e.depthMask(true);e.depthFunc(e.LESS);e.clearDepth(1);e.stencilMask(4294967295);e.stencilFunc(e.ALWAYS,0,4294967295);e.stencilOp(e.KEEP,e.KEEP,e.KEEP);e.clearStencil(0);e.cullFace(e.BACK);e.frontFace(e.CCW);e.polygonOffset(0,0);e.activeTexture(e.TEXTURE0);e.bindFramebuffer(e.FRAMEBUFFER,null);if(i===true){e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null);e.bindFramebuffer(e.READ_FRAMEBUFFER,null)}e.useProgram(null);e.lineWidth(1);e.scissor(0,0,e.canvas.width,e.canvas.height);e.viewport(0,0,e.canvas.width,e.canvas.height);q={};ge=null;_e={};Y={};Z=new WeakMap;J=[];K=null;$=false;Q=null;ee=null;te=null;ne=null;ie=null;re=null;se=null;ae=false;oe=null;le=null;ce=null;ue=null;he=null;ve.set(0,0,e.canvas.width,e.canvas.height);Me.set(0,0,e.canvas.width,e.canvas.height);u.reset();h.reset();d.reset()}return{buffers:{color:u,depth:h,stencil:d},enable:Te,disable:we,bindFramebuffer:Ee,drawBuffers:Ae,useProgram:Re,setBlending:Pe,setMaterial:Ie,setFlipSided:De,setCullFace:Ne,setLineWidth:Oe,setPolygonOffset:Ue,setScissorTest:Fe,activeTexture:Be,bindTexture:ze,unbindTexture:Ge,compressedTexImage2D:ke,compressedTexImage3D:He,texImage2D:Ze,texImage3D:Je,updateUBOMapping:Qe,uniformBlockBinding:et,texStorage2D:qe,texStorage3D:Ye,texSubImage2D:Ve,texSubImage3D:We,compressedTexSubImage2D:Xe,compressedTexSubImage3D:je,scissor:Ke,viewport:$e,reset:tt}}function _h(e,t,n,i,r,s,a){const o=r.isWebGL2;const l=r.maxTextures;const c=r.maxCubemapSize;const u=r.maxTextureSize;const h=r.maxSamples;const d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null;const f=typeof navigator==="undefined"?false:/OculusBrowser/g.test(navigator.userAgent);const p=new WeakMap;let m;const g=new WeakMap;let _=false;try{_=typeof OffscreenCanvas!=="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(e){}function x(e,t){return _?new OffscreenCanvas(e,t):Kn("canvas")}function y(e,t,n,i){let r=1;if(e.width>i||e.height>i){r=i/Math.max(e.width,e.height)}if(r<1||t===true){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){const i=t?Gn:Math.floor;const s=i(r*e.width);const a=i(r*e.height);if(m===undefined)m=x(s,a);const o=n?x(s,a):m;o.width=s;o.height=a;const l=o.getContext("2d");l.drawImage(e,0,0,s,a);console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+a+").");return o}else{if("data"in e){console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}}return e}function v(e){return Bn(e.width)&&Bn(e.height)}function M(e){if(o)return false;return e.wrapS!==le||e.wrapT!==le||e.minFilter!==ue&&e.minFilter!==me}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==ue&&e.minFilter!==me}function S(t){e.generateMipmap(t)}function T(n,i,r,s,a=false){if(o===false)return i;if(n!==null){if(e[n]!==undefined)return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=i;if(i===e.RED){if(r===e.FLOAT)l=e.R32F;if(r===e.HALF_FLOAT)l=e.R16F;if(r===e.UNSIGNED_BYTE)l=e.R8}if(i===e.RG){if(r===e.FLOAT)l=e.RG32F;if(r===e.HALF_FLOAT)l=e.RG16F;if(r===e.UNSIGNED_BYTE)l=e.RG8}if(i===e.RGBA){if(r===e.FLOAT)l=e.RGBA32F;if(r===e.HALF_FLOAT)l=e.RGBA16F;if(r===e.UNSIGNED_BYTE)l=s===Dt&&a===false?e.SRGB8_ALPHA8:e.RGBA8;if(r===e.UNSIGNED_SHORT_4_4_4_4)l=e.RGBA4;if(r===e.UNSIGNED_SHORT_5_5_5_1)l=e.RGB5_A1}if(l===e.R16F||l===e.R32F||l===e.RG16F||l===e.RG32F||l===e.RGBA16F||l===e.RGBA32F){t.get("EXT_color_buffer_float")}return l}function w(e,t,n){if(b(e,n)===true||e.isFramebufferTexture&&e.minFilter!==ue&&e.minFilter!==me){return Math.log2(Math.max(t.width,t.height))+1}else if(e.mipmaps!==undefined&&e.mipmaps.length>0){return e.mipmaps.length}else if(e.isCompressedTexture&&Array.isArray(e.image)){return t.mipmaps.length}else{return 1}}function E(t){if(t===ue||t===he||t===fe){return e.NEAREST}return e.LINEAR}function A(e){const t=e.target;t.removeEventListener("dispose",A);C(t);if(t.isVideoTexture){p.delete(t)}}function R(e){const t=e.target;t.removeEventListener("dispose",R);P(t)}function C(e){const t=i.get(e);if(t.__webglInit===undefined)return;const n=e.source;const r=g.get(n);if(r){const i=r[t.__cacheKey];i.usedTimes--;if(i.usedTimes===0){L(e)}if(Object.keys(r).length===0){g.delete(n)}}i.remove(e)}function L(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const r=t.source;const s=g.get(r);delete s[n.__cacheKey];a.memory.textures--}function P(t){const n=t.texture;const r=i.get(t);const s=i.get(n);if(s.__webglTexture!==undefined){e.deleteTexture(s.__webglTexture);a.memory.textures--}if(t.depthTexture){t.depthTexture.dispose()}if(t.isWebGLCubeRenderTarget){for(let t=0;t<6;t++){e.deleteFramebuffer(r.__webglFramebuffer[t]);if(r.__webglDepthbuffer)e.deleteRenderbuffer(r.__webglDepthbuffer[t])}}else{e.deleteFramebuffer(r.__webglFramebuffer);if(r.__webglDepthbuffer)e.deleteRenderbuffer(r.__webglDepthbuffer);if(r.__webglMultisampledFramebuffer)e.deleteFramebuffer(r.__webglMultisampledFramebuffer);if(r.__webglColorRenderbuffer){for(let t=0;t<r.__webglColorRenderbuffer.length;t++){if(r.__webglColorRenderbuffer[t])e.deleteRenderbuffer(r.__webglColorRenderbuffer[t])}}if(r.__webglDepthRenderbuffer)e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets){for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);if(r.__webglTexture){e.deleteTexture(r.__webglTexture);a.memory.textures--}i.remove(n[t])}}i.remove(n);i.remove(t)}let I=0;function D(){I=0}function N(){const e=I;if(e>=l){console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l)}I+=1;return e}function O(e){const t=[];t.push(e.wrapS);t.push(e.wrapT);t.push(e.wrapR||0);t.push(e.magFilter);t.push(e.minFilter);t.push(e.anisotropy);t.push(e.internalFormat);t.push(e.format);t.push(e.type);t.push(e.generateMipmaps);t.push(e.premultiplyAlpha);t.push(e.flipY);t.push(e.unpackAlignment);t.push(e.encoding);return t.join()}function U(t,r){const s=i.get(t);if(t.isVideoTexture)ne(t);if(t.isRenderTargetTexture===false&&t.version>0&&s.__version!==t.version){const e=t.image;if(e===null){console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.")}else if(e.complete===false){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}else{W(s,t,r);return}}n.bindTexture(e.TEXTURE_2D,s.__webglTexture,e.TEXTURE0+r)}function F(t,r){const s=i.get(t);if(t.version>0&&s.__version!==t.version){W(s,t,r);return}n.bindTexture(e.TEXTURE_2D_ARRAY,s.__webglTexture,e.TEXTURE0+r)}function B(t,r){const s=i.get(t);if(t.version>0&&s.__version!==t.version){W(s,t,r);return}n.bindTexture(e.TEXTURE_3D,s.__webglTexture,e.TEXTURE0+r)}function z(t,r){const s=i.get(t);if(t.version>0&&s.__version!==t.version){X(s,t,r);return}n.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture,e.TEXTURE0+r)}const G={[oe]:e.REPEAT,[le]:e.CLAMP_TO_EDGE,[ce]:e.MIRRORED_REPEAT};const k={[ue]:e.NEAREST,[he]:e.NEAREST_MIPMAP_NEAREST,[fe]:e.NEAREST_MIPMAP_LINEAR,[me]:e.LINEAR,[ge]:e.LINEAR_MIPMAP_NEAREST,[xe]:e.LINEAR_MIPMAP_LINEAR};function H(n,s,a){if(a){e.texParameteri(n,e.TEXTURE_WRAP_S,G[s.wrapS]);e.texParameteri(n,e.TEXTURE_WRAP_T,G[s.wrapT]);if(n===e.TEXTURE_3D||n===e.TEXTURE_2D_ARRAY){e.texParameteri(n,e.TEXTURE_WRAP_R,G[s.wrapR])}e.texParameteri(n,e.TEXTURE_MAG_FILTER,k[s.magFilter]);e.texParameteri(n,e.TEXTURE_MIN_FILTER,k[s.minFilter])}else{e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE);e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);if(n===e.TEXTURE_3D||n===e.TEXTURE_2D_ARRAY){e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE)}if(s.wrapS!==le||s.wrapT!==le){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.")}e.texParameteri(n,e.TEXTURE_MAG_FILTER,E(s.magFilter));e.texParameteri(n,e.TEXTURE_MIN_FILTER,E(s.minFilter));if(s.minFilter!==ue&&s.minFilter!==me){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")}}if(t.has("EXT_texture_filter_anisotropic")===true){const a=t.get("EXT_texture_filter_anisotropic");if(s.magFilter===ue)return;if(s.minFilter!==fe&&s.minFilter!==xe)return;if(s.type===Ee&&t.has("OES_texture_float_linear")===false)return;if(o===false&&(s.type===Ae&&t.has("OES_texture_half_float_linear")===false))return;if(s.anisotropy>1||i.get(s).__currentAnisotropy){e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy()));i.get(s).__currentAnisotropy=s.anisotropy}}}function V(t,n){let i=false;if(t.__webglInit===undefined){t.__webglInit=true;n.addEventListener("dispose",A)}const r=n.source;let s=g.get(r);if(s===undefined){s={};g.set(r,s)}const o=O(n);if(o!==t.__cacheKey){if(s[o]===undefined){s[o]={texture:e.createTexture(),usedTimes:0};a.memory.textures++;i=true}s[o].usedTimes++;const r=s[t.__cacheKey];if(r!==undefined){s[t.__cacheKey].usedTimes--;if(r.usedTimes===0){L(n)}}t.__cacheKey=o;t.__webglTexture=s[o].texture}return i}function W(t,r,a){let l=e.TEXTURE_2D;if(r.isDataArrayTexture||r.isCompressedArrayTexture)l=e.TEXTURE_2D_ARRAY;if(r.isData3DTexture)l=e.TEXTURE_3D;const c=V(t,r);const h=r.source;n.bindTexture(l,t.__webglTexture,e.TEXTURE0+a);const d=i.get(h);if(h.version!==d.__version||c===true){n.activeTexture(e.TEXTURE0+a);e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY);e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha);e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment);e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const t=M(r)&&v(r.image)===false;let i=y(r.image,t,false,u);i=ie(r,i);const f=v(i)||o,p=s.convert(r.format,r.encoding);let m=s.convert(r.type),g=T(r.internalFormat,p,m,r.encoding,r.isVideoTexture);H(l,r,f);let _;const x=r.mipmaps;const E=o&&r.isVideoTexture!==true;const A=d.__version===undefined||c===true;const R=w(r,i,f);if(r.isDepthTexture){g=e.DEPTH_COMPONENT;if(o){if(r.type===Ee){g=e.DEPTH_COMPONENT32F}else if(r.type===we){g=e.DEPTH_COMPONENT24}else if(r.type===Le){g=e.DEPTH24_STENCIL8}else{g=e.DEPTH_COMPONENT16}}else{if(r.type===Ee){console.error("WebGLRenderer: Floating point depth texture requires WebGL2.")}}if(r.format===Oe&&g===e.DEPTH_COMPONENT){if(r.type!==Se&&r.type!==we){console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.");r.type=we;m=s.convert(r.type)}}if(r.format===Ue&&g===e.DEPTH_COMPONENT){g=e.DEPTH_STENCIL;if(r.type!==Le){console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.");r.type=Le;m=s.convert(r.type)}}if(A){if(E){n.texStorage2D(e.TEXTURE_2D,1,g,i.width,i.height)}else{n.texImage2D(e.TEXTURE_2D,0,g,i.width,i.height,0,p,m,null)}}}else if(r.isDataTexture){if(x.length>0&&f){if(E&&A){n.texStorage2D(e.TEXTURE_2D,R,g,x[0].width,x[0].height)}for(let t=0,i=x.length;t<i;t++){_=x[t];if(E){n.texSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,p,m,_.data)}else{n.texImage2D(e.TEXTURE_2D,t,g,_.width,_.height,0,p,m,_.data)}}r.generateMipmaps=false}else{if(E){if(A){n.texStorage2D(e.TEXTURE_2D,R,g,i.width,i.height)}const t=r.userData.textureUpdateParams;if(t){n.texSubImage2D(e.TEXTURE_2D,0,t.xOffset,t.yOffset,t.width,t.height,p,m,i.data.subarray(t.dataOffset))}else{n.texSubImage2D(e.TEXTURE_2D,0,0,0,i.width,i.height,p,m,i.data)}}else{n.texImage2D(e.TEXTURE_2D,0,g,i.width,i.height,0,p,m,i.data)}}}else if(r.isCompressedTexture){if(r.isCompressedArrayTexture){if(E&&A){n.texStorage3D(e.TEXTURE_2D_ARRAY,R,g,x[0].width,x[0].height,i.depth)}for(let t=0,s=x.length;t<s;t++){_=x[t];if(r.format!==Ie){if(p!==null){if(E){n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,_.width,_.height,i.depth,p,_.data,0,0)}else{n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,g,_.width,_.height,i.depth,0,_.data,0,0)}}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{if(E){n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,_.width,_.height,i.depth,p,m,_.data)}else{n.texImage3D(e.TEXTURE_2D_ARRAY,t,g,_.width,_.height,i.depth,0,p,m,_.data)}}}}else{if(E&&A){n.texStorage2D(e.TEXTURE_2D,R,g,x[0].width,x[0].height)}for(let t=0,i=x.length;t<i;t++){_=x[t];if(r.format!==Ie){if(p!==null){if(E){n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,p,_.data)}else{n.compressedTexImage2D(e.TEXTURE_2D,t,g,_.width,_.height,0,_.data)}}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{if(E){n.texSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,p,m,_.data)}else{n.texImage2D(e.TEXTURE_2D,t,g,_.width,_.height,0,p,m,_.data)}}}}}else if(r.isDataArrayTexture){if(E){if(A){n.texStorage3D(e.TEXTURE_2D_ARRAY,R,g,i.width,i.height,i.depth)}n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,i.width,i.height,i.depth,p,m,i.data)}else{n.texImage3D(e.TEXTURE_2D_ARRAY,0,g,i.width,i.height,i.depth,0,p,m,i.data)}}else if(r.isData3DTexture){if(E){if(A){n.texStorage3D(e.TEXTURE_3D,R,g,i.width,i.height,i.depth)}n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,i.width,i.height,i.depth,p,m,i.data)}else{n.texImage3D(e.TEXTURE_3D,0,g,i.width,i.height,i.depth,0,p,m,i.data)}}else if(r.isFramebufferTexture){if(A){if(E){n.texStorage2D(e.TEXTURE_2D,R,g,i.width,i.height)}else{let t=i.width,r=i.height;for(let i=0;i<R;i++){n.texImage2D(e.TEXTURE_2D,i,g,t,r,0,p,m,null);t>>=1;r>>=1}}}}else{if(x.length>0&&f){if(E&&A){n.texStorage2D(e.TEXTURE_2D,R,g,x[0].width,x[0].height)}for(let t=0,i=x.length;t<i;t++){_=x[t];if(E){n.texSubImage2D(e.TEXTURE_2D,t,0,0,p,m,_)}else{n.texImage2D(e.TEXTURE_2D,t,g,p,m,_)}}r.generateMipmaps=false}else{if(E){if(A){n.texStorage2D(e.TEXTURE_2D,R,g,i.width,i.height)}n.texSubImage2D(e.TEXTURE_2D,0,0,0,p,m,i)}else{n.texImage2D(e.TEXTURE_2D,0,g,p,m,i)}}}if(b(r,f)){S(l)}d.__version=h.version;if(r.onUpdate)r.onUpdate(r)}t.__version=r.version}function X(t,r,a){if(r.image.length!==6)return;const l=V(t,r);const u=r.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+a);const h=i.get(u);if(u.version!==h.__version||l===true){n.activeTexture(e.TEXTURE0+a);e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY);e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha);e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment);e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const t=r.isCompressedTexture||r.image[0].isCompressedTexture;const i=r.image[0]&&r.image[0].isDataTexture;const d=[];for(let e=0;e<6;e++){if(!t&&!i){d[e]=y(r.image[e],false,true,c)}else{d[e]=i?r.image[e].image:r.image[e]}d[e]=ie(r,d[e])}const f=d[0],p=v(f)||o,m=s.convert(r.format,r.encoding),g=s.convert(r.type),_=T(r.internalFormat,m,g,r.encoding);const x=o&&r.isVideoTexture!==true;const M=h.__version===undefined||l===true;let E=w(r,f,p);H(e.TEXTURE_CUBE_MAP,r,p);let A;if(t){if(x&&M){n.texStorage2D(e.TEXTURE_CUBE_MAP,E,_,f.width,f.height)}for(let t=0;t<6;t++){A=d[t].mipmaps;for(let i=0;i<A.length;i++){const s=A[i];if(r.format!==Ie){if(m!==null){if(x){n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,s.width,s.height,m,s.data)}else{n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,_,s.width,s.height,0,s.data)}}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()")}}else{if(x){n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,s.width,s.height,m,g,s.data)}else{n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,_,s.width,s.height,0,m,g,s.data)}}}}}else{A=r.mipmaps;if(x&&M){if(A.length>0)E++;n.texStorage2D(e.TEXTURE_CUBE_MAP,E,_,d[0].width,d[0].height)}for(let t=0;t<6;t++){if(i){if(x){n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,d[t].width,d[t].height,m,g,d[t].data)}else{n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,_,d[t].width,d[t].height,0,m,g,d[t].data)}for(let i=0;i<A.length;i++){const r=A[i];const s=r.image[t].image;if(x){n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,s.width,s.height,m,g,s.data)}else{n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,_,s.width,s.height,0,m,g,s.data)}}}else{if(x){n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,m,g,d[t])}else{n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,_,m,g,d[t])}for(let i=0;i<A.length;i++){const r=A[i];if(x){n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,m,g,r.image[t])}else{n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,_,m,g,r.image[t])}}}}}if(b(r,p)){S(e.TEXTURE_CUBE_MAP)}h.__version=u.version;if(r.onUpdate)r.onUpdate(r)}t.__version=r.version}function j(t,r,a,o,l){const c=s.convert(a.format,a.encoding);const u=s.convert(a.type);const h=T(a.internalFormat,c,u,a.encoding);const f=i.get(r);if(!f.__hasExternalTextures){if(l===e.TEXTURE_3D||l===e.TEXTURE_2D_ARRAY){n.texImage3D(l,0,h,r.width,r.height,r.depth,0,c,u,null)}else{n.texImage2D(l,0,h,r.width,r.height,0,c,u,null)}}n.bindFramebuffer(e.FRAMEBUFFER,t);if(te(r)){d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,l,i.get(a).__webglTexture,0,ee(r))}else if(l===e.TEXTURE_2D||l>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&l<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z){e.framebufferTexture2D(e.FRAMEBUFFER,o,l,i.get(a).__webglTexture,0)}n.bindFramebuffer(e.FRAMEBUFFER,null)}function q(t,n,i){e.bindRenderbuffer(e.RENDERBUFFER,t);if(n.depthBuffer&&!n.stencilBuffer){let r=e.DEPTH_COMPONENT16;if(i||te(n)){const t=n.depthTexture;if(t&&t.isDepthTexture){if(t.type===Ee){r=e.DEPTH_COMPONENT32F}else if(t.type===we){r=e.DEPTH_COMPONENT24}}const i=ee(n);if(te(n)){d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,r,n.width,n.height)}else{e.renderbufferStorageMultisample(e.RENDERBUFFER,i,r,n.width,n.height)}}else{e.renderbufferStorage(e.RENDERBUFFER,r,n.width,n.height)}e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){const r=ee(n);if(i&&te(n)===false){e.renderbufferStorageMultisample(e.RENDERBUFFER,r,e.DEPTH24_STENCIL8,n.width,n.height)}else if(te(n)){d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,e.DEPTH24_STENCIL8,n.width,n.height)}else{e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height)}e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{const t=n.isWebGLMultipleRenderTargets===true?n.texture:[n.texture];for(let r=0;r<t.length;r++){const a=t[r];const o=s.convert(a.format,a.encoding);const l=s.convert(a.type);const c=T(a.internalFormat,o,l,a.encoding);const u=ee(n);if(i&&te(n)===false){e.renderbufferStorageMultisample(e.RENDERBUFFER,u,c,n.width,n.height)}else if(te(n)){d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,c,n.width,n.height)}else{e.renderbufferStorage(e.RENDERBUFFER,c,n.width,n.height)}}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function Y(t,r){const s=r&&r.isWebGLCubeRenderTarget;if(s)throw new Error("Depth Texture with cube render targets is not supported");n.bindFramebuffer(e.FRAMEBUFFER,t);if(!(r.depthTexture&&r.depthTexture.isDepthTexture)){throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture")}if(!i.get(r.depthTexture).__webglTexture||r.depthTexture.image.width!==r.width||r.depthTexture.image.height!==r.height){r.depthTexture.image.width=r.width;r.depthTexture.image.height=r.height;r.depthTexture.needsUpdate=true}U(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture;const o=ee(r);if(r.depthTexture.format===Oe){if(te(r)){d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,o)}else{e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0)}}else if(r.depthTexture.format===Ue){if(te(r)){d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,o)}else{e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}else{throw new Error("Unknown depthTexture format")}}function Z(t){const r=i.get(t);const s=t.isWebGLCubeRenderTarget===true;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");Y(r.__webglFramebuffer,t)}else{if(s){r.__webglDepthbuffer=[];for(let i=0;i<6;i++){n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[i]);r.__webglDepthbuffer[i]=e.createRenderbuffer();q(r.__webglDepthbuffer[i],t,false)}}else{n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer);r.__webglDepthbuffer=e.createRenderbuffer();q(r.__webglDepthbuffer,t,false)}}n.bindFramebuffer(e.FRAMEBUFFER,null)}function J(t,n,r){const s=i.get(t);if(n!==undefined){j(s.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D)}if(r!==undefined){Z(t)}}function K(t){const l=t.texture;const c=i.get(t);const u=i.get(l);t.addEventListener("dispose",R);if(t.isWebGLMultipleRenderTargets!==true){if(u.__webglTexture===undefined){u.__webglTexture=e.createTexture()}u.__version=l.version;a.memory.textures++}const h=t.isWebGLCubeRenderTarget===true;const d=t.isWebGLMultipleRenderTargets===true;const f=v(t)||o;if(h){c.__webglFramebuffer=[];for(let t=0;t<6;t++){c.__webglFramebuffer[t]=e.createFramebuffer()}}else{c.__webglFramebuffer=e.createFramebuffer();if(d){if(r.drawBuffers){const n=t.texture;for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);if(r.__webglTexture===undefined){r.__webglTexture=e.createTexture();a.memory.textures++}}}else{console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}}if(o&&t.samples>0&&te(t)===false){const i=d?l:[l];c.__webglMultisampledFramebuffer=e.createFramebuffer();c.__webglColorRenderbuffer=[];n.bindFramebuffer(e.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];c.__webglColorRenderbuffer[n]=e.createRenderbuffer();e.bindRenderbuffer(e.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const a=s.convert(r.format,r.encoding);const o=s.convert(r.type);const l=T(r.internalFormat,a,o,r.encoding,t.isXRRenderTarget===true);const u=ee(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,t.width,t.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,c.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null);if(t.depthBuffer){c.__webglDepthRenderbuffer=e.createRenderbuffer();q(c.__webglDepthRenderbuffer,t,true)}n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(h){n.bindTexture(e.TEXTURE_CUBE_MAP,u.__webglTexture);H(e.TEXTURE_CUBE_MAP,l,f);for(let n=0;n<6;n++){j(c.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n)}if(b(l,f)){S(e.TEXTURE_CUBE_MAP)}n.unbindTexture()}else if(d){const r=t.texture;for(let s=0,a=r.length;s<a;s++){const a=r[s];const o=i.get(a);n.bindTexture(e.TEXTURE_2D,o.__webglTexture);H(e.TEXTURE_2D,a,f);j(c.__webglFramebuffer,t,a,e.COLOR_ATTACHMENT0+s,e.TEXTURE_2D);if(b(a,f)){S(e.TEXTURE_2D)}}n.unbindTexture()}else{let i=e.TEXTURE_2D;if(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget){if(o){i=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY}else{console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")}}n.bindTexture(i,u.__webglTexture);H(i,l,f);j(c.__webglFramebuffer,t,l,e.COLOR_ATTACHMENT0,i);if(b(l,f)){S(i)}n.unbindTexture()}if(t.depthBuffer){Z(t)}}function $(t){const r=v(t)||o;const s=t.isWebGLMultipleRenderTargets===true?t.texture:[t.texture];for(let a=0,o=s.length;a<o;a++){const o=s[a];if(b(o,r)){const r=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D;const s=i.get(o).__webglTexture;n.bindTexture(r,s);S(r);n.unbindTexture()}}}function Q(t){if(o&&t.samples>0&&te(t)===false){const r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture];const s=t.width;const a=t.height;let o=e.COLOR_BUFFER_BIT;const l=[];const c=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;const u=i.get(t);const h=t.isWebGLMultipleRenderTargets===true;if(h){for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null);n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer);e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0)}}n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer);n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<r.length;n++){l.push(e.COLOR_ATTACHMENT0+n);if(t.depthBuffer){l.push(c)}const d=u.__ignoreDepthValues!==undefined?u.__ignoreDepthValues:false;if(d===false){if(t.depthBuffer)o|=e.DEPTH_BUFFER_BIT;if(t.stencilBuffer)o|=e.STENCIL_BUFFER_BIT}if(h){e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n])}if(d===true){e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[c]);e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[c])}if(h){const t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,s,a,0,0,s,a,o,e.NEAREST);if(f){e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}}n.bindFramebuffer(e.READ_FRAMEBUFFER,null);n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null);if(h){for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);const s=i.get(r[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer);e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,s,0)}}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}}function ee(e){return Math.min(h,e.samples)}function te(e){const n=i.get(e);return o&&e.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===true&&n.__useRenderToTexture!==false}function ne(e){const t=a.render.frame;if(p.get(e)!==t){p.set(e,t);e.update()}}function ie(e,n){const i=e.encoding;const r=e.format;const s=e.type;if(e.isCompressedTexture===true||e.isVideoTexture===true||e.format===gn)return n;if(i!==It){if(i===Dt){if(o===false){if(t.has("EXT_sRGB")===true&&r===Ie){e.format=gn;e.minFilter=me;e.generateMipmaps=false}else{n=fi.sRGBToLinear(n)}}else{if(r!==Ie||s!==ve){console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.")}}}else{console.error("THREE.WebGLTextures: Unsupported texture encoding:",i)}}return n}this.allocateTextureUnit=N;this.resetTextureUnits=D;this.setTexture2D=U;this.setTexture2DArray=F;this.setTexture3D=B;this.setTextureCube=z;this.rebindTextures=J;this.setupRenderTarget=K;this.updateRenderTargetMipmap=$;this.updateMultisampleRenderTarget=Q;this.setupDepthRenderbuffer=Z;this.setupFrameBufferTexture=j;this.useMultisampledRTT=te}function xh(e,t,n){const i=n.isWebGL2;function r(n,r=null){let s;if(n===ve)return e.UNSIGNED_BYTE;if(n===Re)return e.UNSIGNED_SHORT_4_4_4_4;if(n===Ce)return e.UNSIGNED_SHORT_5_5_5_1;if(n===Me)return e.BYTE;if(n===be)return e.SHORT;if(n===Se)return e.UNSIGNED_SHORT;if(n===Te)return e.INT;if(n===we)return e.UNSIGNED_INT;if(n===Ee)return e.FLOAT;if(n===Ae){if(i)return e.HALF_FLOAT;s=t.get("OES_texture_half_float");if(s!==null){return s.HALF_FLOAT_OES}else{return null}}if(n===Pe)return e.ALPHA;if(n===Ie)return e.RGBA;if(n===De)return e.LUMINANCE;if(n===Ne)return e.LUMINANCE_ALPHA;if(n===Oe)return e.DEPTH_COMPONENT;if(n===Ue)return e.DEPTH_STENCIL;if(n===gn){s=t.get("EXT_sRGB");if(s!==null){return s.SRGB_ALPHA_EXT}else{return null}}if(n===Fe)return e.RED;if(n===Be)return e.RED_INTEGER;if(n===ze)return e.RG;if(n===Ge)return e.RG_INTEGER;if(n===ke)return e.RGBA_INTEGER;if(n===He||n===Ve||n===We||n===Xe){if(r===Dt){s=t.get("WEBGL_compressed_texture_s3tc_srgb");if(s!==null){if(n===He)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ve)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===We)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Xe)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{return null}}else{s=t.get("WEBGL_compressed_texture_s3tc");if(s!==null){if(n===He)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ve)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===We)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Xe)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else{return null}}}if(n===je||n===qe||n===Ye||n===Ze){s=t.get("WEBGL_compressed_texture_pvrtc");if(s!==null){if(n===je)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===qe)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ye)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Ze)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else{return null}}if(n===Je){s=t.get("WEBGL_compressed_texture_etc1");if(s!==null){return s.COMPRESSED_RGB_ETC1_WEBGL}else{return null}}if(n===Ke||n===$e){s=t.get("WEBGL_compressed_texture_etc");if(s!==null){if(n===Ke)return r===Dt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===$e)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else{return null}}if(n===Qe||n===et||n===tt||n===nt||n===it||n===rt||n===st||n===at||n===ot||n===lt||n===ct||n===ut||n===ht||n===dt){s=t.get("WEBGL_compressed_texture_astc");if(s!==null){if(n===Qe)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===et)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===tt)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===nt)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===it)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===rt)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===st)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===at)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===ot)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===lt)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===ct)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===ut)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===ht)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===dt)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else{return null}}if(n===ft){s=t.get("EXT_texture_compression_bptc");if(s!==null){if(n===ft)return r===Dt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else{return null}}if(n===pt||n===mt||n===gt||n===_t){s=t.get("EXT_texture_compression_rgtc");if(s!==null){if(n===ft)return s.COMPRESSED_RED_RGTC1_EXT;if(n===mt)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===gt)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===_t)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else{return null}}if(n===Le){if(i)return e.UNSIGNED_INT_24_8;s=t.get("WEBGL_depth_texture");if(s!==null){return s.UNSIGNED_INT_24_8_WEBGL}else{return null}}return e[n]!==undefined?e[n]:null}return{convert:r}}class yh extends Bs{constructor(e=[]){super();this.isArrayCamera=true;this.cameras=e}}class vh extends Sr{constructor(){super();this.isGroup=true;this.type="Group"}}const Mh={type:"move"};class bh{constructor(){this._targetRay=null;this._grip=null;this._hand=null}getHandSpace(){if(this._hand===null){this._hand=new vh;this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false}}return this._hand}getTargetRaySpace(){if(this._targetRay===null){this._targetRay=new vh;this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;this._targetRay.hasLinearVelocity=false;this._targetRay.linearVelocity=new Qn;this._targetRay.hasAngularVelocity=false;this._targetRay.angularVelocity=new Qn}return this._targetRay}getGripSpace(){if(this._grip===null){this._grip=new vh;this._grip.matrixAutoUpdate=false;this._grip.visible=false;this._grip.hasLinearVelocity=false;this._grip.linearVelocity=new Qn;this._grip.hasAngularVelocity=false;this._grip.angularVelocity=new Qn}return this._grip}dispatchEvent(e){if(this._targetRay!==null){this._targetRay.dispatchEvent(e)}if(this._grip!==null){this._grip.dispatchEvent(e)}if(this._hand!==null){this._hand.dispatchEvent(e)}return this}connect(e){if(e&&e.hand){const t=this._hand;if(t){for(const n of e.hand.values()){this._getHandJoint(t,n)}}}this.dispatchEvent({type:"connected",data:e});return this}disconnect(e){this.dispatchEvent({type:"disconnected",data:e});if(this._targetRay!==null){this._targetRay.visible=false}if(this._grip!==null){this._grip.visible=false}if(this._hand!==null){this._hand.visible=false}return this}update(e,t,n){let i=null;let r=null;let s=null;const a=this._targetRay;const o=this._grip;const l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){s=true;for(const i of e.hand.values()){const e=t.getJointPose(i,n);const r=this._getHandJoint(l,i);if(e!==null){r.matrix.fromArray(e.transform.matrix);r.matrix.decompose(r.position,r.rotation,r.scale);r.jointRadius=e.radius}r.visible=e!==null}const i=l.joints["index-finger-tip"];const r=l.joints["thumb-tip"];const a=i.position.distanceTo(r.position);const o=.02;const c=.005;if(l.inputState.pinching&&a>o+c){l.inputState.pinching=false;this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})}else if(!l.inputState.pinching&&a<=o-c){l.inputState.pinching=true;this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this})}}else{if(o!==null&&e.gripSpace){r=t.getPose(e.gripSpace,n);if(r!==null){o.matrix.fromArray(r.transform.matrix);o.matrix.decompose(o.position,o.rotation,o.scale);if(r.linearVelocity){o.hasLinearVelocity=true;o.linearVelocity.copy(r.linearVelocity)}else{o.hasLinearVelocity=false}if(r.angularVelocity){o.hasAngularVelocity=true;o.angularVelocity.copy(r.angularVelocity)}else{o.hasAngularVelocity=false}}}}if(a!==null){i=t.getPose(e.targetRaySpace,n);if(i===null&&r!==null){i=r}if(i!==null){a.matrix.fromArray(i.transform.matrix);a.matrix.decompose(a.position,a.rotation,a.scale);if(i.linearVelocity){a.hasLinearVelocity=true;a.linearVelocity.copy(i.linearVelocity)}else{a.hasLinearVelocity=false}if(i.angularVelocity){a.hasAngularVelocity=true;a.angularVelocity.copy(i.angularVelocity)}else{a.hasAngularVelocity=false}this.dispatchEvent(Mh)}}}if(a!==null){a.visible=i!==null}if(o!==null){o.visible=r!==null}if(l!==null){l.visible=s!==null}return this}_getHandJoint(e,t){if(e.joints[t.jointName]===undefined){const n=new vh;n.matrixAutoUpdate=false;n.visible=false;e.joints[t.jointName]=n;e.add(n)}return e.joints[t.jointName]}}class Sh extends _i{constructor(e,t,n,i,r,s,a,o,l,c){c=c!==undefined?c:Oe;if(c!==Oe&&c!==Ue){throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat")}if(n===undefined&&c===Oe)n=we;if(n===undefined&&c===Ue)n=Le;super(null,i,r,s,a,o,c,n,l);this.isDepthTexture=true;this.image={width:e,height:t};this.magFilter=a!==undefined?a:ue;this.minFilter=o!==undefined?o:ue;this.flipY=false;this.generateMipmaps=false}}class Th extends _n{constructor(e,t){super();const n=this;let i=null;let r=1;let s=null;let a="local-floor";let o=1;let l=null;let c=null;let u=null;let h=null;let d=null;let f=null;const p=t.getContextAttributes();let m=null;let g=null;const _=[];const x=[];const y=new Set;const v=new Map;const M=new Bs;M.layers.enable(1);M.viewport=new xi;const b=new Bs;b.layers.enable(2);b.viewport=new xi;const S=[M,b];const T=new yh;T.layers.enable(1);T.layers.enable(2);let w=null;let E=null;this.cameraAutoUpdate=true;this.enabled=false;this.isPresenting=false;this.getController=function(e){let t=_[e];if(t===undefined){t=new bh;_[e]=t}return t.getTargetRaySpace()};this.getControllerGrip=function(e){let t=_[e];if(t===undefined){t=new bh;_[e]=t}return t.getGripSpace()};this.getHand=function(e){let t=_[e];if(t===undefined){t=new bh;_[e]=t}return t.getHandSpace()};function A(e){const t=x.indexOf(e.inputSource);if(t===-1){return}const n=_[t];if(n!==undefined){n.dispatchEvent({type:e.type,data:e.inputSource})}}function R(){i.removeEventListener("select",A);i.removeEventListener("selectstart",A);i.removeEventListener("selectend",A);i.removeEventListener("squeeze",A);i.removeEventListener("squeezestart",A);i.removeEventListener("squeezeend",A);i.removeEventListener("end",R);i.removeEventListener("inputsourceschange",C);for(let e=0;e<_.length;e++){const t=x[e];if(t===null)continue;x[e]=null;_[e].disconnect(t)}w=null;E=null;e.setRenderTarget(m);d=null;h=null;u=null;i=null;g=null;U.stop();n.isPresenting=false;n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(e){r=e;if(n.isPresenting===true){console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")}};this.setReferenceSpaceType=function(e){a=e;if(n.isPresenting===true){console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")}};this.getReferenceSpace=function(){return l||s};this.setReferenceSpace=function(e){l=e};this.getBaseLayer=function(){return h!==null?h:d};this.getBinding=function(){return u};this.getFrame=function(){return f};this.getSession=function(){return i};this.setSession=async function(c){i=c;if(i!==null){m=e.getRenderTarget();i.addEventListener("select",A);i.addEventListener("selectstart",A);i.addEventListener("selectend",A);i.addEventListener("squeeze",A);i.addEventListener("squeezestart",A);i.addEventListener("squeezeend",A);i.addEventListener("end",R);i.addEventListener("inputsourceschange",C);if(p.xrCompatible!==true){await t.makeXRCompatible()}if(i.renderState.layers===undefined||e.capabilities.isWebGL2===false){const n={antialias:i.renderState.layers===undefined?p.antialias:true,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,n);i.updateRenderState({baseLayer:d});g=new yi(d.framebufferWidth,d.framebufferHeight,{format:Ie,type:ve,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let n=null;let s=null;let a=null;if(p.depth){a=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24;n=p.stencil?Ue:Oe;s=p.stencil?Le:we}const o={colorFormat:t.RGBA8,depthFormat:a,scaleFactor:r};u=new XRWebGLBinding(i,t);h=u.createProjectionLayer(o);i.updateRenderState({layers:[h]});g=new yi(h.textureWidth,h.textureHeight,{format:Ie,type:ve,depthTexture:new Sh(h.textureWidth,h.textureHeight,s,undefined,undefined,undefined,undefined,undefined,undefined,n),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const l=e.properties.get(g);l.__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=true;this.setFoveation(o);l=null;s=await i.requestReferenceSpace(a);U.setContext(i);U.start();n.isPresenting=true;n.dispatchEvent({type:"sessionstart"})}};function C(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t];const i=x.indexOf(n);if(i>=0){x[i]=null;_[i].disconnect(n)}}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=x.indexOf(n);if(i===-1){for(let e=0;e<_.length;e++){if(e>=x.length){x.push(n);i=e;break}else if(x[e]===null){x[e]=n;i=e;break}}if(i===-1)break}const r=_[i];if(r){r.connect(n)}}}const L=new Qn;const P=new Qn;function I(e,t,n){L.setFromMatrixPosition(t.matrixWorld);P.setFromMatrixPosition(n.matrixWorld);const i=L.distanceTo(P);const r=t.projectionMatrix.elements;const s=n.projectionMatrix.elements;const a=r[14]/(r[10]-1);const o=r[14]/(r[10]+1);const l=(r[9]+1)/r[5];const c=(r[9]-1)/r[5];const u=(r[8]-1)/r[0];const h=(s[8]+1)/s[0];const d=a*u;const f=a*h;const p=i/(-u+h);const m=p*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale);e.translateX(m);e.translateZ(p);e.matrixWorld.compose(e.position,e.quaternion,e.scale);e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=a+p;const _=o+p;const x=d-m;const y=f+(i-m);const v=l*o/_*g;const M=c*o/_*g;e.projectionMatrix.makePerspective(x,y,v,M,g,_)}function D(e,t){if(t===null){e.matrixWorld.copy(e.matrix)}else{e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix)}e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(i===null)return;T.near=b.near=M.near=e.near;T.far=b.far=M.far=e.far;if(w!==T.near||E!==T.far){i.updateRenderState({depthNear:T.near,depthFar:T.far});w=T.near;E=T.far}const t=e.parent;const n=T.cameras;D(T,t);for(let e=0;e<n.length;e++){D(n[e],t)}T.matrixWorld.decompose(T.position,T.quaternion,T.scale);e.matrix.copy(T.matrix);e.matrix.decompose(e.position,e.quaternion,e.scale);const r=e.children;for(let e=0,t=r.length;e<t;e++){r[e].updateMatrixWorld(true)}if(n.length===2){I(T,M,b)}else{T.projectionMatrix.copy(M.projectionMatrix)}};this.getCamera=function(){return T};this.getFoveation=function(){if(h===null&&d===null){return undefined}return o};this.setFoveation=function(e){o=e;if(h!==null){h.fixedFoveation=e}if(d!==null&&d.fixedFoveation!==undefined){d.fixedFoveation=e}};this.getPlanes=function(){return y};let N=null;function O(t,i){c=i.getViewerPose(l||s);f=i;if(c!==null){const t=c.views;if(d!==null){e.setRenderTargetFramebuffer(g,d.framebuffer);e.setRenderTarget(g)}let n=false;if(t.length!==T.cameras.length){T.cameras.length=0;n=true}for(let i=0;i<t.length;i++){const r=t[i];let s=null;if(d!==null){s=d.getViewport(r)}else{const t=u.getViewSubImage(h,r);s=t.viewport;if(i===0){e.setRenderTargetTextures(g,t.colorTexture,h.ignoreDepthValues?undefined:t.depthStencilTexture);e.setRenderTarget(g)}}let a=S[i];if(a===undefined){a=new Bs;a.layers.enable(i);a.viewport=new xi;S[i]=a}a.matrix.fromArray(r.transform.matrix);a.projectionMatrix.fromArray(r.projectionMatrix);a.viewport.set(s.x,s.y,s.width,s.height);if(i===0){T.matrix.copy(a.matrix)}if(n===true){T.cameras.push(a)}}}for(let e=0;e<_.length;e++){const t=x[e];const n=_[e];if(t!==null&&n!==undefined){n.update(t,i,l||s)}}if(N)N(t,i);if(i.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:i.detectedPlanes});let e=null;for(const t of y){if(!i.detectedPlanes.has(t)){if(e===null){e=[]}e.push(t)}}if(e!==null){for(const t of e){y.delete(t);v.delete(t);n.dispatchEvent({type:"planeremoved",data:t})}}for(const e of i.detectedPlanes){if(!y.has(e)){y.add(e);v.set(e,i.lastChangedTime);n.dispatchEvent({type:"planeadded",data:e})}else{const t=v.get(e);if(e.lastChangedTime>t){v.set(e,e.lastChangedTime);n.dispatchEvent({type:"planechanged",data:e})}}}}f=null}const U=new Ks;U.setAnimationLoop(O);this.setAnimationLoop=function(e){N=e};this.dispose=function(){}}}function wh(e,t){function n(t,n){n.color.getRGB(t.fogColor.value,Is(e));if(n.isFog){t.fogNear.value=n.near;t.fogFar.value=n.far}else if(n.isFogExp2){t.fogDensity.value=n.density}}function i(e,t,n,i,f){if(t.isMeshBasicMaterial){r(e,t)}else if(t.isMeshLambertMaterial){r(e,t)}else if(t.isMeshToonMaterial){r(e,t);u(e,t)}else if(t.isMeshPhongMaterial){r(e,t);c(e,t)}else if(t.isMeshStandardMaterial){r(e,t);h(e,t);if(t.isMeshPhysicalMaterial){d(e,t,f)}}else if(t.isMeshMatcapMaterial){r(e,t);p(e,t)}else if(t.isMeshDepthMaterial){r(e,t)}else if(t.isMeshDistanceMaterial){r(e,t);m(e,t)}else if(t.isMeshNormalMaterial){r(e,t)}else if(t.isLineBasicMaterial){s(e,t);if(t.isLineDashedMaterial){a(e,t)}}else if(t.isPointsMaterial){o(e,t,n,i)}else if(t.isSpriteMaterial){l(e,t)}else if(t.isShadowMaterial){e.color.value.copy(t.color);e.opacity.value=t.opacity}else if(t.isShaderMaterial){t.uniformsNeedUpdate=false}}function r(n,i){n.opacity.value=i.opacity;if(i.color){n.diffuse.value.copy(i.color)}if(i.emissive){n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity)}if(i.map){n.map.value=i.map}if(i.alphaMap){n.alphaMap.value=i.alphaMap}if(i.bumpMap){n.bumpMap.value=i.bumpMap;n.bumpScale.value=i.bumpScale;if(i.side===f)n.bumpScale.value*=-1}if(i.displacementMap){n.displacementMap.value=i.displacementMap;n.displacementScale.value=i.displacementScale;n.displacementBias.value=i.displacementBias}if(i.emissiveMap){n.emissiveMap.value=i.emissiveMap}if(i.normalMap){n.normalMap.value=i.normalMap;n.normalScale.value.copy(i.normalScale);if(i.side===f)n.normalScale.value.negate()}if(i.specularMap){n.specularMap.value=i.specularMap}if(i.alphaTest>0){n.alphaTest.value=i.alphaTest}const r=t.get(i).envMap;if(r){n.envMap.value=r;n.flipEnvMap.value=r.isCubeTexture&&r.isRenderTargetTexture===false?-1:1;n.reflectivity.value=i.reflectivity;n.ior.value=i.ior;n.refractionRatio.value=i.refractionRatio}if(i.lightMap){n.lightMap.value=i.lightMap;const t=e.useLegacyLights===true?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*t}if(i.aoMap){n.aoMap.value=i.aoMap;n.aoMapIntensity.value=i.aoMapIntensity}let s;if(i.map){s=i.map}else if(i.specularMap){s=i.specularMap}else if(i.displacementMap){s=i.displacementMap}else if(i.normalMap){s=i.normalMap}else if(i.bumpMap){s=i.bumpMap}else if(i.roughnessMap){s=i.roughnessMap}else if(i.metalnessMap){s=i.metalnessMap}else if(i.alphaMap){s=i.alphaMap}else if(i.emissiveMap){s=i.emissiveMap}else if(i.clearcoatMap){s=i.clearcoatMap}else if(i.clearcoatNormalMap){s=i.clearcoatNormalMap}else if(i.clearcoatRoughnessMap){s=i.clearcoatRoughnessMap}else if(i.iridescenceMap){s=i.iridescenceMap}else if(i.iridescenceThicknessMap){s=i.iridescenceThicknessMap}else if(i.specularIntensityMap){s=i.specularIntensityMap}else if(i.specularColorMap){s=i.specularColorMap}else if(i.transmissionMap){s=i.transmissionMap}else if(i.thicknessMap){s=i.thicknessMap}else if(i.sheenColorMap){s=i.sheenColorMap}else if(i.sheenRoughnessMap){s=i.sheenRoughnessMap}if(s!==undefined){if(s.isWebGLRenderTarget){s=s.texture}if(s.matrixAutoUpdate===true){s.updateMatrix()}n.uvTransform.value.copy(s.matrix)}let a;if(i.aoMap){a=i.aoMap}else if(i.lightMap){a=i.lightMap}if(a!==undefined){if(a.isWebGLRenderTarget){a=a.texture}if(a.matrixAutoUpdate===true){a.updateMatrix()}n.uv2Transform.value.copy(a.matrix)}}function s(e,t){if(t.specularMap){e.specularMap.value=t.specularMap}e.diffuse.value.copy(t.color);e.opacity.value=t.opacity}function a(e,t){e.dashSize.value=t.dashSize;e.totalSize.value=t.dashSize+t.gapSize;e.scale.value=t.scale}function o(e,t,n,i){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity;e.size.value=t.size*n;e.scale.value=i*.5;if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}if(t.alphaTest>0){e.alphaTest.value=t.alphaTest}let r;if(t.map){r=t.map}else if(t.alphaMap){r=t.alphaMap}if(r!==undefined){if(r.matrixAutoUpdate===true){r.updateMatrix()}e.uvTransform.value.copy(r.matrix)}}function l(e,t){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity;e.rotation.value=t.rotation;if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}if(t.alphaTest>0){e.alphaTest.value=t.alphaTest}let n;if(t.map){n=t.map}else if(t.alphaMap){n=t.alphaMap}if(n!==undefined){if(n.matrixAutoUpdate===true){n.updateMatrix()}e.uvTransform.value.copy(n.matrix)}}function c(e,t){e.specular.value.copy(t.specular);e.shininess.value=Math.max(t.shininess,1e-4)}function u(e,t){if(t.gradientMap){e.gradientMap.value=t.gradientMap}}function h(e,n){e.roughness.value=n.roughness;e.metalness.value=n.metalness;if(n.roughnessMap){e.roughnessMap.value=n.roughnessMap}if(n.metalnessMap){e.metalnessMap.value=n.metalnessMap}const i=t.get(n).envMap;if(i){e.envMapIntensity.value=n.envMapIntensity}}function d(e,t,n){e.ior.value=t.ior;if(t.sheen>0){e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen);e.sheenRoughness.value=t.sheenRoughness;if(t.sheenColorMap){e.sheenColorMap.value=t.sheenColorMap}if(t.sheenRoughnessMap){e.sheenRoughnessMap.value=t.sheenRoughnessMap}}if(t.clearcoat>0){e.clearcoat.value=t.clearcoat;e.clearcoatRoughness.value=t.clearcoatRoughness;if(t.clearcoatMap){e.clearcoatMap.value=t.clearcoatMap}if(t.clearcoatRoughnessMap){e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap}if(t.clearcoatNormalMap){e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale);e.clearcoatNormalMap.value=t.clearcoatNormalMap;if(t.side===f){e.clearcoatNormalScale.value.negate()}}}if(t.iridescence>0){e.iridescence.value=t.iridescence;e.iridescenceIOR.value=t.iridescenceIOR;e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0];e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1];if(t.iridescenceMap){e.iridescenceMap.value=t.iridescenceMap}if(t.iridescenceThicknessMap){e.iridescenceThicknessMap.value=t.iridescenceThicknessMap}}if(t.transmission>0){e.transmission.value=t.transmission;e.transmissionSamplerMap.value=n.texture;e.transmissionSamplerSize.value.set(n.width,n.height);if(t.transmissionMap){e.transmissionMap.value=t.transmissionMap}e.thickness.value=t.thickness;if(t.thicknessMap){e.thicknessMap.value=t.thicknessMap}e.attenuationDistance.value=t.attenuationDistance;e.attenuationColor.value.copy(t.attenuationColor)}e.specularIntensity.value=t.specularIntensity;e.specularColor.value.copy(t.specularColor);if(t.specularIntensityMap){e.specularIntensityMap.value=t.specularIntensityMap}if(t.specularColorMap){e.specularColorMap.value=t.specularColorMap}}function p(e,t){if(t.matcap){e.matcap.value=t.matcap}}function m(e,t){e.referencePosition.value.copy(t.referencePosition);e.nearDistance.value=t.nearDistance;e.farDistance.value=t.farDistance}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Eh(e,t,n,i){let r={};let s={};let a=[];const o=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e,t){const n=t.program;i.uniformBlockBinding(e,n)}function c(e,n){let a=r[e.id];if(a===undefined){p(e);a=u(e);r[e.id]=a;e.addEventListener("dispose",g)}const o=n.program;i.updateUBOMapping(e,o);const l=t.render.frame;if(s[e.id]!==l){d(e);s[e.id]=l}}function u(t){const n=h();t.__bindingPointIndex=n;const i=e.createBuffer();const r=t.__size;const s=t.usage;e.bindBuffer(e.UNIFORM_BUFFER,i);e.bufferData(e.UNIFORM_BUFFER,r,s);e.bindBuffer(e.UNIFORM_BUFFER,null);e.bindBufferBase(e.UNIFORM_BUFFER,n,i);return i}function h(){for(let e=0;e<o;e++){if(a.indexOf(e)===-1){a.push(e);return e}}console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.");return 0}function d(t){const n=r[t.id];const i=t.uniforms;const s=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=i.length;t<n;t++){const n=i[t];if(f(n,t,s)===true){const t=n.__offset;const i=Array.isArray(n.value)?n.value:[n.value];let r=0;for(let s=0;s<i.length;s++){const a=i[s];const o=m(a);if(typeof a==="number"){n.__data[0]=a;e.bufferSubData(e.UNIFORM_BUFFER,t+r,n.__data)}else if(a.isMatrix3){n.__data[0]=a.elements[0];n.__data[1]=a.elements[1];n.__data[2]=a.elements[2];n.__data[3]=a.elements[0];n.__data[4]=a.elements[3];n.__data[5]=a.elements[4];n.__data[6]=a.elements[5];n.__data[7]=a.elements[0];n.__data[8]=a.elements[6];n.__data[9]=a.elements[7];n.__data[10]=a.elements[8];n.__data[11]=a.elements[0]}else{a.toArray(n.__data,r);r+=o.storage/Float32Array.BYTES_PER_ELEMENT}}e.bufferSubData(e.UNIFORM_BUFFER,t,n.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}function f(e,t,n){const i=e.value;if(n[t]===undefined){if(typeof i==="number"){n[t]=i}else{const e=Array.isArray(i)?i:[i];const r=[];for(let t=0;t<e.length;t++){r.push(e[t].clone())}n[t]=r}return true}else{if(typeof i==="number"){if(n[t]!==i){n[t]=i;return true}}else{const e=Array.isArray(n[t])?n[t]:[n[t]];const r=Array.isArray(i)?i:[i];for(let t=0;t<e.length;t++){const n=e[t];if(n.equals(r[t])===false){n.copy(r[t]);return true}}}}return false}function p(e){const t=e.uniforms;let n=0;const i=16;let r=0;for(let e=0,s=t.length;e<s;e++){const s=t[e];const a={boundary:0,storage:0};const o=Array.isArray(s.value)?s.value:[s.value];for(let e=0,t=o.length;e<t;e++){const t=o[e];const n=m(t);a.boundary+=n.boundary;a.storage+=n.storage}s.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT);s.__offset=n;if(e>0){r=n%i;const e=i-r;if(r!==0&&e-a.boundary<0){n+=i-r;s.__offset=n}}n+=a.storage}r=n%i;if(r>0)n+=i-r;e.__size=n;e.__cache={};return this}function m(e){const t={boundary:0,storage:0};if(typeof e==="number"){t.boundary=4;t.storage=4}else if(e.isVector2){t.boundary=8;t.storage=8}else if(e.isVector3||e.isColor){t.boundary=16;t.storage=12}else if(e.isVector4){t.boundary=16;t.storage=16}else if(e.isMatrix3){t.boundary=48;t.storage=48}else if(e.isMatrix4){t.boundary=64;t.storage=64}else if(e.isTexture){console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.")}else{console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e)}return t}function g(t){const n=t.target;n.removeEventListener("dispose",g);const i=a.indexOf(n.__bindingPointIndex);a.splice(i,1);e.deleteBuffer(r[n.id]);delete r[n.id];delete s[n.id]}function _(){for(const t in r){e.deleteBuffer(r[t])}a=[];r={};s={}}return{bind:l,update:c,dispose:_}}function Ah(){const e=Kn("canvas");e.style.display="block";return e}function Rh(e={}){this.isWebGLRenderer=true;const n=e.canvas!==undefined?e.canvas:Ah(),i=e.context!==undefined?e.context:null,r=e.depth!==undefined?e.depth:true,s=e.stencil!==undefined?e.stencil:true,a=e.antialias!==undefined?e.antialias:false,o=e.premultipliedAlpha!==undefined?e.premultipliedAlpha:true,l=e.preserveDrawingBuffer!==undefined?e.preserveDrawingBuffer:false,c=e.powerPreference!==undefined?e.powerPreference:"default",u=e.failIfMajorPerformanceCaveat!==undefined?e.failIfMajorPerformanceCaveat:false;let h;if(i!==null){h=i.getContextAttributes().alpha}else{h=e.alpha!==undefined?e.alpha:false}let m=null;let g=null;const _=[];const x=[];this.domElement=n;this.debug={checkShaderErrors:true};this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.clippingPlanes=[];this.localClippingEnabled=false;this.outputEncoding=It;this.useLegacyLights=true;this.toneMapping=Z;this.toneMappingExposure=1;const y=this;let v=false;let M=0;let b=0;let S=null;let T=-1;let w=null;const E=new xi;const A=new xi;let R=null;let C=n.width;let L=n.height;let P=1;let I=null;let D=null;const N=new xi(0,0,C,L);const O=new xi(0,0,C,L);let U=false;const F=new Js;let B=false;let z=false;let G=null;const k=new $i;const H=new Qn;const V={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function W(){return S===null?P:1}let X=i;function j(e,t){for(let i=0;i<e.length;i++){const r=e[i];const s=n.getContext(r,t);if(s!==null)return s}return null}try{const e={alpha:true,depth:r,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if("setAttribute"in n)n.setAttribute("data-engine",`three.js r${t}`);n.addEventListener("webglcontextlost",we,false);n.addEventListener("webglcontextrestored",Re,false);n.addEventListener("webglcontextcreationerror",Ce,false);if(X===null){const t=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===true){t.shift()}X=j(t,e);if(X===null){if(j(t)){throw new Error("Error creating WebGL context with your selected attributes.")}else{throw new Error("Error creating WebGL context.")}}}if(X.getShaderPrecisionFormat===undefined){X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}}catch(e){console.error("THREE.WebGLRenderer: "+e.message);throw e}let q,Y,J,K;let $,Q,ee,te,ne,ie,re;let se,ae,oe,le,ce,ue;let he,de,fe,pe;let me,ge,_e;let ye,Me,be;function Se(){q=new cc(X);Y=new kl(X,q,e);q.init(Y);me=new xh(X,q,Y);J=new gh(X,q,Y);K=new dc(X);$=new Qu;Q=new _h(X,q,J,$,Y,me,K);ee=new Vl(y);te=new lc(y);ne=new $s(X,Y);ge=new zl(X,q,ne,Y);ie=new uc(X,ne,K,ge);re=new gc(X,ie,ne,K);de=new mc(X,Y,Q);ce=new Hl($);se=new $u(y,ee,te,q,Y,ge,ce);ae=new wh(y,$);oe=new ih;le=new uh(q,Y);he=new Bl(y,ee,te,J,re,h,o);ue=new mh(y,re,Y);_e=new Eh(X,K,Y,J);fe=new Gl(X,q,K,Y);pe=new hc(X,q,K,Y);K.programs=se.programs;y.capabilities=Y;y.extensions=q;y.properties=$;y.renderLists=oe;y.shadowMap=ue;y.state=J;y.info=K;ye=Math.min(X.getParameter(X.RED_BITS),8);Me=Math.min(X.getParameter(X.GREEN_BITS),8);be=Math.min(X.getParameter(X.BLUE_BITS),8)}Se();const Te=new Th(y,X);this.xr=Te;this.getContext=function(){return X};this.getContextRedBits=function(){return ye};this.getContextGreenBits=function(){return Me};this.getContextBlueBits=function(){return be};this.getContextAttributes=function(){return X.getContextAttributes()};this.forceContextLoss=function(){const e=q.get("WEBGL_lose_context");if(e)e.loseContext()};this.forceContextRestore=function(){const e=q.get("WEBGL_lose_context");if(e)e.restoreContext()};this.getPixelRatio=function(){return P};this.setPixelRatio=function(e){if(e===undefined)return;P=e;this.setSize(C,L,false)};this.getSize=function(e){return e.set(C,L)};this.setSize=function(e,t,i=true){if(Te.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=e;L=t;n.width=Math.floor(e*P);n.height=Math.floor(t*P);if(i===true){n.style.width=e+"px";n.style.height=t+"px"}this.setViewport(0,0,e,t)};this.getDrawingBufferSize=function(e){return e.set(C*P,L*P).floor()};this.setDrawingBufferSize=function(e,t,i){C=e;L=t;P=i;n.width=Math.floor(e*i);n.height=Math.floor(t*i);this.setViewport(0,0,e,t)};this.getCurrentViewport=function(e){return e.copy(E)};this.getViewport=function(e){return e.copy(N)};this.setViewport=function(e,t,n,i){if(e.isVector4){N.set(e.x,e.y,e.z,e.w)}else{N.set(e,t,n,i)}J.viewport(E.copy(N).multiplyScalar(P).floor())};this.getScissor=function(e){return e.copy(O)};this.setScissor=function(e,t,n,i){if(e.isVector4){O.set(e.x,e.y,e.z,e.w)}else{O.set(e,t,n,i)}J.scissor(A.copy(O).multiplyScalar(P).floor())};this.getScissorTest=function(){return U};this.setScissorTest=function(e){J.setScissorTest(U=e)};this.setOpaqueSort=function(e){I=e};this.setTransparentSort=function(e){D=e};this.getClearColor=function(e){return e.copy(he.getClearColor())};this.setClearColor=function(){he.setClearColor.apply(he,arguments)};this.getClearAlpha=function(){return he.getClearAlpha()};this.setClearAlpha=function(){he.setClearAlpha.apply(he,arguments)};this.clear=function(e=true,t=true,n=true){let i=0;if(e)i|=X.COLOR_BUFFER_BIT;if(t)i|=X.DEPTH_BUFFER_BIT;if(n)i|=X.STENCIL_BUFFER_BIT;X.clear(i)};this.clearColor=function(){this.clear(true,false,false)};this.clearDepth=function(){this.clear(false,true,false)};this.clearStencil=function(){this.clear(false,false,true)};this.dispose=function(){n.removeEventListener("webglcontextlost",we,false);n.removeEventListener("webglcontextrestored",Re,false);n.removeEventListener("webglcontextcreationerror",Ce,false);oe.dispose();le.dispose();$.dispose();ee.dispose();te.dispose();re.dispose();ge.dispose();_e.dispose();se.dispose();Te.dispose();Te.removeEventListener("sessionstart",Ue);Te.removeEventListener("sessionend",Fe);if(G){G.dispose();G=null}Be.stop()};function we(e){e.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");v=true}function Re(){console.log("THREE.WebGLRenderer: Context Restored.");v=false;const e=K.autoReset;const t=ue.enabled;const n=ue.autoUpdate;const i=ue.needsUpdate;const r=ue.type;Se();K.autoReset=e;ue.enabled=t;ue.autoUpdate=n;ue.needsUpdate=i;ue.type=r}function Ce(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Le(e){const t=e.target;t.removeEventListener("dispose",Le);Pe(t)}function Pe(e){De(e);$.remove(e)}function De(e){const t=$.get(e).programs;if(t!==undefined){t.forEach(function(e){se.releaseProgram(e)});if(e.isShaderMaterial){se.releaseShaderCache(e)}}}this.renderBufferDirect=function(e,t,n,i,r,s){if(t===null)t=V;const a=r.isMesh&&r.matrixWorld.determinant()<0;const o=je(e,t,n,i,r);J.setMaterial(i,a);let l=n.index;let c=1;if(i.wireframe===true){l=ie.getWireframeAttribute(n);c=2}const u=n.drawRange;const h=n.attributes.position;let d=u.start*c;let f=(u.start+u.count)*c;if(s!==null){d=Math.max(d,s.start*c);f=Math.min(f,(s.start+s.count)*c)}if(l!==null){d=Math.max(d,0);f=Math.min(f,l.count)}else if(h!==undefined&&h!==null){d=Math.max(d,0);f=Math.min(f,h.count)}const p=f-d;if(p<0||p===Infinity)return;ge.setup(r,i,o,n,l);let m;let g=fe;if(l!==null){m=ne.get(l);g=pe;g.setIndex(m)}if(r.isMesh){if(i.wireframe===true){J.setLineWidth(i.wireframeLinewidth*W());g.setMode(X.LINES)}else{g.setMode(X.TRIANGLES)}}else if(r.isLine){let e=i.linewidth;if(e===undefined)e=1;J.setLineWidth(e*W());if(r.isLineSegments){g.setMode(X.LINES)}else if(r.isLineLoop){g.setMode(X.LINE_LOOP)}else{g.setMode(X.LINE_STRIP)}}else if(r.isPoints){g.setMode(X.POINTS)}else if(r.isSprite){g.setMode(X.TRIANGLES)}if(r.isInstancedMesh){g.renderInstances(d,p,r.count)}else if(n.isInstancedBufferGeometry){const e=n._maxInstanceCount!==undefined?n._maxInstanceCount:Infinity;const t=Math.min(n.instanceCount,e);g.renderInstances(d,p,t)}else if(r.userData.isGeometryCluster&&n.userData.renderInstanceCount){g.renderInstances(d,p,n.userData.renderInstanceCount)}else{g.render(d,p)}};this.compile=function(e,t){function n(e,t,n){if(e.transparent===true&&e.side===p&&e.forceSinglePass===false){e.side=f;e.needsUpdate=true;We(e,t,n);e.side=d;e.needsUpdate=true;We(e,t,n);e.side=p}else{We(e,t,n)}}g=le.get(e);g.init();x.push(g);e.traverseVisible(function(e){if(e.isLight&&e.layers.test(t.layers)){g.pushLight(e);if(e.castShadow){g.pushShadow(e)}}});g.setupLights(y.useLegacyLights);e.traverse(function(t){const i=t.material;if(i){if(Array.isArray(i)){for(let r=0;r<i.length;r++){const s=i[r];n(s,e,t)}}else{n(i,e,t)}}});x.pop();g=null};let Ne=null;function Oe(e){if(Ne)Ne(e)}function Ue(){Be.stop()}function Fe(){Be.start()}const Be=new Ks;Be.setAnimationLoop(Oe);if(typeof self!=="undefined")Be.setContext(self);this.setAnimationLoop=function(e){Ne=e;Te.setAnimationLoop(e);e===null?Be.stop():Be.start()};Te.addEventListener("sessionstart",Ue);Te.addEventListener("sessionend",Fe);this.render=function(e,t){if(t!==undefined&&t.isCamera!==true){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===true)return;if(e.matrixWorldAutoUpdate===true)e.updateMatrixWorld();if(t.parent===null&&t.matrixWorldAutoUpdate===true)t.updateMatrixWorld();if(Te.enabled===true&&Te.isPresenting===true){if(Te.cameraAutoUpdate===true)Te.updateCamera(t);t=Te.getCamera()}if(e.isScene===true)e.onBeforeRender(y,e,t,S);g=le.get(e,x.length);g.init();x.push(g);k.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);F.setFromProjectionMatrix(k);z=this.localClippingEnabled;B=ce.init(this.clippingPlanes,z);m=oe.get(e,_.length);m.init(false);_.push(m);const n=e.userData;const i=n.geometryClusters;if(i&&n.useGeometryClusters!==false){for(let e=0,n=i.length;e<n;++e){const n=i[e];if(n.geometry.boundingSphere&&!n.material.transparent){ze(n,t,0,y.sortObjects)}}}let r=n.doTraversalRendering;if(m.opaque.length===0){ze(e,t,0,y.sortObjects);r=false}else{for(let n=0,i=e.children.length;n<i;++n){const i=e.children[n];if(i.name==="DefaultLights"){ze(i,t,0,y.sortObjects)}}}m.finish();if(y.sortObjects===true){m.sort(I,D)}if(B===true)ce.beginShadows();const s=g.state.shadowsArray;ue.render(s,e,t);if(B===true)ce.endShadows();if(this.info.autoReset===true)this.info.reset();he.render(m,e);g.setupLights(y.useLegacyLights);if(t.isArrayCamera){const n=t.cameras;for(let t=0,i=n.length;t<i;t++){const i=n[t];Ge(m,e,i,i.viewport)}}else{Ge(m,e,t)}if(r){g.init();m.init(true);ze(e,t,0,y.sortObjects);m.finish();if(y.sortObjects===true){m.sort(I,D)}g.setupLights(y.useLegacyLights);if(t.isArrayCamera){const n=t.cameras;for(let t=0,i=n.length;t<i;t++){const i=n[t];Ge(m,e,i,i.viewport)}}else{Ge(m,e,t)}}if(S!==null){Q.updateMultisampleRenderTarget(S);Q.updateRenderTargetMipmap(S)}if(e.isScene===true)e.onAfterRender(y,e,t);ge.resetDefaultState();T=-1;w=null;x.pop();if(x.length>0){g=x[x.length-1]}else{g=null}_.pop();if(_.length>0){m=_[_.length-1]}else{m=null}};function ze(e,t,n,i){if(e.visible===false)return;const r=e.layers.test(t.layers);if(r){if(e.isGroup){n=e.renderOrder}else if(e.isLOD){if(e.autoUpdate===true)e.update(t)}else if(e.isLight){g.pushLight(e);if(e.castShadow){g.pushShadow(e)}}else if(e.isSprite){if(!e.frustumCulled||F.intersectsSprite(e)){if(i){H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k)}const t=re.update(e);const r=e.material;if(r.visible){m.push(e,t,r,n,H.z,null)}}}else if(e.isMesh||e.isLine||e.isPoints){if(e.isSkinnedMesh){if(e.skeleton.frame!==K.render.frame){e.skeleton.update();e.skeleton.frame=K.render.frame}}if(!e.frustumCulled||F.intersectsObject(e)){if(i){H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k)}const t=re.update(e);const r=e.material;if(Array.isArray(r)){const i=t.groups;for(let s=0,a=i.length;s<a;s++){const a=i[s];const o=r[a.materialIndex];if(o&&o.visible){m.push(e,t,o,n,H.z,a)}}}else if(r.visible){const i=e.userData.renderGroup;m.push(e,t,r,n,H.z,i?i:null)}}}}const s=e.children;for(let e=0,r=s.length;e<r;e++){ze(s[e],t,n,i)}}function Ge(e,t,n,i){const r=e.opaque;const s=e.transmissive;const a=e.transparent;g.setupLightsView(n);if(B===true)ce.setGlobalState(y.clippingPlanes,n);if(s.length>0)ke(r,t,n);if(i)J.viewport(E.copy(i));if(r.length>0)He(r,t,n);if(s.length>0)He(s,t,n);if(a.length>0)He(a,t,n);J.buffers.depth.setTest(true);J.buffers.depth.setMask(true);J.buffers.color.setMask(true);J.setPolygonOffset(false)}function ke(e,t,n){const i=Y.isWebGL2;if(G===null){G=new yi(1024,1024,{generateMipmaps:true,type:q.has("EXT_color_buffer_half_float")?Ae:ve,minFilter:xe,samples:i&&a===true?4:0})}const r=y.getRenderTarget();y.setRenderTarget(G);y.clear();const s=y.toneMapping;y.toneMapping=Z;He(e,t,n);y.toneMapping=s;Q.updateMultisampleRenderTarget(G);Q.updateRenderTargetMipmap(G);y.setRenderTarget(r)}function He(e,t,n){const i=t.isScene===true?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){const s=e[r];const a=s.object;const o=s.geometry;const l=i===null?s.material:i;const c=s.group;if(a.layers.test(n.layers)){Ve(a,t,n,o,l,c)}}}function Ve(e,t,n,i,r,s){e.onBeforeRender(y,t,n,i,r,s);e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld);e.normalMatrix.getNormalMatrix(e.modelViewMatrix);r.onBeforeRender(y,t,n,i,e,s);if(r.transparent===true&&r.side===p&&r.forceSinglePass===false){r.side=f;r.needsUpdate=true;y.renderBufferDirect(n,t,i,r,e,s);r.side=d;r.needsUpdate=true;y.renderBufferDirect(n,t,i,r,e,s);r.side=p}else{y.renderBufferDirect(n,t,i,r,e,s)}e.onAfterRender(y,t,n,i,r,s)}function We(e,t,n){if(t.isScene!==true)t=V;const i=$.get(e);const r=g.state.lights;const s=g.state.shadowsArray;const a=r.state.version;const o=se.getParameters(e,r.state,s,t,n);const l=se.getProgramCacheKey(o);let c=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null;i.fog=t.fog;i.envMap=(e.isMeshStandardMaterial?te:ee).get(e.envMap||i.environment);if(c===undefined){e.addEventListener("dispose",Le);c=new Map;i.programs=c}let u=c.get(l);if(u!==undefined){if(i.currentProgram===u&&i.lightsStateVersion===a){Xe(e,o);return u}}else{o.uniforms=se.getUniforms(e);e.onBuild(n,o,y);e.onBeforeCompile(o,y);u=se.acquireProgram(o,l);c.set(l,u);i.uniforms=o.uniforms}const h=i.uniforms;if(!e.isShaderMaterial&&!e.isRawShaderMaterial||e.clipping===true){h.clippingPlanes=ce.uniform}Xe(e,o);i.needsLights=Ye(e);i.lightsStateVersion=a;if(i.needsLights){h.ambientLightColor.value=r.state.ambient;h.lightProbe.value=r.state.probe;h.directionalLights.value=r.state.directional;h.directionalLightShadows.value=r.state.directionalShadow;h.spotLights.value=r.state.spot;h.spotLightShadows.value=r.state.spotShadow;h.rectAreaLights.value=r.state.rectArea;h.ltc_1.value=r.state.rectAreaLTC1;h.ltc_2.value=r.state.rectAreaLTC2;h.pointLights.value=r.state.point;h.pointLightShadows.value=r.state.pointShadow;h.hemisphereLights.value=r.state.hemi;h.directionalShadowMap.value=r.state.directionalShadowMap;h.directionalShadowMatrix.value=r.state.directionalShadowMatrix;h.spotShadowMap.value=r.state.spotShadowMap;h.spotLightMatrix.value=r.state.spotLightMatrix;h.spotLightMap.value=r.state.spotLightMap;h.pointShadowMap.value=r.state.pointShadowMap;h.pointShadowMatrix.value=r.state.pointShadowMatrix}const d=u.getUniforms();const f=bu.seqWithValue(d.seq,h);i.currentProgram=u;i.uniformsList=f;return u}function Xe(e,t){const n=$.get(e);n.outputEncoding=t.outputEncoding;n.instancing=t.instancing;n.skinning=t.skinning;n.morphTargets=t.morphTargets;n.morphNormals=t.morphNormals;n.morphColors=t.morphColors;n.morphTargetsCount=t.morphTargetsCount;n.numClippingPlanes=t.numClippingPlanes;n.numIntersection=t.numClipIntersection;n.vertexAlphas=t.vertexAlphas;n.vertexTangents=t.vertexTangents;n.toneMapping=t.toneMapping}function je(e,t,n,i,r){if(t.isScene!==true)t=V;Q.resetTextureUnits();const s=t.fog;const a=i.isMeshStandardMaterial?t.environment:null;const o=S===null?y.outputEncoding:S.isXRRenderTarget===true?S.texture.encoding:It;const l=(i.isMeshStandardMaterial?te:ee).get(i.envMap||a);const c=i.vertexColors===true&&!!n.attributes.color&&n.attributes.color.itemSize===4;const u=!!i.normalMap&&!!n.attributes.tangent;const h=!!n.morphAttributes.position;const d=!!n.morphAttributes.normal;const f=!!n.morphAttributes.color;const p=i.toneMapped?y.toneMapping:Z;const m=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color;const _=m!==undefined?m.length:0;const x=$.get(i);const v=g.state.lights;if(B===true){if(z===true||e!==w){const t=e===w&&i.id===T;ce.setState(i,e,t)}}let M=false;if(i.version===x.__version){if(x.needsLights&&x.lightsStateVersion!==v.state.version){M=true}else if(x.outputEncoding!==o){M=true}else if(r.isInstancedMesh&&x.instancing===false){M=true}else if(!r.isInstancedMesh&&x.instancing===true){M=true}else if(r.isSkinnedMesh&&x.skinning===false){M=true}else if(!r.isSkinnedMesh&&x.skinning===true){M=true}else if(x.envMap!==l){M=true}else if(i.fog===true&&x.fog!==s){M=true}else if(x.numClippingPlanes!==undefined&&(x.numClippingPlanes!==ce.numPlanes||x.numIntersection!==ce.numIntersection)){M=true}else if(x.vertexAlphas!==c){M=true}else if(x.vertexTangents!==u){M=true}else if(x.morphTargets!==h){M=true}else if(x.morphNormals!==d){M=true}else if(x.morphColors!==f){M=true}else if(x.toneMapping!==p){M=true}else if(Y.isWebGL2===true&&x.morphTargetsCount!==_){M=true}}else{M=true;x.__version=i.version}let b=x.currentProgram;if(M===true){b=We(i,t,r)}let E=false;let A=false;let R=false;const C=b.getUniforms(),I=x.uniforms;if(J.useProgram(b.program)){E=true;A=true;R=true}if(i.id!==T){T=i.id;A=true}if(E||w!==e){C.setValue(X,"projectionMatrix",e.projectionMatrix);if(Y.logarithmicDepthBuffer){C.setValue(X,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2))}if(w!==e){w=e;A=true;R=true}if(i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=C.map.cameraPosition;if(t!==undefined){t.setValue(X,H.setFromMatrixPosition(e.matrixWorld))}}if(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial){C.setValue(X,"isOrthographic",e.isOrthographicCamera===true)}if(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh){C.setValue(X,"viewMatrix",e.matrixWorldInverse)}}if(r.isSkinnedMesh){C.setOptional(X,r,"bindMatrix");C.setOptional(X,r,"bindMatrixInverse");const e=r.skeleton;if(e){if(Y.floatVertexTextures){if(e.boneTexture===null)e.computeBoneTexture();C.setValue(X,"boneTexture",e.boneTexture,Q);C.setValue(X,"boneTextureSize",e.boneTextureSize)}else{console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.")}}}const D=n.morphAttributes;if(D.position!==undefined||D.normal!==undefined||D.color!==undefined&&Y.isWebGL2===true){de.update(r,n,b)}if(A||x.receiveShadow!==r.receiveShadow){x.receiveShadow=r.receiveShadow;C.setValue(X,"receiveShadow",r.receiveShadow)}if(i.isMeshGouraudMaterial&&i.envMap!==null){I.envMap.value=l;I.flipEnvMap.value=l.isCubeTexture&&l.isRenderTargetTexture===false?-1:1}if(A){C.setValue(X,"toneMappingExposure",y.toneMappingExposure);if(x.needsLights){qe(I,R)}if(s&&i.fog===true){ae.refreshFogUniforms(I,s)}ae.refreshMaterialUniforms(I,i,P,L,G);bu.upload(X,x.uniformsList,I,Q)}if(i.isShaderMaterial&&i.uniformsNeedUpdate===true){bu.upload(X,x.uniformsList,I,Q);i.uniformsNeedUpdate=false}if(i.isSpriteMaterial){C.setValue(X,"center",r.center)}C.setValue(X,"modelViewMatrix",r.modelViewMatrix);C.setValue(X,"normalMatrix",r.normalMatrix);C.setValue(X,"modelMatrix",r.matrixWorld);C.setValue(X,"useDataTexture",r.userData.isGeometryCluster===true);if(i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++){if(Y.isWebGL2){const n=e[t];_e.update(n,b);_e.bind(n,b)}else{console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}}}return b}function qe(e,t){e.ambientLightColor.needsUpdate=t;e.lightProbe.needsUpdate=t;e.directionalLights.needsUpdate=t;e.directionalLightShadows.needsUpdate=t;e.pointLights.needsUpdate=t;e.pointLightShadows.needsUpdate=t;e.spotLights.needsUpdate=t;e.spotLightShadows.needsUpdate=t;e.rectAreaLights.needsUpdate=t;e.hemisphereLights.needsUpdate=t}function Ye(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&e.lights===true}this.getActiveCubeFace=function(){return M};this.getActiveMipmapLevel=function(){return b};this.getRenderTarget=function(){return S};this.setRenderTargetTextures=function(e,t,n){$.get(e.texture).__webglTexture=t;$.get(e.depthTexture).__webglTexture=n;const i=$.get(e);i.__hasExternalTextures=true;if(i.__hasExternalTextures){i.__autoAllocateDepthBuffer=n===undefined;if(!i.__autoAllocateDepthBuffer){if(q.has("WEBGL_multisampled_render_to_texture")===true){console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided");i.__useRenderToTexture=false}}}};this.setRenderTargetFramebuffer=function(e,t){const n=$.get(e);n.__webglFramebuffer=t;n.__useDefaultFramebuffer=t===undefined};this.setRenderTarget=function(e,t=0,n=0){S=e;M=t;b=n;let i=true;let r=null;let s=false;let a=false;if(e){const n=$.get(e);if(n.__useDefaultFramebuffer!==undefined){J.bindFramebuffer(X.FRAMEBUFFER,null);i=false}else if(n.__webglFramebuffer===undefined){Q.setupRenderTarget(e)}else if(n.__hasExternalTextures){Q.rebindTextures(e,$.get(e.texture).__webglTexture,$.get(e.depthTexture).__webglTexture)}const o=e.texture;if(o.isData3DTexture||o.isDataArrayTexture||o.isCompressedArrayTexture){a=true}const l=$.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget){r=l[t];s=true}else if(Y.isWebGL2&&e.samples>0&&Q.useMultisampledRTT(e)===false){r=$.get(e).__webglMultisampledFramebuffer}else{r=l}E.copy(e.viewport);A.copy(e.scissor);R=e.scissorTest}else{E.copy(N).multiplyScalar(P).floor();A.copy(O).multiplyScalar(P).floor();R=U}const o=J.bindFramebuffer(X.FRAMEBUFFER,r);if(o&&Y.drawBuffers&&i){J.drawBuffers(e,r)}J.viewport(E);J.scissor(A);J.setScissorTest(R);if(s){const i=$.get(e.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)}else if(a){const i=$.get(e.texture);const r=t||0;X.framebufferTextureLayer(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}T=-1};this.readRenderTargetPixels=function(e,t,n,i,r,s,a){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=$.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&a!==undefined){o=o[a]}if(o){J.bindFramebuffer(X.FRAMEBUFFER,o);try{const a=e.texture;const o=a.format;const l=a.type;if(o!==Ie&&me.convert(o)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const c=l===Ae&&(q.has("EXT_color_buffer_half_float")||Y.isWebGL2&&q.has("EXT_color_buffer_float"));if(l!==ve&&me.convert(l)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_TYPE)&&!(l===Ee&&(Y.isWebGL2||q.has("OES_texture_float")||q.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(t>=0&&t<=e.width-i&&(n>=0&&n<=e.height-r)){X.readPixels(t,n,i,r,me.convert(o),me.convert(l),s)}}finally{const e=S!==null?$.get(S).__webglFramebuffer:null;J.bindFramebuffer(X.FRAMEBUFFER,e)}}};this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n);const r=Math.floor(t.image.width*i);const s=Math.floor(t.image.height*i);Q.setTexture2D(t,0);X.copyTexSubImage2D(X.TEXTURE_2D,n,0,0,e.x,e.y,r,s);J.unbindTexture()};this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width;const s=t.image.height;const a=me.convert(n.format);const o=me.convert(n.type);Q.setTexture2D(n,0);X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,n.flipY);X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha);X.pixelStorei(X.UNPACK_ALIGNMENT,n.unpackAlignment);if(t.isDataTexture){X.texSubImage2D(X.TEXTURE_2D,i,e.x,e.y,r,s,a,o,t.image.data)}else{if(t.isCompressedTexture){X.compressedTexSubImage2D(X.TEXTURE_2D,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data)}else{X.texSubImage2D(X.TEXTURE_2D,i,e.x,e.y,a,o,t.image)}}if(i===0&&n.generateMipmaps)X.generateMipmap(X.TEXTURE_2D);J.unbindTexture()};this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(y.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const s=e.max.x-e.min.x+1;const a=e.max.y-e.min.y+1;const o=e.max.z-e.min.z+1;const l=me.convert(i.format);const c=me.convert(i.type);let u;if(i.isData3DTexture){Q.setTexture3D(i,0);u=X.TEXTURE_3D}else if(i.isDataArrayTexture){Q.setTexture2DArray(i,0);u=X.TEXTURE_2D_ARRAY}else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL,i.flipY);X.pixelStorei(X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha);X.pixelStorei(X.UNPACK_ALIGNMENT,i.unpackAlignment);const h=X.getParameter(X.UNPACK_ROW_LENGTH);const d=X.getParameter(X.UNPACK_IMAGE_HEIGHT);const f=X.getParameter(X.UNPACK_SKIP_PIXELS);const p=X.getParameter(X.UNPACK_SKIP_ROWS);const m=X.getParameter(X.UNPACK_SKIP_IMAGES);const g=n.isCompressedTexture?n.mipmaps[0]:n.image;X.pixelStorei(X.UNPACK_ROW_LENGTH,g.width);X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,g.height);X.pixelStorei(X.UNPACK_SKIP_PIXELS,e.min.x);X.pixelStorei(X.UNPACK_SKIP_ROWS,e.min.y);X.pixelStorei(X.UNPACK_SKIP_IMAGES,e.min.z);if(n.isDataTexture||n.isData3DTexture){X.texSubImage3D(u,r,t.x,t.y,t.z,s,a,o,l,c,g.data)}else{if(n.isCompressedArrayTexture){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.");X.compressedTexSubImage3D(u,r,t.x,t.y,t.z,s,a,o,l,g.data)}else{X.texSubImage3D(u,r,t.x,t.y,t.z,s,a,o,l,c,g)}}X.pixelStorei(X.UNPACK_ROW_LENGTH,h);X.pixelStorei(X.UNPACK_IMAGE_HEIGHT,d);X.pixelStorei(X.UNPACK_SKIP_PIXELS,f);X.pixelStorei(X.UNPACK_SKIP_ROWS,p);X.pixelStorei(X.UNPACK_SKIP_IMAGES,m);if(r===0&&i.generateMipmaps)X.generateMipmap(u);J.unbindTexture()};this.initTexture=function(e){if(e.isCubeTexture){Q.setTextureCube(e,0)}else if(e.isData3DTexture){Q.setTexture3D(e,0)}else if(e.isDataArrayTexture||e.isCompressedArrayTexture){Q.setTexture2DArray(e,0)}else{Q.setTexture2D(e,0)}J.unbindTexture()};this.resetState=function(){M=0;b=0;S=null;J.reset();ge.reset()};if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}Object.defineProperties(Rh.prototype,{physicallyCorrectLights:{get:function(){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.");return!this.useLegacyLights},set:function(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.");this.useLegacyLights=!e}}});class Ch extends Rh{}Ch.prototype.isWebGL1Renderer=true;class Lh{constructor(e,t=25e-5){this.isFogExp2=true;this.name="";this.color=new kr(e);this.density=t}clone(){return new Lh(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Ph{constructor(e,t=1,n=1e3){this.isFog=true;this.name="";this.color=new kr(e);this.near=t;this.far=n}clone(){return new Ph(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Ih extends Sr{constructor(){super();this.isScene=true;this.type="Scene";this.background=null;this.environment=null;this.fog=null;this.backgroundBlurriness=0;this.backgroundIntensity=1;this.overrideMaterial=null;if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}copy(e,t){super.copy(e,t);if(e.background!==null)this.background=e.background.clone();if(e.environment!==null)this.environment=e.environment.clone();if(e.fog!==null)this.fog=e.fog.clone();this.backgroundBlurriness=e.backgroundBlurriness;this.backgroundIntensity=e.backgroundIntensity;if(e.overrideMaterial!==null)this.overrideMaterial=e.overrideMaterial.clone();this.matrixAutoUpdate=e.matrixAutoUpdate;return this}toJSON(e){const t=super.toJSON(e);if(this.fog!==null)t.object.fog=this.fog.toJSON();if(this.backgroundBlurriness>0)t.object.backgroundBlurriness=this.backgroundBlurriness;if(this.backgroundIntensity!==1)t.object.backgroundIntensity=this.backgroundIntensity;return t}get autoUpdate(){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.");return this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.");this.matrixWorldAutoUpdate=e}}class Dh{constructor(e,t){this.isInterleavedBuffer=true;this.array=e;this.stride=t;this.count=e!==undefined?e.length/t:0;this.usage=sn;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=bn()}onUploadCallback(){}set needsUpdate(e){if(e===true)this.version++}setUsage(e){this.usage=e;return this}copy(e){this.array=new e.array.constructor(e.array);this.count=e.count;this.stride=e.stride;this.usage=e.usage;return this}copyAt(e,t,n){e*=this.stride;n*=t.stride;for(let i=0,r=this.stride;i<r;i++){this.array[e+i]=t.array[n+i]}return this}set(e,t=0){this.array.set(e,t);return this}clone(e){if(e.arrayBuffers===undefined){e.arrayBuffers={}}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=bn()}if(e.arrayBuffers[this.array.buffer._uuid]===undefined){e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer}const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const n=new this.constructor(t,this.stride);n.setUsage(this.usage);return n}onUpload(e){this.onUploadCallback=e;return this}toJSON(e){if(e.arrayBuffers===undefined){e.arrayBuffers={}}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=bn()}if(e.arrayBuffers[this.array.buffer._uuid]===undefined){e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))}return{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Nh=new Qn;class Oh{constructor(e,t,n,i=false){this.isInterleavedBufferAttribute=true;this.name="";this.data=e;this.itemSize=t;this.offset=n;this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++){Nh.fromBufferAttribute(this,t);Nh.applyMatrix4(e);this.setXYZ(t,Nh.x,Nh.y,Nh.z)}return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++){Nh.fromBufferAttribute(this,t);Nh.applyNormalMatrix(e);this.setXYZ(t,Nh.x,Nh.y,Nh.z)}return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++){Nh.fromBufferAttribute(this,t);Nh.transformDirection(e);this.setXYZ(t,Nh.x,Nh.y,Nh.z)}return this}setX(e,t){if(this.normalized)t=Vn(t,this.array);this.data.array[e*this.data.stride+this.offset]=t;return this}setY(e,t){if(this.normalized)t=Vn(t,this.array);this.data.array[e*this.data.stride+this.offset+1]=t;return this}setZ(e,t){if(this.normalized)t=Vn(t,this.array);this.data.array[e*this.data.stride+this.offset+2]=t;return this}setW(e,t){if(this.normalized)t=Vn(t,this.array);this.data.array[e*this.data.stride+this.offset+3]=t;return this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];if(this.normalized)t=Hn(t,this.array);return t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];if(this.normalized)t=Hn(t,this.array);return t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];if(this.normalized)t=Hn(t,this.array);return t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];if(this.normalized)t=Hn(t,this.array);return t}setXY(e,t,n){e=e*this.data.stride+this.offset;if(this.normalized){t=Vn(t,this.array);n=Vn(n,this.array)}this.data.array[e+0]=t;this.data.array[e+1]=n;return this}setXYZ(e,t,n,i){e=e*this.data.stride+this.offset;if(this.normalized){t=Vn(t,this.array);n=Vn(n,this.array);i=Vn(i,this.array)}this.data.array[e+0]=t;this.data.array[e+1]=n;this.data.array[e+2]=i;return this}setXYZW(e,t,n,i,r){e=e*this.data.stride+this.offset;if(this.normalized){t=Vn(t,this.array);n=Vn(n,this.array);i=Vn(i,this.array);r=Vn(r,this.array)}this.data.array[e+0]=t;this.data.array[e+1]=n;this.data.array[e+2]=i;this.data.array[e+3]=r;return this}clone(e){if(e===undefined){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++){e.push(this.data.array[n+t])}}return new jr(new this.array.constructor(e),this.itemSize,this.normalized)}else{if(e.interleavedBuffers===undefined){e.interleavedBuffers={}}if(e.interleavedBuffers[this.data.uuid]===undefined){e.interleavedBuffers[this.data.uuid]=this.data.clone(e)}return new Oh(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}}toJSON(e){if(e===undefined){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++){e.push(this.data.array[n+t])}}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else{if(e.interleavedBuffers===undefined){e.interleavedBuffers={}}if(e.interleavedBuffers[this.data.uuid]===undefined){e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}}class Uh extends Ur{constructor(e){super();this.isSpriteMaterial=true;this.type="SpriteMaterial";this.color=new kr(16777215);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.alphaMap=e.alphaMap;this.rotation=e.rotation;this.sizeAttenuation=e.sizeAttenuation;this.fog=e.fog;return this}}let Fh;const Bh=new Qn;const zh=new Qn;const Gh=new Qn;const kh=new Xn;const Hh=new Xn;const Vh=new $i;const Wh=new Qn;const Xh=new Qn;const jh=new Qn;const qh=new Xn;const Yh=new Xn;const Zh=new Xn;class Jh extends Sr{constructor(e){super();this.isSprite=true;this.type="Sprite";if(Fh===undefined){Fh=new us;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]);const t=new Dh(e,5);Fh.setIndex([0,1,2,0,2,3]);Fh.setAttribute("position",new Oh(t,3,0,false));Fh.setAttribute("uv",new Oh(t,2,3,false))}this.geometry=Fh;this.material=e!==undefined?e:new Uh;this.center=new Xn(.5,.5)}raycast(e,t){if(e.camera===null){console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.')}zh.setFromMatrixScale(this.matrixWorld);Vh.copy(e.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld);Gh.setFromMatrixPosition(this.modelViewMatrix);if(e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){zh.multiplyScalar(-Gh.z)}const n=this.material.rotation;let i,r;if(n!==0){r=Math.cos(n);i=Math.sin(n)}const s=this.center;Kh(Wh.set(-.5,-.5,0),Gh,s,zh,i,r);Kh(Xh.set(.5,-.5,0),Gh,s,zh,i,r);Kh(jh.set(.5,.5,0),Gh,s,zh,i,r);qh.set(0,0);Yh.set(1,0);Zh.set(1,1);let a=e.ray.intersectTriangle(Wh,Xh,jh,false,Bh);if(a===null){Kh(Xh.set(-.5,.5,0),Gh,s,zh,i,r);Yh.set(0,1);a=e.ray.intersectTriangle(Wh,jh,Xh,false,Bh);if(a===null){return}}const o=e.ray.origin.distanceTo(Bh);if(o<e.near||o>e.far)return;t.push({distance:o,point:Bh.clone(),uv:Nr.getUV(Bh,Wh,Xh,jh,qh,Yh,Zh,new Xn),face:null,object:this})}copy(e,t){super.copy(e,t);if(e.center!==undefined)this.center.copy(e.center);this.material=e.material;return this}}function Kh(e,t,n,i,r,s){kh.subVectors(e,n).addScalar(.5).multiply(i);if(r!==undefined){Hh.x=s*kh.x-r*kh.y;Hh.y=r*kh.x+s*kh.y}else{Hh.copy(kh)}e.copy(t);e.x+=Hh.x;e.y+=Hh.y;e.applyMatrix4(Vh)}const $h=new Qn;const Qh=new Qn;class ed extends Sr{constructor(){super();this._currentLevel=0;this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]},isLOD:{value:true}});this.autoUpdate=true}copy(e){super.copy(e,false);const t=e.levels;for(let e=0,n=t.length;e<n;e++){const n=t[e];this.addLevel(n.object.clone(),n.distance,n.hysteresis)}this.autoUpdate=e.autoUpdate;return this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length;r++){if(t<i[r].distance){break}}i.splice(r,0,{distance:t,hysteresis:n,object:e});this.add(e);return this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let i=t[n].distance;if(t[n].object.visible){i-=i*t[n].hysteresis}if(e<i){break}}return t[n-1].object}return null}raycast(e,t){const n=this.levels;if(n.length>0){$h.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo($h);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){$h.setFromMatrixPosition(e.matrixWorld);Qh.setFromMatrixPosition(this.matrixWorld);const n=$h.distanceTo(Qh)/e.zoom;t[0].object.visible=true;let i,r;for(i=1,r=t.length;i<r;i++){let e=t[i].distance;if(t[i].object.visible){e-=e*t[i].hysteresis}if(n>=e){t[i-1].object.visible=false;t[i].object.visible=true}else{break}}this._currentLevel=i-1;for(;i<r;i++){t[i].object.visible=false}}}toJSON(e){const t=super.toJSON(e);if(this.autoUpdate===false)t.object.autoUpdate=false;t.object.levels=[];const n=this.levels;for(let e=0,i=n.length;e<i;e++){const i=n[e];t.object.levels.push({object:i.object.uuid,distance:i.distance,hysteresis:i.hysteresis})}return t}}const td=new Qn;const nd=new xi;const id=new xi;const rd=new Qn;const sd=new $i;class ad extends ws{constructor(e,t){super(e,t);this.isSkinnedMesh=true;this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new $i;this.bindMatrixInverse=new $i}copy(e,t){super.copy(e,t);this.bindMode=e.bindMode;this.bindMatrix.copy(e.bindMatrix);this.bindMatrixInverse.copy(e.bindMatrixInverse);this.skeleton=e.skeleton;return this}bind(e,t){this.skeleton=e;if(t===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();t=this.matrixWorld}this.bindMatrix.copy(t);this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new xi;const t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const i=1/e.manhattanLength();if(i!==Infinity){e.multiplyScalar(i)}else{e.set(1,0,0,0)}t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e);if(this.bindMode==="attached"){this.bindMatrixInverse.copy(this.matrixWorld).invert()}else if(this.bindMode==="detached"){this.bindMatrixInverse.copy(this.bindMatrix).invert()}else{console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}}boneTransform(e,t){const n=this.skeleton;const i=this.geometry;nd.fromBufferAttribute(i.attributes.skinIndex,e);id.fromBufferAttribute(i.attributes.skinWeight,e);td.copy(t).applyMatrix4(this.bindMatrix);t.set(0,0,0);for(let e=0;e<4;e++){const i=id.getComponent(e);if(i!==0){const r=nd.getComponent(e);sd.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]);t.addScaledVector(rd.copy(td).applyMatrix4(sd),i)}}return t.applyMatrix4(this.bindMatrixInverse)}}class od extends Sr{constructor(){super();this.isBone=true;this.type="Bone"}}class ld extends _i{constructor(e=null,t=1,n=1,i,r,s,a,o,l=ue,c=ue,u,h){super(null,s,a,o,l,c,i,r,u,h);this.isDataTexture=true;this.image={data:e,width:t,height:n};this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1}}const cd=new $i;const ud=new $i;class hd{constructor(e=[],t=[]){this.uuid=bn();this.bones=e.slice(0);this.boneInverses=t;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init()}init(){const e=this.bones;const t=this.boneInverses;this.boneMatrices=new Float32Array(e.length*16);if(t.length===0){this.calculateInverses()}else{if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.");this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){this.boneInverses.push(new $i)}}}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const t=new $i;if(this.bones[e]){t.copy(this.bones[e].matrixWorld).invert()}this.boneInverses.push(t)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];if(t){t.matrixWorld.copy(this.boneInverses[e]).invert()}}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];if(t){if(t.parent&&t.parent.isBone){t.matrix.copy(t.parent.matrixWorld).invert();t.matrix.multiply(t.matrixWorld)}else{t.matrix.copy(t.matrixWorld)}t.matrix.decompose(t.position,t.quaternion,t.scale)}}}update(){const e=this.bones;const t=this.boneInverses;const n=this.boneMatrices;const i=this.boneTexture;for(let i=0,r=e.length;i<r;i++){const r=e[i]?e[i].matrixWorld:ud;cd.multiplyMatrices(r,t[i]);cd.toArray(n,i*16)}if(i!==null){i.needsUpdate=true}}clone(){return new hd(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=zn(e);e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ld(t,e,e,Ie,Ee);n.needsUpdate=true;this.boneMatrices=t;this.boneTexture=n;this.boneTextureSize=e;return this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const n=this.bones[t];if(n.name===e){return n}}return undefined}dispose(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null}}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const i=e.bones[n];let r=t[i];if(r===undefined){console.warn("THREE.Skeleton: No bone found with UUID:",i);r=new od}this.bones.push(r);this.boneInverses.push((new $i).fromArray(e.boneInverses[n]))}this.init();return this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones;const n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const r=t[i];e.bones.push(r.uuid);const s=n[i];e.boneInverses.push(s.toArray())}return e}}class dd extends jr{constructor(e,t,n,i=1){super(e,t,n);this.isInstancedBufferAttribute=true;this.meshPerAttribute=i}copy(e){super.copy(e);this.meshPerAttribute=e.meshPerAttribute;return this}toJSON(){const e=super.toJSON();e.meshPerAttribute=this.meshPerAttribute;e.isInstancedBufferAttribute=true;return e}}const fd=new $i;const pd=new $i;const md=[];const gd=new $i;const _d=new ws;class xd extends ws{constructor(e,t,n){super(e,t);this.isInstancedMesh=true;this.instanceMatrix=new dd(new Float32Array(n*16),16);this.instanceColor=null;this.count=n;this.frustumCulled=false;for(let e=0;e<n;e++){this.setMatrixAt(e,gd)}}copy(e,t){super.copy(e,t);this.instanceMatrix.copy(e.instanceMatrix);if(e.instanceColor!==null)this.instanceColor=e.instanceColor.clone();this.count=e.count;return this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld;const i=this.count;_d.geometry=this.geometry;_d.material=this.material;if(_d.material===undefined)return;for(let r=0;r<i;r++){this.getMatrixAt(r,fd);pd.multiplyMatrices(n,fd);_d.matrixWorld=pd;_d.raycast(e,md);for(let e=0,n=md.length;e<n;e++){const n=md[e];n.instanceId=r;n.object=this;t.push(n)}md.length=0}}setColorAt(e,t){if(this.instanceColor===null){this.instanceColor=new dd(new Float32Array(this.instanceMatrix.count*3),3)}t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class yd extends Ur{constructor(e){super();this.isLineBasicMaterial=true;this.type="LineBasicMaterial";this.color=new kr(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.linewidth=e.linewidth;this.linecap=e.linecap;this.linejoin=e.linejoin;this.fog=e.fog;return this}}const vd=new Qn;const Md=new Qn;const bd=new $i;const Sd=new Ki;const Td=new Vi;class wd extends Sr{constructor(e=new us,t=new yd){super();this.isLine=true;this.type="Line";this.geometry=e;this.material=t;this.updateMorphTargets()}copy(e,t){super.copy(e,t);this.material=e.material;this.geometry=e.geometry;return this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position;const n=[0];for(let e=1,i=t.count;e<i;e++){vd.fromBufferAttribute(t,e-1);Md.fromBufferAttribute(t,e);n[e]=n[e-1];n[e]+=vd.distanceTo(Md)}e.setAttribute("lineDistance",new ts(n,1))}else{console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}return this}raycast(e,t){const n=this.geometry;const i=this.matrixWorld;const r=e.params.Line.threshold;const s=n.drawRange;const a=this.userData.renderGroup;if(a&&a.boundingSphere){Td.setFromPackedArray(a.boundingSphere)}else{if(n.boundingSphere===null)n.computeBoundingSphere();Td.copy(n.boundingSphere)}Td.applyMatrix4(i);Td.radius+=r;if(e.ray.intersectsSphere(Td)===false)return;bd.copy(i).invert();Sd.copy(e.ray).applyMatrix4(bd);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3);const l=o*o;const c=new Qn;const u=new Qn;const h=new Qn;const d=new Qn;const f=this.isLineSegments?2:1;const p=n.index;const m=n.attributes;const g=m.position;if(p!==null){const n=Math.max(0,s.start);const i=Math.min(p.count,s.start+s.count);for(let r=n,s=i-1;r<s;r+=f){const n=p.getX(r);const i=p.getX(r+1);c.fromBufferAttribute(g,n);u.fromBufferAttribute(g,i);const s=Sd.distanceSqToSegment(c,u,d,h);if(s>l)continue;d.applyMatrix4(this.matrixWorld);const a=e.ray.origin.distanceTo(d);if(a<e.near||a>e.far)continue;t.push({distance:a,point:h.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else{const n=Math.max(0,s.start);const i=Math.min(g.count,s.start+s.count);for(let r=n,s=i-1;r<s;r+=f){c.fromBufferAttribute(g,r);u.fromBufferAttribute(g,r+1);const n=Sd.distanceSqToSegment(c,u,d,h);if(n>l)continue;d.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(d);if(i<e.near||i>e.far)continue;t.push({distance:i,point:h.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry;const t=e.morphAttributes;const n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(e!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0);this.morphTargetDictionary[n]=t}}}}}const Ed=new Qn;const Ad=new Qn;class Rd extends wd{constructor(e,t){super(e,t);this.isLineSegments=true;this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position;const n=[];for(let e=0,i=t.count;e<i;e+=2){Ed.fromBufferAttribute(t,e);Ad.fromBufferAttribute(t,e+1);n[e]=e===0?0:n[e-1];n[e+1]=n[e]+Ed.distanceTo(Ad)}e.setAttribute("lineDistance",new ts(n,1))}else{console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}return this}}class Cd extends wd{constructor(e,t){super(e,t);this.isLineLoop=true;this.type="LineLoop"}}class Ld extends Ur{constructor(e){super();this.isPointsMaterial=true;this.type="PointsMaterial";this.color=new kr(16777215);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.alphaMap=e.alphaMap;this.size=e.size;this.sizeAttenuation=e.sizeAttenuation;this.fog=e.fog;return this}}const Pd=new $i;const Id=new Ki;const Dd=new Vi;const Nd=new Qn;class Od extends Sr{constructor(e=new us,t=new Ld){super();this.isPoints=true;this.type="Points";this.geometry=e;this.material=t;this.updateMorphTargets()}copy(e,t){super.copy(e,t);this.material=e.material;this.geometry=e.geometry;return this}raycast(e,t){const n=this.geometry;const i=this.matrixWorld;const r=e.params.Points.threshold;const s=n.drawRange;const a=this.userData.renderGroup;if(a&&a.boundingSphere){Dd.setFromPackedArray(a.boundingSphere)}else{if(n.boundingSphere===null)n.computeBoundingSphere();Dd.copy(n.boundingSphere)}Dd.applyMatrix4(i);Dd.radius+=r;if(e.ray.intersectsSphere(Dd)===false)return;Pd.copy(i).invert();Id.copy(e.ray).applyMatrix4(Pd);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3);const l=o*o;const c=n.index;const u=n.attributes;const h=u.position;if(c!==null){const n=Math.max(0,s.start);const r=Math.min(c.count,s.start+s.count);for(let s=n,a=r;s<a;s++){const n=c.getX(s);Nd.fromBufferAttribute(h,n);Ud(Nd,n,l,i,e,t,this)}}else{const n=Math.max(0,s.start);const r=Math.min(h.count,s.start+s.count);for(let s=n,a=r;s<a;s++){Nd.fromBufferAttribute(h,s);Ud(Nd,s,l,i,e,t,this)}}}updateMorphTargets(){const e=this.geometry;const t=e.morphAttributes;const n=Object.keys(t);if(n.length>0){const e=t[n[0]];if(e!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){const n=e[t].name||String(t);this.morphTargetInfluences.push(0);this.morphTargetDictionary[n]=t}}}}}function Ud(e,t,n,i,r,s,a){const o=Id.distanceSqToPoint(e);if(o<n){const n=new Qn;Id.closestPointToPoint(e,n);n.applyMatrix4(i);const l=r.ray.origin.distanceTo(n);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:n,index:t,face:null,object:a})}}class Fd extends _i{constructor(e,t,n,i,r,s,a,o,l){super(e,t,n,i,r,s,a,o,l);this.isVideoTexture=true;this.minFilter=s!==undefined?s:me;this.magFilter=r!==undefined?r:me;this.generateMipmaps=false;const c=this;function u(){c.needsUpdate=true;e.requestVideoFrameCallback(u)}if("requestVideoFrameCallback"in e){e.requestVideoFrameCallback(u)}}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;const t="requestVideoFrameCallback"in e;if(t===false&&e.readyState>=e.HAVE_CURRENT_DATA){this.needsUpdate=true}}}class Bd extends _i{constructor(e,t,n){super({width:e,height:t});this.isFramebufferTexture=true;this.format=n;this.magFilter=ue;this.minFilter=ue;this.generateMipmaps=false;this.needsUpdate=true}}class zd extends _i{constructor(e,t,n,i,r,s,a,o,l,c,u,h){super(null,s,a,o,l,c,i,r,u,h);this.isCompressedTexture=true;this.image={width:t,height:n};this.mipmaps=e;this.flipY=false;this.generateMipmaps=false}}class Gd extends zd{constructor(e,t,n,i,r,s){super(e,t,n,r,s);this.isCompressedArrayTexture=true;this.image.depth=i;this.wrapR=le}}class kd extends _i{constructor(e,t,n,i,r,s,a,o,l){super(e,t,n,i,r,s,a,o,l);this.isCanvasTexture=true;this.needsUpdate=true}}class Hd{constructor(){this.type="Curve";this.arcLengthDivisions=200}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.");return null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++){t.push(this.getPoint(n/e))}return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++){t.push(this.getPointAt(n/e))}return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;const t=[];let n,i=this.getPoint(0);let r=0;t.push(0);for(let s=1;s<=e;s++){n=this.getPoint(s/e);r+=n.distanceTo(i);t.push(r);i=n}this.cacheArcLengths=t;return t}updateArcLengths(){this.needsUpdate=true;this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let s;if(t){s=t}else{s=e*n[r-1]}let a=0,o=r-1,l;while(a<=o){i=Math.floor(a+(o-a)/2);l=n[i]-s;if(l<0){a=i+1}else if(l>0){o=i-1}else{o=i;break}}i=o;if(n[i]===s){return i/(r-1)}const c=n[i];const u=n[i+1];const h=u-c;const d=(s-c)/h;const f=(i+d)/(r-1);return f}getTangent(e,t){const n=1e-4;let i=e-n;let r=e+n;if(i<0)i=0;if(r>1)r=1;const s=this.getPoint(i);const a=this.getPoint(r);const o=t||(s.isVector2?new Xn:new Qn);o.copy(a).sub(s).normalize();return o}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new Qn;const i=[];const r=[];const s=[];const a=new Qn;const o=new $i;for(let t=0;t<=e;t++){const n=t/e;i[t]=this.getTangentAt(n,new Qn)}r[0]=new Qn;s[0]=new Qn;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x);const u=Math.abs(i[0].y);const h=Math.abs(i[0].z);if(c<=l){l=c;n.set(1,0,0)}if(u<=l){l=u;n.set(0,1,0)}if(h<=l){n.set(0,0,1)}a.crossVectors(i[0],n).normalize();r[0].crossVectors(i[0],a);s[0].crossVectors(i[0],r[0]);for(let t=1;t<=e;t++){r[t]=r[t-1].clone();s[t]=s[t-1].clone();a.crossVectors(i[t-1],i[t]);if(a.length()>Number.EPSILON){a.normalize();const e=Math.acos(Sn(i[t-1].dot(i[t]),-1,1));r[t].applyMatrix4(o.makeRotationAxis(a,e))}s[t].crossVectors(i[t],r[t])}if(t===true){let t=Math.acos(Sn(r[0].dot(r[e]),-1,1));t/=e;if(i[0].dot(a.crossVectors(r[0],r[e]))>0){t=-t}for(let n=1;n<=e;n++){r[n].applyMatrix4(o.makeRotationAxis(i[n],t*n));s[n].crossVectors(i[n],r[n])}}return{tangents:i,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(e){this.arcLengthDivisions=e.arcLengthDivisions;return this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};e.arcLengthDivisions=this.arcLengthDivisions;e.type=this.type;return e}fromJSON(e){this.arcLengthDivisions=e.arcLengthDivisions;return this}}class Vd extends Hd{constructor(e=0,t=0,n=1,i=1,r=0,s=Math.PI*2,a=false,o=0){super();this.isEllipseCurve=true;this.type="EllipseCurve";this.aX=e;this.aY=t;this.xRadius=n;this.yRadius=i;this.aStartAngle=r;this.aEndAngle=s;this.aClockwise=a;this.aRotation=o}getPoint(e,t){const n=t||new Xn;const i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;while(r<0)r+=i;while(r>i)r-=i;if(r<Number.EPSILON){if(s){r=0}else{r=i}}if(this.aClockwise===true&&!s){if(r===i){r=-i}else{r=r-i}}const a=this.aStartAngle+e*r;let o=this.aX+this.xRadius*Math.cos(a);let l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const e=Math.cos(this.aRotation);const t=Math.sin(this.aRotation);const n=o-this.aX;const i=l-this.aY;o=n*e-i*t+this.aX;l=n*t+i*e+this.aY}return n.set(o,l)}copy(e){super.copy(e);this.aX=e.aX;this.aY=e.aY;this.xRadius=e.xRadius;this.yRadius=e.yRadius;this.aStartAngle=e.aStartAngle;this.aEndAngle=e.aEndAngle;this.aClockwise=e.aClockwise;this.aRotation=e.aRotation;return this}toJSON(){const e=super.toJSON();e.aX=this.aX;e.aY=this.aY;e.xRadius=this.xRadius;e.yRadius=this.yRadius;e.aStartAngle=this.aStartAngle;e.aEndAngle=this.aEndAngle;e.aClockwise=this.aClockwise;e.aRotation=this.aRotation;return e}fromJSON(e){super.fromJSON(e);this.aX=e.aX;this.aY=e.aY;this.xRadius=e.xRadius;this.yRadius=e.yRadius;this.aStartAngle=e.aStartAngle;this.aEndAngle=e.aEndAngle;this.aClockwise=e.aClockwise;this.aRotation=e.aRotation;return this}}class Wd extends Vd{constructor(e,t,n,i,r,s){super(e,t,n,n,i,r,s);this.isArcCurve=true;this.type="ArcCurve"}}function Xd(){let e=0,t=0,n=0,i=0;function r(r,s,a,o){e=r;t=a;n=-3*r+3*s-2*a-o;i=2*r-2*s+a+o}return{initCatmullRom:function(e,t,n,i,s){r(t,n,s*(n-e),s*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,s,a,o){let l=(t-e)/s-(n-e)/(s+a)+(n-t)/a;let c=(n-t)/a-(i-t)/(a+o)+(i-n)/o;l*=a;c*=a;r(t,n,l,c)},calc:function(r){const s=r*r;const a=s*r;return e+t*r+n*s+i*a}}}const jd=new Qn;const qd=new Xd;const Yd=new Xd;const Zd=new Xd;class Jd extends Hd{constructor(e=[],t=false,n="centripetal",i=.5){super();this.isCatmullRomCurve3=true;this.type="CatmullRomCurve3";this.points=e;this.closed=t;this.curveType=n;this.tension=i}getPoint(e,t=new Qn){const n=t;const i=this.points;const r=i.length;const s=(r-(this.closed?0:1))*e;let a=Math.floor(s);let o=s-a;if(this.closed){a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r}else if(o===0&&a===r-1){a=r-2;o=1}let l,c;if(this.closed||a>0){l=i[(a-1)%r]}else{jd.subVectors(i[0],i[1]).add(i[0]);l=jd}const u=i[a%r];const h=i[(a+1)%r];if(this.closed||a+2<r){c=i[(a+2)%r]}else{jd.subVectors(i[r-1],i[r-2]).add(i[r-1]);c=jd}if(this.curveType==="centripetal"||this.curveType==="chordal"){const e=this.curveType==="chordal"?.5:.25;let t=Math.pow(l.distanceToSquared(u),e);let n=Math.pow(u.distanceToSquared(h),e);let i=Math.pow(h.distanceToSquared(c),e);if(n<1e-4)n=1;if(t<1e-4)t=n;if(i<1e-4)i=n;qd.initNonuniformCatmullRom(l.x,u.x,h.x,c.x,t,n,i);Yd.initNonuniformCatmullRom(l.y,u.y,h.y,c.y,t,n,i);Zd.initNonuniformCatmullRom(l.z,u.z,h.z,c.z,t,n,i)}else if(this.curveType==="catmullrom"){qd.initCatmullRom(l.x,u.x,h.x,c.x,this.tension);Yd.initCatmullRom(l.y,u.y,h.y,c.y,this.tension);Zd.initCatmullRom(l.z,u.z,h.z,c.z,this.tension)}n.set(qd.calc(o),Yd.calc(o),Zd.calc(o));return n}copy(e){super.copy(e);this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}this.closed=e.closed;this.curveType=e.curveType;this.tension=e.tension;return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}e.closed=this.closed;e.curveType=this.curveType;e.tension=this.tension;return e}fromJSON(e){super.fromJSON(e);this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Qn).fromArray(n))}this.closed=e.closed;this.curveType=e.curveType;this.tension=e.tension;return this}}function Kd(e,t,n,i,r){const s=(i-t)*.5;const a=(r-n)*.5;const o=e*e;const l=e*o;return(2*n-2*i+s+a)*l+(-3*n+3*i-2*s-a)*o+s*e+n}function $d(e,t){const n=1-e;return n*n*t}function Qd(e,t){return 2*(1-e)*e*t}function ef(e,t){return e*e*t}function tf(e,t,n,i){return $d(e,t)+Qd(e,n)+ef(e,i)}function nf(e,t){const n=1-e;return n*n*n*t}function rf(e,t){const n=1-e;return 3*n*n*e*t}function sf(e,t){return 3*(1-e)*e*e*t}function af(e,t){return e*e*e*t}function of(e,t,n,i,r){return nf(e,t)+rf(e,n)+sf(e,i)+af(e,r)}class lf extends Hd{constructor(e=new Xn,t=new Xn,n=new Xn,i=new Xn){super();this.isCubicBezierCurve=true;this.type="CubicBezierCurve";this.v0=e;this.v1=t;this.v2=n;this.v3=i}getPoint(e,t=new Xn){const n=t;const i=this.v0,r=this.v1,s=this.v2,a=this.v3;n.set(of(e,i.x,r.x,s.x,a.x),of(e,i.y,r.y,s.y,a.y));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);this.v3.copy(e.v3);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();e.v3=this.v3.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);this.v3.fromArray(e.v3);return this}}class cf extends Hd{constructor(e=new Qn,t=new Qn,n=new Qn,i=new Qn){super();this.isCubicBezierCurve3=true;this.type="CubicBezierCurve3";this.v0=e;this.v1=t;this.v2=n;this.v3=i}getPoint(e,t=new Qn){const n=t;const i=this.v0,r=this.v1,s=this.v2,a=this.v3;n.set(of(e,i.x,r.x,s.x,a.x),of(e,i.y,r.y,s.y,a.y),of(e,i.z,r.z,s.z,a.z));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);this.v3.copy(e.v3);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();e.v3=this.v3.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);this.v3.fromArray(e.v3);return this}}class uf extends Hd{constructor(e=new Xn,t=new Xn){super();this.isLineCurve=true;this.type="LineCurve";this.v1=e;this.v2=t}getPoint(e,t=new Xn){const n=t;if(e===1){n.copy(this.v2)}else{n.copy(this.v2).sub(this.v1);n.multiplyScalar(e).add(this.v1)}return n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Xn){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){super.copy(e);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}class hf extends Hd{constructor(e=new Qn,t=new Qn){super();this.isLineCurve3=true;this.type="LineCurve3";this.v1=e;this.v2=t}getPoint(e,t=new Qn){const n=t;if(e===1){n.copy(this.v2)}else{n.copy(this.v2).sub(this.v1);n.multiplyScalar(e).add(this.v1)}return n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Qn){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){super.copy(e);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}class df extends Hd{constructor(e=new Xn,t=new Xn,n=new Xn){super();this.isQuadraticBezierCurve=true;this.type="QuadraticBezierCurve";this.v0=e;this.v1=t;this.v2=n}getPoint(e,t=new Xn){const n=t;const i=this.v0,r=this.v1,s=this.v2;n.set(tf(e,i.x,r.x,s.x),tf(e,i.y,r.y,s.y));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}class ff extends Hd{constructor(e=new Qn,t=new Qn,n=new Qn){super();this.isQuadraticBezierCurve3=true;this.type="QuadraticBezierCurve3";this.v0=e;this.v1=t;this.v2=n}getPoint(e,t=new Qn){const n=t;const i=this.v0,r=this.v1,s=this.v2;n.set(tf(e,i.x,r.x,s.x),tf(e,i.y,r.y,s.y),tf(e,i.z,r.z,s.z));return n}copy(e){super.copy(e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);return this}toJSON(){const e=super.toJSON();e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e}fromJSON(e){super.fromJSON(e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this}}class pf extends Hd{constructor(e=[]){super();this.isSplineCurve=true;this.type="SplineCurve";this.points=e}getPoint(e,t=new Xn){const n=t;const i=this.points;const r=(i.length-1)*e;const s=Math.floor(r);const a=r-s;const o=i[s===0?s:s-1];const l=i[s];const c=i[s>i.length-2?i.length-1:s+1];const u=i[s>i.length-3?i.length-1:s+2];n.set(Kd(a,o.x,l.x,c.x,u.x),Kd(a,o.y,l.y,c.y,u.y));return n}copy(e){super.copy(e);this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e);this.points=[];for(let t=0,n=e.points.length;t<n;t++){const n=e.points[t];this.points.push((new Xn).fromArray(n))}return this}}var mf=Object.freeze({__proto__:null,ArcCurve:Wd,CatmullRomCurve3:Jd,CubicBezierCurve:lf,CubicBezierCurve3:cf,EllipseCurve:Vd,LineCurve:uf,LineCurve3:hf,QuadraticBezierCurve:df,QuadraticBezierCurve3:ff,SplineCurve:pf});class gf extends Hd{constructor(){super();this.type="CurvePath";this.curves=[];this.autoClose=false}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);const t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){this.curves.push(new uf(t,e))}}getPoint(e,t){const n=e*this.getLength();const i=this.getCurveLengths();let r=0;while(r<i.length){if(i[r]>=n){const e=i[r]-n;const s=this.curves[r];const a=s.getLength();const o=a===0?0:1-e/a;return s.getPointAt(o,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths}const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++){t+=this.curves[n].getLength();e.push(t)}this.cacheLengths=e;return e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++){t.push(this.getPoint(n/e))}if(this.autoClose){t.push(t[0])}return t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i];const a=s.isEllipseCurve?e*2:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e;const o=s.getPoints(a);for(let e=0;e<o.length;e++){const i=o[e];if(n&&n.equals(i))continue;t.push(i);n=i}}if(this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])){t.push(t[0])}return t}copy(e){super.copy(e);this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push(n.clone())}this.autoClose=e.autoClose;return this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose;e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e);this.autoClose=e.autoClose;this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const n=e.curves[t];this.curves.push((new mf[n.type]).fromJSON(n))}return this}}class _f extends gf{constructor(e){super();this.type="Path";this.currentPoint=new Xn;if(e){this.setFromPoints(e)}}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++){this.lineTo(e[t].x,e[t].y)}return this}moveTo(e,t){this.currentPoint.set(e,t);return this}lineTo(e,t){const n=new uf(this.currentPoint.clone(),new Xn(e,t));this.curves.push(n);this.currentPoint.set(e,t);return this}quadraticCurveTo(e,t,n,i){const r=new df(this.currentPoint.clone(),new Xn(e,t),new Xn(n,i));this.curves.push(r);this.currentPoint.set(n,i);return this}bezierCurveTo(e,t,n,i,r,s){const a=new lf(this.currentPoint.clone(),new Xn(e,t),new Xn(n,i),new Xn(r,s));this.curves.push(a);this.currentPoint.set(r,s);return this}splineThru(e){const t=[this.currentPoint.clone()].concat(e);const n=new pf(t);this.curves.push(n);this.currentPoint.copy(e[e.length-1]);return this}arc(e,t,n,i,r,s){const a=this.currentPoint.x;const o=this.currentPoint.y;this.absarc(e+a,t+o,n,i,r,s);return this}absarc(e,t,n,i,r,s){this.absellipse(e,t,n,n,i,r,s);return this}ellipse(e,t,n,i,r,s,a,o){const l=this.currentPoint.x;const c=this.currentPoint.y;this.absellipse(e+l,t+c,n,i,r,s,a,o);return this}absellipse(e,t,n,i,r,s,a,o){const l=new Vd(e,t,n,i,r,s,a,o);if(this.curves.length>0){const e=l.getPoint(0);if(!e.equals(this.currentPoint)){this.lineTo(e.x,e.y)}}this.curves.push(l);const c=l.getPoint(1);this.currentPoint.copy(c);return this}copy(e){super.copy(e);this.currentPoint.copy(e.currentPoint);return this}toJSON(){const e=super.toJSON();e.currentPoint=this.currentPoint.toArray();return e}fromJSON(e){super.fromJSON(e);this.currentPoint.fromArray(e.currentPoint);return this}}class xf extends us{constructor(e=[new Xn(0,-.5),new Xn(.5,0),new Xn(0,.5)],t=12,n=0,i=Math.PI*2){super();this.type="LatheGeometry";this.parameters={points:e,segments:t,phiStart:n,phiLength:i};t=Math.floor(t);i=Sn(i,0,Math.PI*2);const r=[];const s=[];const a=[];const o=[];const l=[];const c=1/t;const u=new Qn;const h=new Xn;const d=new Qn;const f=new Qn;const p=new Qn;let m=0;let g=0;for(let t=0;t<=e.length-1;t++){switch(t){case 0:m=e[t+1].x-e[t].x;g=e[t+1].y-e[t].y;d.x=g*1;d.y=-m;d.z=g*0;p.copy(d);d.normalize();o.push(d.x,d.y,d.z);break;case e.length-1:o.push(p.x,p.y,p.z);break;default:m=e[t+1].x-e[t].x;g=e[t+1].y-e[t].y;d.x=g*1;d.y=-m;d.z=g*0;f.copy(d);d.x+=p.x;d.y+=p.y;d.z+=p.z;d.normalize();o.push(d.x,d.y,d.z);p.copy(f)}}for(let r=0;r<=t;r++){const d=n+r*c*i;const f=Math.sin(d);const p=Math.cos(d);for(let n=0;n<=e.length-1;n++){u.x=e[n].x*f;u.y=e[n].y;u.z=e[n].x*p;s.push(u.x,u.y,u.z);h.x=r/t;h.y=n/(e.length-1);a.push(h.x,h.y);const i=o[3*n+0]*f;const c=o[3*n+1];const d=o[3*n+0]*p;l.push(i,c,d)}}for(let n=0;n<t;n++){for(let t=0;t<e.length-1;t++){const i=t+n*e.length;const s=i;const a=i+e.length;const o=i+e.length+1;const l=i+1;r.push(s,a,l);r.push(o,l,a)}}this.setIndex(r);this.setAttribute("position",new ts(s,3));this.setAttribute("uv",new ts(a,2));this.setAttribute("normal",new ts(l,3))}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new xf(e.points,e.segments,e.phiStart,e.phiLength)}}class yf extends xf{constructor(e=1,t=1,n=4,i=8){const r=new _f;r.absarc(0,-t/2,e,Math.PI*1.5,0);r.absarc(0,t/2,e,0,Math.PI*.5);super(r.getPoints(n),i);this.type="CapsuleGeometry";this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new yf(e.radius,e.length,e.capSegments,e.radialSegments)}}class vf extends us{constructor(e=1,t=32,n=0,i=Math.PI*2){super();this.type="CircleGeometry";this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i};t=Math.max(3,t);const r=[];const s=[];const a=[];const o=[];const l=new Qn;const c=new Xn;s.push(0,0,0);a.push(0,0,1);o.push(.5,.5);for(let r=0,u=3;r<=t;r++,u+=3){const h=n+r/t*i;l.x=e*Math.cos(h);l.y=e*Math.sin(h);s.push(l.x,l.y,l.z);a.push(0,0,1);c.x=(s[u]/e+1)/2;c.y=(s[u+1]/e+1)/2;o.push(c.x,c.y)}for(let e=1;e<=t;e++){r.push(e,e+1,0)}this.setIndex(r);this.setAttribute("position",new ts(s,3));this.setAttribute("normal",new ts(a,3));this.setAttribute("uv",new ts(o,2))}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new vf(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Mf extends us{constructor(e=1,t=1,n=1,i=32,r=1,s=false,a=0,o=Math.PI*2){super();this.type="CylinderGeometry";this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;i=Math.floor(i);r=Math.floor(r);const c=[];const u=[];const h=[];const d=[];let f=0;const p=[];const m=n/2;let g=0;_();if(s===false){if(e>0)x(true);if(t>0)x(false)}this.setIndex(c);this.setAttribute("position",new ts(u,3));this.setAttribute("normal",new ts(h,3));this.setAttribute("uv",new ts(d,2));function _(){const s=new Qn;const _=new Qn;let x=0;const y=(t-e)/n;for(let l=0;l<=r;l++){const c=[];const g=l/r;const x=g*(t-e)+e;for(let e=0;e<=i;e++){const t=e/i;const r=t*o+a;const l=Math.sin(r);const p=Math.cos(r);_.x=x*l;_.y=-g*n+m;_.z=x*p;u.push(_.x,_.y,_.z);s.set(l,y,p).normalize();h.push(s.x,s.y,s.z);d.push(t,1-g);c.push(f++)}p.push(c)}for(let e=0;e<i;e++){for(let t=0;t<r;t++){const n=p[t][e];const i=p[t+1][e];const r=p[t+1][e+1];const s=p[t][e+1];c.push(n,i,s);c.push(i,r,s);x+=6}}l.addGroup(g,x,0);g+=x}function x(n){const r=f;const s=new Xn;const p=new Qn;let _=0;const x=n===true?e:t;const y=n===true?1:-1;for(let e=1;e<=i;e++){u.push(0,m*y,0);h.push(0,y,0);d.push(.5,.5);f++}const v=f;for(let e=0;e<=i;e++){const t=e/i;const n=t*o+a;const r=Math.cos(n);const l=Math.sin(n);p.x=x*l;p.y=m*y;p.z=x*r;u.push(p.x,p.y,p.z);h.push(0,y,0);s.x=r*.5+.5;s.y=l*.5*y+.5;d.push(s.x,s.y);f++}for(let e=0;e<i;e++){const t=r+e;const i=v+e;if(n===true){c.push(i,i+1,t)}else{c.push(i+1,i,t)}_+=3}l.addGroup(g,_,n===true?1:2);g+=_}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new Mf(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class bf extends Mf{constructor(e=1,t=1,n=32,i=1,r=false,s=0,a=Math.PI*2){super(0,e,t,n,i,r,s,a);this.type="ConeGeometry";this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(e){return new bf(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Sf extends us{constructor(e=[],t=[],n=1,i=0){super();this.type="PolyhedronGeometry";this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[];const s=[];a(i);l(n);c();this.setAttribute("position",new ts(r,3));this.setAttribute("normal",new ts(r.slice(),3));this.setAttribute("uv",new ts(s,2));if(i===0){this.computeVertexNormals()}else{this.normalizeNormals()}function a(e){const n=new Qn;const i=new Qn;const r=new Qn;for(let s=0;s<t.length;s+=3){d(t[s+0],n);d(t[s+1],i);d(t[s+2],r);o(n,i,r,e)}}function o(e,t,n,i){const r=i+1;const s=[];for(let i=0;i<=r;i++){s[i]=[];const a=e.clone().lerp(n,i/r);const o=t.clone().lerp(n,i/r);const l=r-i;for(let e=0;e<=l;e++){if(e===0&&i===r){s[i][e]=a}else{s[i][e]=a.clone().lerp(o,e/l)}}}for(let e=0;e<r;e++){for(let t=0;t<2*(r-e)-1;t++){const n=Math.floor(t/2);if(t%2===0){h(s[e][n+1]);h(s[e+1][n]);h(s[e][n])}else{h(s[e][n+1]);h(s[e+1][n+1]);h(s[e+1][n])}}}}function l(e){const t=new Qn;for(let n=0;n<r.length;n+=3){t.x=r[n+0];t.y=r[n+1];t.z=r[n+2];t.normalize().multiplyScalar(e);r[n+0]=t.x;r[n+1]=t.y;r[n+2]=t.z}}function c(){const e=new Qn;for(let t=0;t<r.length;t+=3){e.x=r[t+0];e.y=r[t+1];e.z=r[t+2];const n=m(e)/2/Math.PI+.5;const i=g(e)/Math.PI+.5;s.push(n,1-i)}f();u()}function u(){for(let e=0;e<s.length;e+=6){const t=s[e+0];const n=s[e+2];const i=s[e+4];const r=Math.max(t,n,i);const a=Math.min(t,n,i);if(r>.9&&a<.1){if(t<.2)s[e+0]+=1;if(n<.2)s[e+2]+=1;if(i<.2)s[e+4]+=1}}}function h(e){r.push(e.x,e.y,e.z)}function d(t,n){const i=t*3;n.x=e[i+0];n.y=e[i+1];n.z=e[i+2]}function f(){const e=new Qn;const t=new Qn;const n=new Qn;const i=new Qn;const a=new Xn;const o=new Xn;const l=new Xn;for(let c=0,u=0;c<r.length;c+=9,u+=6){e.set(r[c+0],r[c+1],r[c+2]);t.set(r[c+3],r[c+4],r[c+5]);n.set(r[c+6],r[c+7],r[c+8]);a.set(s[u+0],s[u+1]);o.set(s[u+2],s[u+3]);l.set(s[u+4],s[u+5]);i.copy(e).add(t).add(n).divideScalar(3);const h=m(i);p(a,u+0,e,h);p(o,u+2,t,h);p(l,u+4,n,h)}}function p(e,t,n,i){if(i<0&&e.x===1){s[t]=e.x-1}if(n.x===0&&n.z===0){s[t]=i/2/Math.PI+.5}}function m(e){return Math.atan2(e.z,-e.x)}function g(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new Sf(e.vertices,e.indices,e.radius,e.details)}}class Tf extends Sf{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;const i=1/n;const r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i];const s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,s,e,t);this.type="DodecahedronGeometry";this.parameters={radius:e,detail:t}}static fromJSON(e){return new Tf(e.radius,e.detail)}}const wf=new Qn;const Ef=new Qn;const Af=new Qn;const Rf=new Nr;class Cf extends us{constructor(e=null,t=1){super();this.type="EdgesGeometry";this.parameters={geometry:e,thresholdAngle:t};if(e!==null){const n=4;const i=Math.pow(10,n);const r=Math.cos(vn*t);const s=e.getIndex();const a=e.getAttribute("position");const o=s?s.count:a.count;const l=[0,0,0];const c=["a","b","c"];const u=new Array(3);const h={};const d=[];for(let e=0;e<o;e+=3){if(s){l[0]=s.getX(e);l[1]=s.getX(e+1);l[2]=s.getX(e+2)}else{l[0]=e;l[1]=e+1;l[2]=e+2}const{a:t,b:n,c:o}=Rf;t.fromBufferAttribute(a,l[0]);n.fromBufferAttribute(a,l[1]);o.fromBufferAttribute(a,l[2]);Rf.getNormal(Af);u[0]=`${Math.round(t.x*i)},${Math.round(t.y*i)},${Math.round(t.z*i)}`;u[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`;u[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`;if(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]){continue}for(let e=0;e<3;e++){const t=(e+1)%3;const n=u[e];const i=u[t];const s=Rf[c[e]];const a=Rf[c[t]];const o=`${n}_${i}`;const f=`${i}_${n}`;if(f in h&&h[f]){if(Af.dot(h[f].normal)<=r){d.push(s.x,s.y,s.z);d.push(a.x,a.y,a.z)}h[f]=null}else if(!(o in h)){h[o]={index0:l[e],index1:l[t],normal:Af.clone()}}}}for(const e in h){if(h[e]){const{index0:t,index1:n}=h[e];wf.fromBufferAttribute(a,t);Ef.fromBufferAttribute(a,n);d.push(wf.x,wf.y,wf.z);d.push(Ef.x,Ef.y,Ef.z)}}this.setAttribute("position",new ts(d,3))}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}}class Lf extends _f{constructor(e){super(e);this.uuid=bn();this.type="Shape";this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++){t[n]=this.holes[n].getPoints(e)}return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e);this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid;e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e);this.uuid=e.uuid;this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const n=e.holes[t];this.holes.push((new _f).fromJSON(n))}return this}}const Pf={triangulate:function(e,t,n=2){const i=t&&t.length;const r=i?t[0]*n:e.length;let s=If(e,0,r,n,true);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,u,h,d,f;if(i)s=zf(e,t,s,n);if(e.length>80*n){o=c=e[0];l=u=e[1];for(let t=n;t<r;t+=n){h=e[t];d=e[t+1];if(h<o)o=h;if(d<l)l=d;if(h>c)c=h;if(d>u)u=d}f=Math.max(c-o,u-l);f=f!==0?32767/f:0}Nf(s,a,n,o,l,f,0);return a}};function If(e,t,n,i,r){let s,a;if(r===lp(e,t,n,i)>0){for(s=t;s<n;s+=i)a=sp(s,e[s],e[s+1],a)}else{for(s=n-i;s>=t;s-=i)a=sp(s,e[s],e[s+1],a)}if(a&&Kf(a,a.next)){ap(a);a=a.next}return a}function Df(e,t){if(!e)return e;if(!t)t=e;let n=e,i;do{i=false;if(!n.steiner&&(Kf(n,n.next)||Jf(n.prev,n,n.next)===0)){ap(n);n=t=n.prev;if(n===n.next)break;i=true}else{n=n.next}}while(i||n!==t);return t}function Nf(e,t,n,i,r,s,a){if(!e)return;if(!a&&s)Wf(e,i,r,s);let o=e,l,c;while(e.prev!==e.next){l=e.prev;c=e.next;if(s?Uf(e,i,r,s):Of(e)){t.push(l.i/n|0);t.push(e.i/n|0);t.push(c.i/n|0);ap(e);e=c.next;o=c.next;continue}e=c;if(e===o){if(!a){Nf(Df(e),t,n,i,r,s,1)}else if(a===1){e=Ff(Df(e),t,n);Nf(e,t,n,i,r,s,2)}else if(a===2){Bf(e,t,n,i,r,s)}break}}}function Of(e){const t=e.prev,n=e,i=e.next;if(Jf(t,n,i)>=0)return false;const r=t.x,s=n.x,a=i.x,o=t.y,l=n.y,c=i.y;const u=r<s?r<a?r:a:s<a?s:a,h=o<l?o<c?o:c:l<c?l:c,d=r>s?r>a?r:a:s>a?s:a,f=o>l?o>c?o:c:l>c?l:c;let p=i.next;while(p!==t){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Yf(r,o,s,l,a,c,p.x,p.y)&&Jf(p.prev,p,p.next)>=0)return false;p=p.next}return true}function Uf(e,t,n,i){const r=e.prev,s=e,a=e.next;if(Jf(r,s,a)>=0)return false;const o=r.x,l=s.x,c=a.x,u=r.y,h=s.y,d=a.y;const f=o<l?o<c?o:c:l<c?l:c,p=u<h?u<d?u:d:h<d?h:d,m=o>l?o>c?o:c:l>c?l:c,g=u>h?u>d?u:d:h>d?h:d;const _=jf(f,p,t,n,i),x=jf(m,g,t,n,i);let y=e.prevZ,v=e.nextZ;while(y&&y.z>=_&&v&&v.z<=x){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&y!==r&&y!==a&&Yf(o,u,l,h,c,d,y.x,y.y)&&Jf(y.prev,y,y.next)>=0)return false;y=y.prevZ;if(v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&v!==r&&v!==a&&Yf(o,u,l,h,c,d,v.x,v.y)&&Jf(v.prev,v,v.next)>=0)return false;v=v.nextZ}while(y&&y.z>=_){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&y!==r&&y!==a&&Yf(o,u,l,h,c,d,y.x,y.y)&&Jf(y.prev,y,y.next)>=0)return false;y=y.prevZ}while(v&&v.z<=x){if(v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&v!==r&&v!==a&&Yf(o,u,l,h,c,d,v.x,v.y)&&Jf(v.prev,v,v.next)>=0)return false;v=v.nextZ}return true}function Ff(e,t,n){let i=e;do{const r=i.prev,s=i.next.next;if(!Kf(r,s)&&$f(r,i,i.next,s)&&np(r,s)&&np(s,r)){t.push(r.i/n|0);t.push(i.i/n|0);t.push(s.i/n|0);ap(i);ap(i.next);i=e=s}i=i.next}while(i!==e);return Df(i)}function Bf(e,t,n,i,r,s){let a=e;do{let e=a.next.next;while(e!==a.prev){if(a.i!==e.i&&Zf(a,e)){let o=rp(a,e);a=Df(a,a.next);o=Df(o,o.next);Nf(a,t,n,i,r,s,0);Nf(o,t,n,i,r,s,0);return}e=e.next}a=a.next}while(a!==e)}function zf(e,t,n,i){const r=[];let s,a,o,l,c;for(s=0,a=t.length;s<a;s++){o=t[s]*i;l=s<a-1?t[s+1]*i:e.length;c=If(e,o,l,i,false);if(c===c.next)c.steiner=true;r.push(qf(c))}r.sort(Gf);for(s=0;s<r.length;s++){n=kf(r[s],n)}return n}function Gf(e,t){return e.x-t.x}function kf(e,t){const n=Hf(e,t);if(!n){return t}const i=rp(n,e);Df(i,i.next);return Df(n,n.next)}function Hf(e,t){let n=t,i=-Infinity,r;const s=e.x,a=e.y;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){const e=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=s&&e>i){i=e;r=n.x<n.next.x?n:n.next;if(e===s)return r}}n=n.next}while(n!==t);if(!r)return null;const o=r,l=r.x,c=r.y;let u=Infinity,h;n=r;do{if(s>=n.x&&n.x>=l&&s!==n.x&&Yf(a<c?s:i,a,l,c,a<c?i:s,a,n.x,n.y)){h=Math.abs(a-n.y)/(s-n.x);if(np(n,e)&&(h<u||h===u&&(n.x>r.x||n.x===r.x&&Vf(r,n)))){r=n;u=h}}n=n.next}while(n!==o);return r}function Vf(e,t){return Jf(e.prev,e,t.prev)<0&&Jf(t.next,e,e.next)<0}function Wf(e,t,n,i){let r=e;do{if(r.z===0)r.z=jf(r.x,r.y,t,n,i);r.prevZ=r.prev;r.nextZ=r.next;r=r.next}while(r!==e);r.prevZ.nextZ=null;r.prevZ=null;Xf(r)}function Xf(e){let t,n,i,r,s,a,o,l,c=1;do{n=e;e=null;s=null;a=0;while(n){a++;i=n;o=0;for(t=0;t<c;t++){o++;i=i.nextZ;if(!i)break}l=c;while(o>0||l>0&&i){if(o!==0&&(l===0||!i||n.z<=i.z)){r=n;n=n.nextZ;o--}else{r=i;i=i.nextZ;l--}if(s)s.nextZ=r;else e=r;r.prevZ=s;s=r}n=i}s.nextZ=null;c*=2}while(a>1);return e}function jf(e,t,n,i,r){e=(e-n)*r|0;t=(t-i)*r|0;e=(e|e<<8)&16711935;e=(e|e<<4)&252645135;e=(e|e<<2)&858993459;e=(e|e<<1)&1431655765;t=(t|t<<8)&16711935;t=(t|t<<4)&252645135;t=(t|t<<2)&858993459;t=(t|t<<1)&1431655765;return e|t<<1}function qf(e){let t=e,n=e;do{if(t.x<n.x||t.x===n.x&&t.y<n.y)n=t;t=t.next}while(t!==e);return n}function Yf(e,t,n,i,r,s,a,o){return(r-a)*(t-o)>=(e-a)*(s-o)&&(e-a)*(i-o)>=(n-a)*(t-o)&&(n-a)*(s-o)>=(r-a)*(i-o)}function Zf(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!tp(e,t)&&(np(e,t)&&np(t,e)&&ip(e,t)&&(Jf(e.prev,e,t.prev)||Jf(e,t.prev,t))||Kf(e,t)&&Jf(e.prev,e,e.next)>0&&Jf(t.prev,t,t.next)>0)}function Jf(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Kf(e,t){return e.x===t.x&&e.y===t.y}function $f(e,t,n,i){const r=ep(Jf(e,t,n));const s=ep(Jf(e,t,i));const a=ep(Jf(n,i,e));const o=ep(Jf(n,i,t));if(r!==s&&a!==o)return true;if(r===0&&Qf(e,n,t))return true;if(s===0&&Qf(e,i,t))return true;if(a===0&&Qf(n,e,i))return true;if(o===0&&Qf(n,t,i))return true;return false}function Qf(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function ep(e){return e>0?1:e<0?-1:0}function tp(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&$f(n,n.next,e,t))return true;n=n.next}while(n!==e);return false}function np(e,t){return Jf(e.prev,e,e.next)<0?Jf(e,t,e.next)>=0&&Jf(e,e.prev,t)>=0:Jf(e,t,e.prev)<0||Jf(e,e.next,t)<0}function ip(e,t){let n=e,i=false;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do{if(n.y>s!==n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x)i=!i;n=n.next}while(n!==e);return i}function rp(e,t){const n=new op(e.i,e.x,e.y),i=new op(t.i,t.x,t.y),r=e.next,s=t.prev;e.next=t;t.prev=e;n.next=r;r.prev=n;i.next=n;n.prev=i;s.next=i;i.prev=s;return i}function sp(e,t,n,i){const r=new op(e,t,n);if(!i){r.prev=r;r.next=r}else{r.next=i.next;r.prev=i;i.next.prev=r;i.next=r}return r}function ap(e){e.next.prev=e.prev;e.prev.next=e.next;if(e.prevZ)e.prevZ.nextZ=e.nextZ;if(e.nextZ)e.nextZ.prevZ=e.prevZ}function op(e,t,n){this.i=e;this.x=t;this.y=n;this.prev=null;this.next=null;this.z=0;this.prevZ=null;this.nextZ=null;this.steiner=false}function lp(e,t,n,i){let r=0;for(let s=t,a=n-i;s<n;s+=i){r+=(e[a]-e[s])*(e[s+1]+e[a+1]);a=s}return r}class cp{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++){n+=e[i].x*e[r].y-e[r].x*e[i].y}return n*.5}static isClockWise(e){return cp.area(e)<0}static triangulateShape(e,t){const n=[];const i=[];const r=[];up(e);hp(n,e);let s=e.length;t.forEach(up);for(let e=0;e<t.length;e++){i.push(s);s+=t[e].length;hp(n,t[e])}const a=Pf.triangulate(n,i);for(let e=0;e<a.length;e+=3){r.push(a.slice(e,e+3))}return r}}function up(e){const t=e.length;if(t>2&&e[t-1].equals(e[0])){e.pop()}}function hp(e,t){for(let n=0;n<t.length;n++){e.push(t[n].x);e.push(t[n].y)}}class dp extends us{constructor(e=new Lf([new Xn(.5,.5),new Xn(-.5,.5),new Xn(-.5,-.5),new Xn(.5,-.5)]),t={}){super();this.type="ExtrudeGeometry";this.parameters={shapes:e,options:t};e=Array.isArray(e)?e:[e];const n=this;const i=[];const r=[];for(let t=0,n=e.length;t<n;t++){const n=e[t];s(n)}this.setAttribute("position",new ts(i,3));this.setAttribute("uv",new ts(r,2));this.computeVertexNormals();function s(e){const s=[];const a=t.curveSegments!==undefined?t.curveSegments:12;const o=t.steps!==undefined?t.steps:1;const l=t.depth!==undefined?t.depth:1;let c=t.bevelEnabled!==undefined?t.bevelEnabled:true;let u=t.bevelThickness!==undefined?t.bevelThickness:.2;let h=t.bevelSize!==undefined?t.bevelSize:u-.1;let d=t.bevelOffset!==undefined?t.bevelOffset:0;let f=t.bevelSegments!==undefined?t.bevelSegments:3;const p=t.extrudePath;const m=t.UVGenerator!==undefined?t.UVGenerator:fp;let g,_=false;let x,y,v,M;if(p){g=p.getSpacedPoints(o);_=true;c=false;x=p.computeFrenetFrames(o,false);y=new Qn;v=new Qn;M=new Qn}if(!c){f=0;u=0;h=0;d=0}const b=e.extractPoints(a);let S=b.shape;const T=b.holes;const w=!cp.isClockWise(S);if(w){S=S.reverse();for(let e=0,t=T.length;e<t;e++){const t=T[e];if(cp.isClockWise(t)){T[e]=t.reverse()}}}const E=cp.triangulateShape(S,T);const A=S;for(let e=0,t=T.length;e<t;e++){const t=T[e];S=S.concat(t)}function R(e,t,n){if(!t)console.error("THREE.ExtrudeGeometry: vec does not exist");return e.clone().addScaledVector(t,n)}const C=S.length,L=E.length;function P(e,t,n){let i,r,s;const a=e.x-t.x,o=e.y-t.y;const l=n.x-e.x,c=n.y-e.y;const u=a*a+o*o;const h=a*c-o*l;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(u);const d=Math.sqrt(l*l+c*c);const f=t.x-o/h;const p=t.y+a/h;const m=n.x-c/d;const g=n.y+l/d;const _=((m-f)*c-(g-p)*l)/(a*c-o*l);i=f+a*_-e.x;r=p+o*_-e.y;const x=i*i+r*r;if(x<=2){return new Xn(i,r)}else{s=Math.sqrt(x/2)}}else{let e=false;if(a>Number.EPSILON){if(l>Number.EPSILON){e=true}}else{if(a<-Number.EPSILON){if(l<-Number.EPSILON){e=true}}else{if(Math.sign(o)===Math.sign(c)){e=true}}}if(e){i=-o;r=a;s=Math.sqrt(u)}else{i=a;r=o;s=Math.sqrt(u/2)}}return new Xn(i/s,r/s)}const I=[];for(let e=0,t=A.length,n=t-1,i=e+1;e<t;e++,n++,i++){if(n===t)n=0;if(i===t)i=0;I[e]=P(A[e],A[n],A[i])}const D=[];let N,O=I.concat();for(let e=0,t=T.length;e<t;e++){const t=T[e];N=[];for(let e=0,n=t.length,i=n-1,r=e+1;e<n;e++,i++,r++){if(i===n)i=0;if(r===n)r=0;N[e]=P(t[e],t[i],t[r])}D.push(N);O=O.concat(N)}for(let e=0;e<f;e++){const t=e/f;const n=u*Math.cos(t*Math.PI/2);const i=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=A.length;e<t;e++){const t=R(A[e],I[e],i);G(t.x,t.y,-n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];N=D[e];for(let e=0,r=t.length;e<r;e++){const r=R(t[e],N[e],i);G(r.x,r.y,-n)}}}const U=h+d;for(let e=0;e<C;e++){const t=c?R(S[e],O[e],U):S[e];if(!_){G(t.x,t.y,0)}else{v.copy(x.normals[0]).multiplyScalar(t.x);y.copy(x.binormals[0]).multiplyScalar(t.y);M.copy(g[0]).add(v).add(y);G(M.x,M.y,M.z)}}for(let e=1;e<=o;e++){for(let t=0;t<C;t++){const n=c?R(S[t],O[t],U):S[t];if(!_){G(n.x,n.y,l/o*e)}else{v.copy(x.normals[e]).multiplyScalar(n.x);y.copy(x.binormals[e]).multiplyScalar(n.y);M.copy(g[e]).add(v).add(y);G(M.x,M.y,M.z)}}}for(let e=f-1;e>=0;e--){const t=e/f;const n=u*Math.cos(t*Math.PI/2);const i=h*Math.sin(t*Math.PI/2)+d;for(let e=0,t=A.length;e<t;e++){const t=R(A[e],I[e],i);G(t.x,t.y,l+n)}for(let e=0,t=T.length;e<t;e++){const t=T[e];N=D[e];for(let e=0,r=t.length;e<r;e++){const r=R(t[e],N[e],i);if(!_){G(r.x,r.y,l+n)}else{G(r.x,r.y+g[o-1].y,g[o-1].x+n)}}}}F();B();function F(){const e=i.length/3;if(c){let e=0;let t=C*e;for(let e=0;e<L;e++){const n=E[e];k(n[2]+t,n[1]+t,n[0]+t)}e=o+f*2;t=C*e;for(let e=0;e<L;e++){const n=E[e];k(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<L;e++){const t=E[e];k(t[2],t[1],t[0])}for(let e=0;e<L;e++){const t=E[e];k(t[0]+C*o,t[1]+C*o,t[2]+C*o)}}n.addGroup(e,i.length/3-e,0)}function B(){const e=i.length/3;let t=0;z(A,t);t+=A.length;for(let e=0,n=T.length;e<n;e++){const n=T[e];z(n,t);t+=n.length}n.addGroup(e,i.length/3-e,1)}function z(e,t){let n=e.length;while(--n>=0){const i=n;let r=n-1;if(r<0)r=e.length-1;for(let e=0,n=o+f*2;e<n;e++){const n=C*e;const s=C*(e+1);const a=t+i+n,o=t+r+n,l=t+r+s,c=t+i+s;H(a,o,l,c)}}}function G(e,t,n){s.push(e);s.push(t);s.push(n)}function k(e,t,r){V(e);V(t);V(r);const s=i.length/3;const a=m.generateTopUV(n,i,s-3,s-2,s-1);W(a[0]);W(a[1]);W(a[2])}function H(e,t,r,s){V(e);V(t);V(s);V(t);V(r);V(s);const a=i.length/3;const o=m.generateSideWallUV(n,i,a-6,a-3,a-2,a-1);W(o[0]);W(o[1]);W(o[3]);W(o[1]);W(o[2]);W(o[3])}function V(e){i.push(s[e*3+0]);i.push(s[e*3+1]);i.push(s[e*3+2])}function W(e){r.push(e.x);r.push(e.y)}}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}toJSON(){const e=super.toJSON();const t=this.parameters.shapes;const n=this.parameters.options;return pp(t,n,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const r=t[e.shapes[i]];n.push(r)}const i=e.options.extrudePath;if(i!==undefined){e.options.extrudePath=(new mf[i.type]).fromJSON(i)}return new dp(n,e.options)}}const fp={generateTopUV:function(e,t,n,i,r){const s=t[n*3];const a=t[n*3+1];const o=t[i*3];const l=t[i*3+1];const c=t[r*3];const u=t[r*3+1];return[new Xn(s,a),new Xn(o,l),new Xn(c,u)]},generateSideWallUV:function(e,t,n,i,r,s){const a=t[n*3];const o=t[n*3+1];const l=t[n*3+2];const c=t[i*3];const u=t[i*3+1];const h=t[i*3+2];const d=t[r*3];const f=t[r*3+1];const p=t[r*3+2];const m=t[s*3];const g=t[s*3+1];const _=t[s*3+2];if(Math.abs(o-u)<Math.abs(a-c)){return[new Xn(a,1-l),new Xn(c,1-h),new Xn(d,1-p),new Xn(m,1-_)]}else{return[new Xn(o,1-l),new Xn(u,1-h),new Xn(f,1-p),new Xn(g,1-_)]}}};function pp(e,t,n){n.shapes=[];if(Array.isArray(e)){for(let t=0,i=e.length;t<i;t++){const i=e[t];n.shapes.push(i.uuid)}}else{n.shapes.push(e.uuid)}n.options=Object.assign({},t);if(t.extrudePath!==undefined)n.options.extrudePath=t.extrudePath.toJSON();return n}class mp extends Sf{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2;const i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];const r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t);this.type="IcosahedronGeometry";this.parameters={radius:e,detail:t}}static fromJSON(e){return new mp(e.radius,e.detail)}}class gp extends Sf{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];const i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t);this.type="OctahedronGeometry";this.parameters={radius:e,detail:t}}static fromJSON(e){return new gp(e.radius,e.detail)}}class _p extends us{constructor(e=.5,t=1,n=32,i=1,r=0,s=Math.PI*2){super();this.type="RingGeometry";this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s};n=Math.max(3,n);i=Math.max(1,i);const a=[];const o=[];const l=[];const c=[];let u=e;const h=(t-e)/i;const d=new Qn;const f=new Xn;for(let e=0;e<=i;e++){for(let e=0;e<=n;e++){const i=r+e/n*s;d.x=u*Math.cos(i);d.y=u*Math.sin(i);o.push(d.x,d.y,d.z);l.push(0,0,1);f.x=(d.x/t+1)/2;f.y=(d.y/t+1)/2;c.push(f.x,f.y)}u+=h}for(let e=0;e<i;e++){const t=e*(n+1);for(let e=0;e<n;e++){const i=e+t;const r=i;const s=i+n+1;const o=i+n+2;const l=i+1;a.push(r,s,l);a.push(s,o,l)}}this.setIndex(a);this.setAttribute("position",new ts(o,3));this.setAttribute("normal",new ts(l,3));this.setAttribute("uv",new ts(c,2))}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new _p(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class xp extends us{constructor(e=new Lf([new Xn(0,.5),new Xn(-.5,-.5),new Xn(.5,-.5)]),t=12){super();this.type="ShapeGeometry";this.parameters={shapes:e,curveSegments:t};const n=[];const i=[];const r=[];const s=[];let a=0;let o=0;if(Array.isArray(e)===false){l(e)}else{for(let t=0;t<e.length;t++){l(e[t]);this.addGroup(a,o,t);a+=o;o=0}}this.setIndex(n);this.setAttribute("position",new ts(i,3));this.setAttribute("normal",new ts(r,3));this.setAttribute("uv",new ts(s,2));function l(e){const a=i.length/3;const l=e.extractPoints(t);let c=l.shape;const u=l.holes;if(cp.isClockWise(c)===false){c=c.reverse()}for(let e=0,t=u.length;e<t;e++){const t=u[e];if(cp.isClockWise(t)===true){u[e]=t.reverse()}}const h=cp.triangulateShape(c,u);for(let e=0,t=u.length;e<t;e++){const t=u[e];c=c.concat(t)}for(let e=0,t=c.length;e<t;e++){const t=c[e];i.push(t.x,t.y,0);r.push(0,0,1);s.push(t.x,t.y)}for(let e=0,t=h.length;e<t;e++){const t=h[e];const i=t[0]+a;const r=t[1]+a;const s=t[2]+a;n.push(i,r,s);o+=3}}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}toJSON(){const e=super.toJSON();const t=this.parameters.shapes;return yp(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const r=t[e.shapes[i]];n.push(r)}return new xp(n,e.curveSegments)}}function yp(e,t){t.shapes=[];if(Array.isArray(e)){for(let n=0,i=e.length;n<i;n++){const i=e[n];t.shapes.push(i.uuid)}}else{t.shapes.push(e.uuid)}return t}class vp extends us{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,s=0,a=Math.PI){super();this.type="SphereGeometry";this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:a};t=Math.max(3,Math.floor(t));n=Math.max(2,Math.floor(n));const o=Math.min(s+a,Math.PI);let l=0;const c=[];const u=new Qn;const h=new Qn;const d=[];const f=[];const p=[];const m=[];for(let d=0;d<=n;d++){const g=[];const _=d/n;let x=0;if(d==0&&s==0){x=.5/t}else if(d==n&&o==Math.PI){x=-.5/t}for(let n=0;n<=t;n++){const o=n/t;u.x=-e*Math.cos(i+o*r)*Math.sin(s+_*a);u.y=e*Math.cos(s+_*a);u.z=e*Math.sin(i+o*r)*Math.sin(s+_*a);f.push(u.x,u.y,u.z);h.copy(u).normalize();p.push(h.x,h.y,h.z);m.push(o+x,1-_);g.push(l++)}c.push(g)}for(let e=0;e<n;e++){for(let i=0;i<t;i++){const t=c[e][i+1];const r=c[e][i];const a=c[e+1][i];const l=c[e+1][i+1];if(e!==0||s>0)d.push(t,r,l);if(e!==n-1||o<Math.PI)d.push(r,a,l)}}this.setIndex(d);this.setAttribute("position",new ts(f,3));this.setAttribute("normal",new ts(p,3));this.setAttribute("uv",new ts(m,2))}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new vp(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Mp extends Sf{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];const i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t);this.type="TetrahedronGeometry";this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mp(e.radius,e.detail)}}class bp extends us{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super();this.type="TorusGeometry";this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r};n=Math.floor(n);i=Math.floor(i);const s=[];const a=[];const o=[];const l=[];const c=new Qn;const u=new Qn;const h=new Qn;for(let s=0;s<=n;s++){for(let d=0;d<=i;d++){const f=d/i*r;const p=s/n*Math.PI*2;u.x=(e+t*Math.cos(p))*Math.cos(f);u.y=(e+t*Math.cos(p))*Math.sin(f);u.z=t*Math.sin(p);a.push(u.x,u.y,u.z);c.x=e*Math.cos(f);c.y=e*Math.sin(f);h.subVectors(u,c).normalize();o.push(h.x,h.y,h.z);l.push(d/i);l.push(s/n)}}for(let e=1;e<=n;e++){for(let t=1;t<=i;t++){const n=(i+1)*e+t-1;const r=(i+1)*(e-1)+t-1;const a=(i+1)*(e-1)+t;const o=(i+1)*e+t;s.push(n,r,o);s.push(r,a,o)}}this.setIndex(s);this.setAttribute("position",new ts(a,3));this.setAttribute("normal",new ts(o,3));this.setAttribute("uv",new ts(l,2))}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new bp(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Sp extends us{constructor(e=1,t=.4,n=64,i=8,r=2,s=3){super();this.type="TorusKnotGeometry";this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:s};n=Math.floor(n);i=Math.floor(i);const a=[];const o=[];const l=[];const c=[];const u=new Qn;const h=new Qn;const d=new Qn;const f=new Qn;const p=new Qn;const m=new Qn;const g=new Qn;for(let a=0;a<=n;++a){const x=a/n*r*Math.PI*2;_(x,r,s,e,d);_(x+.01,r,s,e,f);m.subVectors(f,d);g.addVectors(f,d);p.crossVectors(m,g);g.crossVectors(p,m);p.normalize();g.normalize();for(let e=0;e<=i;++e){const r=e/i*Math.PI*2;const s=-t*Math.cos(r);const f=t*Math.sin(r);u.x=d.x+(s*g.x+f*p.x);u.y=d.y+(s*g.y+f*p.y);u.z=d.z+(s*g.z+f*p.z);o.push(u.x,u.y,u.z);h.subVectors(u,d).normalize();l.push(h.x,h.y,h.z);c.push(a/n);c.push(e/i)}}for(let e=1;e<=n;e++){for(let t=1;t<=i;t++){const n=(i+1)*(e-1)+(t-1);const r=(i+1)*e+(t-1);const s=(i+1)*e+t;const o=(i+1)*(e-1)+t;a.push(n,r,o);a.push(r,s,o)}}this.setIndex(a);this.setAttribute("position",new ts(o,3));this.setAttribute("normal",new ts(l,3));this.setAttribute("uv",new ts(c,2));function _(e,t,n,i,r){const s=Math.cos(e);const a=Math.sin(e);const o=n/t*e;const l=Math.cos(o);r.x=i*(2+l)*.5*s;r.y=i*(2+l)*a*.5;r.z=i*Math.sin(o)*.5}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}static fromJSON(e){return new Sp(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Tp extends us{constructor(e=new ff(new Qn(-1,-1,0),new Qn(-1,1,0),new Qn(1,1,0)),t=64,n=1,i=8,r=false){super();this.type="TubeGeometry";this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents;this.normals=s.normals;this.binormals=s.binormals;const a=new Qn;const o=new Qn;const l=new Xn;let c=new Qn;const u=[];const h=[];const d=[];const f=[];p();this.setIndex(f);this.setAttribute("position",new ts(u,3));this.setAttribute("normal",new ts(h,3));this.setAttribute("uv",new ts(d,2));function p(){for(let e=0;e<t;e++){m(e)}m(r===false?t:0);_();g()}function m(r){c=e.getPointAt(r/t,c);const l=s.normals[r];const d=s.binormals[r];for(let e=0;e<=i;e++){const t=e/i*Math.PI*2;const r=Math.sin(t);const s=-Math.cos(t);o.x=s*l.x+r*d.x;o.y=s*l.y+r*d.y;o.z=s*l.z+r*d.z;o.normalize();h.push(o.x,o.y,o.z);a.x=c.x+n*o.x;a.y=c.y+n*o.y;a.z=c.z+n*o.z;u.push(a.x,a.y,a.z)}}function g(){for(let e=1;e<=t;e++){for(let t=1;t<=i;t++){const n=(i+1)*(e-1)+(t-1);const r=(i+1)*e+(t-1);const s=(i+1)*e+t;const a=(i+1)*(e-1)+t;f.push(n,r,a);f.push(r,s,a)}}}function _(){for(let e=0;e<=t;e++){for(let n=0;n<=i;n++){l.x=e/t;l.y=n/i;d.push(l.x,l.y)}}}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}toJSON(){const e=super.toJSON();e.path=this.parameters.path.toJSON();return e}static fromJSON(e){return new Tp((new mf[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class wp extends us{constructor(e=null){super();this.type="WireframeGeometry";this.parameters={geometry:e};if(e!==null){const t=[];const n=new Set;const i=new Qn;const r=new Qn;if(e.index!==null){const s=e.attributes.position;const a=e.index;let o=e.groups;if(o.length===0){o=[{start:0,count:a.count,materialIndex:0}]}for(let e=0,l=o.length;e<l;++e){const l=o[e];const c=l.start;const u=l.count;for(let e=c,o=c+u;e<o;e+=3){for(let o=0;o<3;o++){const l=a.getX(e+o);const c=a.getX(e+(o+1)%3);i.fromBufferAttribute(s,l);r.fromBufferAttribute(s,c);if(Ep(i,r,n)===true){t.push(i.x,i.y,i.z);t.push(r.x,r.y,r.z)}}}}}else{const s=e.attributes.position;for(let e=0,a=s.count/3;e<a;e++){for(let a=0;a<3;a++){const o=3*e+a;const l=3*e+(a+1)%3;i.fromBufferAttribute(s,o);r.fromBufferAttribute(s,l);if(Ep(i,r,n)===true){t.push(i.x,i.y,i.z);t.push(r.x,r.y,r.z)}}}}this.setAttribute("position",new ts(t,3))}}copy(e){super.copy(e);this.parameters=Object.assign({},e.parameters);return this}}function Ep(e,t,n){const i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;const r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;if(n.has(i)===true||n.has(r)===true){return false}else{n.add(i);n.add(r);return true}}var Ap=Object.freeze({__proto__:null,BoxGeometry:Rs,CapsuleGeometry:yf,CircleGeometry:vf,ConeGeometry:bf,CylinderGeometry:Mf,DodecahedronGeometry:Tf,EdgesGeometry:Cf,ExtrudeGeometry:dp,IcosahedronGeometry:mp,LatheGeometry:xf,OctahedronGeometry:gp,PlaneGeometry:Qs,PolyhedronGeometry:Sf,RingGeometry:_p,ShapeGeometry:xp,SphereGeometry:vp,TetrahedronGeometry:Mp,TorusGeometry:bp,TorusKnotGeometry:Sp,TubeGeometry:Tp,WireframeGeometry:wp});class Rp extends Ur{constructor(e){super();this.isShadowMaterial=true;this.type="ShadowMaterial";this.color=new kr(0);this.transparent=true;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.fog=e.fog;return this}}class Cp extends Us{constructor(e){super(e);this.isRawShaderMaterial=true;this.type="RawShaderMaterial"}}class Lp extends Ur{constructor(e){super();this.isMeshStandardMaterial=true;this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new kr(16777215);this.roughness=1;this.metalness=0;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new kr(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=Ut;this.normalScale=new Xn(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.flatShading=false;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.defines={STANDARD:""};this.color.copy(e.color);this.roughness=e.roughness;this.metalness=e.metalness;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.roughnessMap=e.roughnessMap;this.metalnessMap=e.metalnessMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.envMapIntensity=e.envMapIntensity;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.flatShading=e.flatShading;this.fog=e.fog;return this}}class Pp extends Lp{constructor(e){super();this.isMeshPhysicalMaterial=true;this.defines={STANDARD:"",PHYSICAL:""};this.type="MeshPhysicalMaterial";this.clearcoatMap=null;this.clearcoatRoughness=0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Xn(1,1);this.clearcoatNormalMap=null;this.ior=1.5;Object.defineProperty(this,"reflectivity",{get:function(){return Sn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}});this.iridescenceMap=null;this.iridescenceIOR=1.3;this.iridescenceThicknessRange=[100,400];this.iridescenceThicknessMap=null;this.sheenColor=new kr(0);this.sheenColorMap=null;this.sheenRoughness=1;this.sheenRoughnessMap=null;this.transmissionMap=null;this.thickness=0;this.thicknessMap=null;this.attenuationDistance=Infinity;this.attenuationColor=new kr(1,1,1);this.specularIntensity=1;this.specularIntensityMap=null;this.specularColor=new kr(1,1,1);this.specularColorMap=null;this._sheen=0;this._clearcoat=0;this._iridescence=0;this._transmission=0;this.setValues(e)}get sheen(){return this._sheen}set sheen(e){if(this._sheen>0!==e>0){this.version++}this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){if(this._clearcoat>0!==e>0){this.version++}this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){if(this._iridescence>0!==e>0){this.version++}this._iridescence=e}get transmission(){return this._transmission}set transmission(e){if(this._transmission>0!==e>0){this.version++}this._transmission=e}copy(e){super.copy(e);this.defines={STANDARD:"",PHYSICAL:""};this.clearcoat=e.clearcoat;this.clearcoatMap=e.clearcoatMap;this.clearcoatRoughness=e.clearcoatRoughness;this.clearcoatRoughnessMap=e.clearcoatRoughnessMap;this.clearcoatNormalMap=e.clearcoatNormalMap;this.clearcoatNormalScale.copy(e.clearcoatNormalScale);this.ior=e.ior;this.iridescence=e.iridescence;this.iridescenceMap=e.iridescenceMap;this.iridescenceIOR=e.iridescenceIOR;this.iridescenceThicknessRange=[...e.iridescenceThicknessRange];this.iridescenceThicknessMap=e.iridescenceThicknessMap;this.sheen=e.sheen;this.sheenColor.copy(e.sheenColor);this.sheenColorMap=e.sheenColorMap;this.sheenRoughness=e.sheenRoughness;this.sheenRoughnessMap=e.sheenRoughnessMap;this.transmission=e.transmission;this.transmissionMap=e.transmissionMap;this.thickness=e.thickness;this.thicknessMap=e.thicknessMap;this.attenuationDistance=e.attenuationDistance;this.attenuationColor.copy(e.attenuationColor);this.specularIntensity=e.specularIntensity;this.specularIntensityMap=e.specularIntensityMap;this.specularColor.copy(e.specularColor);this.specularColorMap=e.specularColorMap;return this}}class Ip extends Ur{constructor(e){super();this.isMeshPhongMaterial=true;this.type="MeshPhongMaterial";this.color=new kr(16777215);this.specular=new kr(1118481);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new kr(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=Ut;this.normalScale=new Xn(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=j;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.flatShading=false;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.specular.copy(e.specular);this.shininess=e.shininess;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.flatShading=e.flatShading;this.fog=e.fog;return this}}class Dp extends Ur{constructor(e){super();this.isMeshToonMaterial=true;this.defines={TOON:""};this.type="MeshToonMaterial";this.color=new kr(16777215);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new kr(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=Ut;this.normalScale=new Xn(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.gradientMap=e.gradientMap;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.alphaMap=e.alphaMap;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.fog=e.fog;return this}}class Np extends Ur{constructor(e){super();this.isMeshNormalMaterial=true;this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=Ut;this.normalScale=new Xn(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.flatShading=false;this.setValues(e)}copy(e){super.copy(e);this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.flatShading=e.flatShading;return this}}class Op extends Ur{constructor(e){super();this.isMeshLambertMaterial=true;this.type="MeshLambertMaterial";this.color=new kr(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new kr(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=Ut;this.normalScale=new Xn(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=j;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.flatShading=false;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.flatShading=e.flatShading;this.fog=e.fog;return this}}class Up extends Ur{constructor(e){super();this.isMeshMatcapMaterial=true;this.defines={MATCAP:""};this.type="MeshMatcapMaterial";this.color=new kr(16777215);this.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=Ut;this.normalScale=new Xn(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.flatShading=false;this.fog=true;this.setValues(e)}copy(e){super.copy(e);this.defines={MATCAP:""};this.color.copy(e.color);this.matcap=e.matcap;this.map=e.map;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.alphaMap=e.alphaMap;this.flatShading=e.flatShading;this.fog=e.fog;return this}}class Fp extends yd{constructor(e){super();this.isLineDashedMaterial=true;this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(e)}copy(e){super.copy(e);this.scale=e.scale;this.dashSize=e.dashSize;this.gapSize=e.gapSize;return this}}function Bp(e,t,n){if(Gp(e)){return new e.constructor(e.subarray(t,n!==undefined?n:e.length))}return e.slice(t,n)}function zp(e,t,n){if(!e||!n&&e.constructor===t)return e;if(typeof t.BYTES_PER_ELEMENT==="number"){return new t(e)}return Array.prototype.slice.call(e)}function Gp(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function kp(e){function t(t,n){return e[t]-e[n]}const n=e.length;const i=new Array(n);for(let e=0;e!==n;++e)i[e]=e;i.sort(t);return i}function Hp(e,t,n){const i=e.length;const r=new e.constructor(i);for(let s=0,a=0;a!==i;++s){const i=n[s]*t;for(let n=0;n!==t;++n){r[a++]=e[i+n]}}return r}function Vp(e,t,n,i){let r=1,s=e[0];while(s!==undefined&&s[i]===undefined){s=e[r++]}if(s===undefined)return;let a=s[i];if(a===undefined)return;if(Array.isArray(a)){do{a=s[i];if(a!==undefined){t.push(s.time);n.push.apply(n,a)}s=e[r++]}while(s!==undefined)}else if(a.toArray!==undefined){do{a=s[i];if(a!==undefined){t.push(s.time);a.toArray(n,n.length)}s=e[r++]}while(s!==undefined)}else{do{a=s[i];if(a!==undefined){t.push(s.time);n.push(a)}s=e[r++]}while(s!==undefined)}}function Wp(e,t,n,i,r=30){const s=e.clone();s.name=t;const a=[];for(let e=0;e<s.tracks.length;++e){const t=s.tracks[e];const o=t.getValueSize();const l=[];const c=[];for(let e=0;e<t.times.length;++e){const s=t.times[e]*r;if(s<n||s>=i)continue;l.push(t.times[e]);for(let n=0;n<o;++n){c.push(t.values[e*o+n])}}if(l.length===0)continue;t.times=zp(l,t.times.constructor);t.values=zp(c,t.values.constructor);a.push(t)}s.tracks=a;let o=Infinity;for(let e=0;e<s.tracks.length;++e){if(o>s.tracks[e].times[0]){o=s.tracks[e].times[0]}}for(let e=0;e<s.tracks.length;++e){s.tracks[e].shift(-1*o)}s.resetDuration();return s}function Xp(e,t=0,n=e,i=30){if(i<=0)i=30;const r=n.tracks.length;const s=t/i;for(let t=0;t<r;++t){const i=n.tracks[t];const r=i.ValueTypeName;if(r==="bool"||r==="string")continue;const a=e.tracks.find(function(e){return e.name===i.name&&e.ValueTypeName===r});if(a===undefined)continue;let o=0;const l=i.getValueSize();if(i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){o=l/3}let c=0;const u=a.getValueSize();if(a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){c=u/3}const h=i.times.length-1;let d;if(s<=i.times[0]){const e=o;const t=l-o;d=Bp(i.values,e,t)}else if(s>=i.times[h]){const e=h*l+o;const t=e+l-o;d=Bp(i.values,e,t)}else{const e=i.createInterpolant();const t=o;const n=l-o;e.evaluate(s);d=Bp(e.resultBuffer,t,n)}if(r==="quaternion"){const e=(new $n).fromArray(d).normalize().conjugate();e.toArray(d)}const f=a.times.length;for(let e=0;e<f;++e){const t=e*u+c;if(r==="quaternion"){$n.multiplyQuaternionsFlat(a.values,t,d,0,a.values,t)}else{const e=u-c*2;for(let n=0;n<e;++n){a.values[t+n]-=d[n]}}}}e.blendMode=Rt;return e}const jp={arraySlice:Bp,convertArray:zp,isTypedArray:Gp,getKeyframeOrder:kp,sortedArray:Hp,flattenJSON:Vp,subclip:Wp,makeClipAdditive:Xp};class qp{constructor(e,t,n,i){this.parameterPositions=e;this._cachedIndex=0;this.resultBuffer=i!==undefined?i:new t.constructor(n);this.sampleValues=t;this.valueSize=n;this.settings=null;this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let s=n+2;;){if(i===undefined){if(e<r)break i;n=t.length;this._cachedIndex=n;return this.copySampleValue_(n-1)}if(n===s)break;r=i;i=t[++n];if(e<i){break t}}s=t.length;break n}if(!(e>=r)){const a=t[1];if(e<a){n=2;r=a}for(let s=n-2;;){if(r===undefined){this._cachedIndex=0;return this.copySampleValue_(0)}if(n===s)break;i=r;r=t[--n-1];if(e>=r){break t}}s=n;n=0;break n}break e}while(n<s){const i=n+s>>>1;if(e<t[i]){s=i}else{n=i+1}}i=t[n];r=t[n-1];if(r===undefined){this._cachedIndex=0;return this.copySampleValue_(0)}if(i===undefined){n=t.length;this._cachedIndex=n;return this.copySampleValue_(n-1)}}this._cachedIndex=n;this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let e=0;e!==i;++e){t[e]=n[r+e]}return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Yp extends qp{constructor(e,t,n,i){super(e,t,n,i);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;this.DefaultSettings_={endingStart:Tt,endingEnd:Tt}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,a=i[r],o=i[s];if(a===undefined){switch(this.getSettings_().endingStart){case wt:r=e;a=2*t-n;break;case Et:r=i.length-2;a=t+i[r]-i[r+1];break;default:r=e;a=n}}if(o===undefined){switch(this.getSettings_().endingEnd){case wt:s=e;o=2*n-t;break;case Et:s=1;o=n+i[1]-i[0];break;default:s=e-1;o=t}}const l=(n-t)*.5,c=this.valueSize;this._weightPrev=l/(t-a);this._weightNext=l/(o-n);this._offsetPrev=r*c;this._offsetNext=s*c}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,d=this._weightNext,f=(n-t)/(i-t),p=f*f,m=p*f;const g=-h*m+2*h*p-h*f;const _=(1+h)*m+(-1.5-2*h)*p+(-.5+h)*f+1;const x=(-1-d)*m+(1.5+d)*p+.5*f;const y=d*m-d*p;for(let e=0;e!==a;++e){r[e]=g*s[c+e]+_*s[l+e]+x*s[o+e]+y*s[u+e]}return r}}class Zp extends qp{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,c=(n-t)/(i-t),u=1-c;for(let e=0;e!==a;++e){r[e]=s[l+e]*u+s[o+e]*c}return r}}class Jp extends qp{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Kp{constructor(e,t,n,i){if(e===undefined)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===undefined||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e;this.times=zp(t,this.TimeBufferType);this.values=zp(n,this.ValueBufferType);this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON){n=t.toJSON(e)}else{n={name:e.name,times:zp(e.times,Array),values:zp(e.values,Array)};const t=e.getInterpolation();if(t!==e.DefaultInterpolation){n.interpolation=t}}n.type=e.ValueTypeName;return n}InterpolantFactoryMethodDiscrete(e){return new Jp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Zp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Yp(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Mt:t=this.InterpolantFactoryMethodDiscrete;break;case bt:t=this.InterpolantFactoryMethodLinear;break;case St:t=this.InterpolantFactoryMethodSmooth;break}if(t===undefined){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){if(e!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation)}else{throw new Error(t)}}console.warn("THREE.KeyframeTrack:",t);return this}this.createInterpolant=t;return this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Mt;case this.InterpolantFactoryMethodLinear:return bt;case this.InterpolantFactoryMethodSmooth:return St}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n){t[n]+=e}}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n){t[n]*=e}}return this}trim(e,t){const n=this.times,i=n.length;let r=0,s=i-1;while(r!==i&&n[r]<e){++r}while(s!==-1&&n[s]>t){--s}++s;if(r!==0||s!==i){if(r>=s){s=Math.max(s,1);r=s-1}const e=this.getValueSize();this.times=Bp(n,r,s);this.values=Bp(this.values,r*e,s*e)}return this}validate(){let e=true;const t=this.getValueSize();if(t-Math.floor(t)!==0){console.error("THREE.KeyframeTrack: Invalid value size in track.",this);e=false}const n=this.times,i=this.values,r=n.length;if(r===0){console.error("THREE.KeyframeTrack: Track is empty.",this);e=false}let s=null;for(let t=0;t!==r;t++){const i=n[t];if(typeof i==="number"&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,i);e=false;break}if(s!==null&&s>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,i,s);e=false;break}s=i}if(i!==undefined){if(Gp(i)){for(let t=0,n=i.length;t!==n;++t){const n=i[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n);e=false;break}}}}return e}optimize(){const e=Bp(this.times),t=Bp(this.values),n=this.getValueSize(),i=this.getInterpolation()===St,r=e.length-1;let s=1;for(let a=1;a<r;++a){let r=false;const o=e[a];const l=e[a+1];if(o!==l&&(a!==1||o!==e[0])){if(!i){const e=a*n,i=e-n,s=e+n;for(let a=0;a!==n;++a){const n=t[e+a];if(n!==t[i+a]||n!==t[s+a]){r=true;break}}}else{r=true}}if(r){if(a!==s){e[s]=e[a];const i=a*n,r=s*n;for(let e=0;e!==n;++e){t[r+e]=t[i+e]}}++s}}if(r>0){e[s]=e[r];for(let e=r*n,i=s*n,a=0;a!==n;++a){t[i+a]=t[e+a]}++s}if(s!==e.length){this.times=Bp(e,0,s);this.values=Bp(t,0,s*n)}else{this.times=e;this.values=t}return this}clone(){const e=Bp(this.times,0);const t=Bp(this.values,0);const n=this.constructor;const i=new n(this.name,e,t);i.createInterpolant=this.createInterpolant;return i}}Kp.prototype.TimeBufferType=Float32Array;Kp.prototype.ValueBufferType=Float32Array;Kp.prototype.DefaultInterpolation=bt;class $p extends Kp{}$p.prototype.ValueTypeName="bool";$p.prototype.ValueBufferType=Array;$p.prototype.DefaultInterpolation=Mt;$p.prototype.InterpolantFactoryMethodLinear=undefined;$p.prototype.InterpolantFactoryMethodSmooth=undefined;class Qp extends Kp{}Qp.prototype.ValueTypeName="color";class em extends Kp{}em.prototype.ValueTypeName="number";class tm extends qp{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(n-t)/(i-t);let l=e*a;for(let e=l+a;l!==e;l+=4){$n.slerpFlat(r,0,s,l-a,s,l,o)}return r}}class nm extends Kp{InterpolantFactoryMethodLinear(e){return new tm(this.times,this.values,this.getValueSize(),e)}}nm.prototype.ValueTypeName="quaternion";nm.prototype.DefaultInterpolation=bt;nm.prototype.InterpolantFactoryMethodSmooth=undefined;class im extends Kp{}im.prototype.ValueTypeName="string";im.prototype.ValueBufferType=Array;im.prototype.DefaultInterpolation=Mt;im.prototype.InterpolantFactoryMethodLinear=undefined;im.prototype.InterpolantFactoryMethodSmooth=undefined;class rm extends Kp{}rm.prototype.ValueTypeName="vector";class sm{constructor(e,t=-1,n,i=At){this.name=e;this.tracks=n;this.duration=t;this.blendMode=i;this.uuid=bn();if(this.duration<0){this.resetDuration()}}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let e=0,r=n.length;e!==r;++e){t.push(om(n[e]).scale(i))}const r=new this(e.name,e.duration,t,e.blendMode);r.uuid=e.uuid;return r}static toJSON(e){const t=[],n=e.tracks;const i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,i=n.length;e!==i;++e){t.push(Kp.toJSON(n[e]))}return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length;const s=[];for(let e=0;e<r;e++){let a=[];let o=[];a.push((e+r-1)%r,e,(e+1)%r);o.push(0,1,0);const l=kp(a);a=Hp(a,1,l);o=Hp(o,1,l);if(!i&&a[0]===0){a.push(r);o.push(o[0])}s.push(new em(".morphTargetInfluences["+t[e].name+"]",a,o).scale(1/n))}return new this(e,-1,s)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const t=e;n=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<n.length;e++){if(n[e].name===t){return n[e]}}return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={};const r=/^([\w-]*?)([\d]+)$/;for(let t=0,n=e.length;t<n;t++){const n=e[t];const s=n.name.match(r);if(s&&s.length>1){const e=s[1];let t=i[e];if(!t){i[e]=t=[]}t.push(n)}}const s=[];for(const e in i){s.push(this.CreateFromMorphTargetSequence(e,i[e],t,n))}return s}static parseAnimation(e,t){if(!e){console.error("THREE.AnimationClip: No animation in JSONLoader data.");return null}const n=function(e,t,n,i,r){if(n.length!==0){const s=[];const a=[];Vp(n,s,a,i);if(s.length!==0){r.push(new e(t,s,a))}}};const i=[];const r=e.name||"default";const s=e.fps||30;const a=e.blendMode;let o=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const r=l[e].keys;if(!r||r.length===0)continue;if(r[0].morphTargets){const e={};let t;for(t=0;t<r.length;t++){if(r[t].morphTargets){for(let n=0;n<r[t].morphTargets.length;n++){e[r[t].morphTargets[n]]=-1}}}for(const n in e){const e=[];const s=[];for(let i=0;i!==r[t].morphTargets.length;++i){const i=r[t];e.push(i.time);s.push(i.morphTarget===n?1:0)}i.push(new em(".morphTargetInfluence["+n+"]",e,s))}o=e.length*s}else{const s=".bones["+t[e].name+"]";n(rm,s+".position",r,"pos",i);n(nm,s+".quaternion",r,"rot",i);n(rm,s+".scale",r,"scl",i)}}if(i.length===0){return null}const c=new this(r,o,i,a);return c}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const e=this.tracks[n];t=Math.max(t,e.times[e.times.length-1])}this.duration=t;return this}trim(){for(let e=0;e<this.tracks.length;e++){this.tracks[e].trim(0,this.duration)}return this}validate(){let e=true;for(let t=0;t<this.tracks.length;t++){e=e&&this.tracks[t].validate()}return e}optimize(){for(let e=0;e<this.tracks.length;e++){this.tracks[e].optimize()}return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++){e.push(this.tracks[t].clone())}return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function am(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return em;case"vector":case"vector2":case"vector3":case"vector4":return rm;case"color":return Qp;case"quaternion":return nm;case"bool":case"boolean":return $p;case"string":return im}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function om(e){if(e.type===undefined){throw new Error("THREE.KeyframeTrack: track type undefined, can not parse")}const t=am(e.type);if(e.times===undefined){const t=[],n=[];Vp(e.keys,t,n,"value");e.times=t;e.values=n}if(t.parse!==undefined){return t.parse(e)}else{return new t(e.name,e.times,e.values,e.interpolation)}}const lm={enabled:false,files:{},add:function(e,t){if(this.enabled===false)return;this.files[e]=t},get:function(e){if(this.enabled===false)return;return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class cm{constructor(e,t,n){const i=this;let r=false;let s=0;let a=0;let o=undefined;const l=[];this.onStart=undefined;this.onLoad=e;this.onProgress=t;this.onError=n;this.itemStart=function(e){a++;if(r===false){if(i.onStart!==undefined){i.onStart(e,s,a)}}r=true};this.itemEnd=function(e){s++;if(i.onProgress!==undefined){i.onProgress(e,s,a)}if(s===a){r=false;if(i.onLoad!==undefined){i.onLoad()}}};this.itemError=function(e){if(i.onError!==undefined){i.onError(e)}};this.resolveURL=function(e){if(o){return o(e)}return e};this.setURLModifier=function(e){o=e;return this};this.addHandler=function(e,t){l.push(e,t);return this};this.removeHandler=function(e){const t=l.indexOf(e);if(t!==-1){l.splice(t,2)}return this};this.getHandler=function(e){for(let t=0,n=l.length;t<n;t+=2){const n=l[t];const i=l[t+1];if(n.global)n.lastIndex=0;if(n.test(e)){return i}}return null}}}const um=new cm;class hm{constructor(e){this.manager=e!==undefined?e:um;this.crossOrigin="anonymous";this.withCredentials=false;this.path="";this.resourcePath="";this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){this.crossOrigin=e;return this}setWithCredentials(e){this.withCredentials=e;return this}setPath(e){this.path=e;return this}setResourcePath(e){this.resourcePath=e;return this}setRequestHeader(e){this.requestHeader=e;return this}}const dm={};class fm extends Error{constructor(e,t){super(e);this.response=t}}class pm extends hm{constructor(e){super(e)}load(e,t,n,i){if(e===undefined)e="";if(this.path!==undefined)e=this.path+e;e=this.manager.resolveURL(e);const r=lm.get(e);if(r!==undefined){this.manager.itemStart(e);setTimeout(()=>{if(t)t(r);this.manager.itemEnd(e)},0);return r}if(dm[e]!==undefined){dm[e].push({onLoad:t,onProgress:n,onError:i});return}dm[e]=[];dm[e].push({onLoad:t,onProgress:n,onError:i});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});const a=this.mimeType;const o=this.responseType;fetch(s).then(t=>{if(t.status===200||t.status===0){if(t.status===0){console.warn("THREE.FileLoader: HTTP Status 0 received.")}if(typeof ReadableStream==="undefined"||t.body===undefined||t.body.getReader===undefined){return t}const n=dm[e];const i=t.body.getReader();const r=t.headers.get("Content-Length")||t.headers.get("X-File-Size");const s=r?parseInt(r):0;const a=s!==0;let o=0;const l=new ReadableStream({start(e){t();function t(){i.read().then(({done:i,value:r})=>{if(i){e.close()}else{o+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let e=0,t=n.length;e<t;e++){const t=n[e];if(t.onProgress)t.onProgress(i)}e.enqueue(r);t()}})}}});return new Response(l)}else{throw new fm(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{const t=new DOMParser;return t.parseFromString(e,a)});case"json":return e.json();default:if(a===undefined){return e.text()}else{const t=/charset="?([^;"\s]*)"?/i;const n=t.exec(a);const i=n&&n[1]?n[1].toLowerCase():undefined;const r=new TextDecoder(i);return e.arrayBuffer().then(e=>r.decode(e))}}}).then(t=>{lm.add(e,t);const n=dm[e];delete dm[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];if(i.onLoad)i.onLoad(t)}}).catch(t=>{const n=dm[e];if(n===undefined){this.manager.itemError(e);throw t}delete dm[e];for(let e=0,i=n.length;e<i;e++){const i=n[e];if(i.onError)i.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)});this.manager.itemStart(e)}setResponseType(e){this.responseType=e;return this}setMimeType(e){this.mimeType=e;return this}}class mm extends hm{constructor(e){super(e)}load(e,t,n,i){const r=this;const s=new pm(this.manager);s.setPath(this.path);s.setRequestHeader(this.requestHeader);s.setWithCredentials(this.withCredentials);s.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(t){if(i){i(t)}else{console.error(t)}r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=sm.parse(e[n]);t.push(i)}return t}}class gm extends hm{constructor(e){super(e)}load(e,t,n,i){const r=this;const s=[];const a=new zd;const o=new pm(this.manager);o.setPath(this.path);o.setResponseType("arraybuffer");o.setRequestHeader(this.requestHeader);o.setWithCredentials(r.withCredentials);let l=0;function c(c){o.load(e[c],function(e){const n=r.parse(e,true);s[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps};l+=1;if(l===6){if(n.mipmapCount===1)a.minFilter=me;a.image=s;a.format=n.format;a.needsUpdate=true;if(t)t(a)}},n,i)}if(Array.isArray(e)){for(let t=0,n=e.length;t<n;++t){c(t)}}else{o.load(e,function(e){const n=r.parse(e,true);if(n.isCubemap){const e=n.mipmaps.length/n.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++){s[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]);s[t].format=n.format;s[t].width=n.width;s[t].height=n.height}}a.image=s}else{a.image.width=n.width;a.image.height=n.height;a.mipmaps=n.mipmaps}if(n.mipmapCount===1){a.minFilter=me}a.format=n.format;a.needsUpdate=true;if(t)t(a)},n,i)}return a}}class _m extends hm{constructor(e){super(e)}load(e,t,n,i){if(this.path!==undefined)e=this.path+e;e=this.manager.resolveURL(e);const r=this;const s=lm.get(e);if(s!==undefined){r.manager.itemStart(e);setTimeout(function(){if(t)t(s);r.manager.itemEnd(e)},0);return s}const a=Kn("img");function o(){c();lm.add(e,this);if(t)t(this);r.manager.itemEnd(e)}function l(t){c();if(i)i(t);r.manager.itemError(e);r.manager.itemEnd(e)}function c(){a.removeEventListener("load",o,false);a.removeEventListener("error",l,false)}a.addEventListener("load",o,false);a.addEventListener("error",l,false);if(e.slice(0,5)!=="data:"){if(this.crossOrigin!==undefined)a.crossOrigin=this.crossOrigin}r.manager.itemStart(e);a.src=e;return a}}class xm extends hm{constructor(e){super(e)}load(e,t,n,i){const r=new Hs;const s=new _m(this.manager);s.setCrossOrigin(this.crossOrigin);s.setPath(this.path);let a=0;function o(n){s.load(e[n],function(e){r.images[n]=e;a++;if(a===6){r.needsUpdate=true;if(t)t(r)}},undefined,i)}for(let t=0;t<e.length;++t){o(t)}return r}}class ym extends hm{constructor(e){super(e)}load(e,t,n,i){const r=this;const s=new ld;const a=new pm(this.manager);a.setResponseType("arraybuffer");a.setRequestHeader(this.requestHeader);a.setPath(this.path);a.setWithCredentials(r.withCredentials);a.load(e,function(e){const n=r.parse(e);if(!n)return;if(n.image!==undefined){s.image=n.image}else if(n.data!==undefined){s.image.width=n.width;s.image.height=n.height;s.image.data=n.data}s.wrapS=n.wrapS!==undefined?n.wrapS:le;s.wrapT=n.wrapT!==undefined?n.wrapT:le;s.magFilter=n.magFilter!==undefined?n.magFilter:me;s.minFilter=n.minFilter!==undefined?n.minFilter:me;s.anisotropy=n.anisotropy!==undefined?n.anisotropy:1;if(n.encoding!==undefined){s.encoding=n.encoding}if(n.flipY!==undefined){s.flipY=n.flipY}if(n.format!==undefined){s.format=n.format}if(n.type!==undefined){s.type=n.type}if(n.mipmaps!==undefined){s.mipmaps=n.mipmaps;s.minFilter=xe}if(n.mipmapCount===1){s.minFilter=me}if(n.generateMipmaps!==undefined){s.generateMipmaps=n.generateMipmaps}s.needsUpdate=true;if(t)t(s,n)},n,i);return s}}class vm extends hm{constructor(e){super(e)}load(e,t,n,i){const r=new _i;const s=new _m(this.manager);s.setCrossOrigin(this.crossOrigin);s.setPath(this.path);s.load(e,function(e){r.image=e;r.needsUpdate=true;if(t!==undefined){t(r)}},n,i);return r}}class Mm extends Sr{constructor(e,t=1){super();this.isLight=true;this.type="Light";this.color=new kr(e);this.intensity=t}dispose(){}copy(e,t){super.copy(e,t);this.color.copy(e.color);this.intensity=e.intensity;return this}toJSON(e){const t=super.toJSON(e);t.object.color=this.color.getHex();t.object.intensity=this.intensity;if(this.groundColor!==undefined)t.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)t.object.distance=this.distance;if(this.angle!==undefined)t.object.angle=this.angle;if(this.decay!==undefined)t.object.decay=this.decay;if(this.penumbra!==undefined)t.object.penumbra=this.penumbra;if(this.shadow!==undefined)t.object.shadow=this.shadow.toJSON();return t}}class bm extends Mm{constructor(e,t,n){super(e,n);this.isHemisphereLight=true;this.type="HemisphereLight";this.position.copy(Sr.DEFAULT_UP);this.updateMatrix();this.groundColor=new kr(t)}copy(e,t){super.copy(e,t);this.groundColor.copy(e.groundColor);return this}}const Sm=new $i;const Tm=new Qn;const wm=new Qn;class Em{constructor(e){this.camera=e;this.bias=0;this.normalBias=0;this.radius=1;this.blurSamples=8;this.mapSize=new Xn(512,512);this.map=null;this.mapPass=null;this.matrix=new $i;this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Js;this._frameExtents=new Xn(1,1);this._viewportCount=1;this._viewports=[new xi(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera;const n=this.matrix;Tm.setFromMatrixPosition(e.matrixWorld);t.position.copy(Tm);wm.setFromMatrixPosition(e.target.matrixWorld);t.lookAt(wm);t.updateMatrixWorld();Sm.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);this._frustum.setFromProjectionMatrix(Sm);n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);n.multiply(Sm)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){if(this.map){this.map.dispose()}if(this.mapPass){this.mapPass.dispose()}}copy(e){this.camera=e.camera.clone();this.bias=e.bias;this.radius=e.radius;this.mapSize.copy(e.mapSize);return this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};if(this.bias!==0)e.bias=this.bias;if(this.normalBias!==0)e.normalBias=this.normalBias;if(this.radius!==1)e.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)e.mapSize=this.mapSize.toArray();e.camera=this.camera.toJSON(false).object;delete e.camera.matrix;return e}}class Am extends Em{constructor(){super(new Bs(50,1,.5,500));this.isSpotLightShadow=true;this.focus=1}updateMatrices(e){const t=this.camera;const n=Mn*2*e.angle*this.focus;const i=this.mapSize.width/this.mapSize.height;const r=e.distance||t.far;if(n!==t.fov||i!==t.aspect||r!==t.far){t.fov=n;t.aspect=i;t.far=r;t.updateProjectionMatrix()}super.updateMatrices(e)}copy(e){super.copy(e);this.focus=e.focus;return this}}class Rm extends Mm{constructor(e,t,n=0,i=Math.PI/3,r=0,s=2){super(e,t);this.isSpotLight=true;this.type="SpotLight";this.position.copy(Sr.DEFAULT_UP);this.updateMatrix();this.target=new Sr;this.distance=n;this.angle=i;this.penumbra=r;this.decay=s;this.map=null;this.shadow=new Am}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){super.copy(e,t);this.distance=e.distance;this.angle=e.angle;this.penumbra=e.penumbra;this.decay=e.decay;this.target=e.target.clone();this.shadow=e.shadow.clone();return this}}const Cm=new $i;const Lm=new Qn;const Pm=new Qn;class Im extends Em{constructor(){super(new Bs(90,1,.5,500));this.isPointLightShadow=true;this._frameExtents=new Xn(4,2);this._viewportCount=6;this._viewports=[new xi(2,1,1,1),new xi(0,1,1,1),new xi(3,1,1,1),new xi(1,1,1,1),new xi(3,0,1,1),new xi(1,0,1,1)];this._cubeDirections=[new Qn(1,0,0),new Qn(-1,0,0),new Qn(0,0,1),new Qn(0,0,-1),new Qn(0,1,0),new Qn(0,-1,0)];this._cubeUps=[new Qn(0,1,0),new Qn(0,1,0),new Qn(0,1,0),new Qn(0,1,0),new Qn(0,0,1),new Qn(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera;const i=this.matrix;const r=e.distance||n.far;if(r!==n.far){n.far=r;n.updateProjectionMatrix()}Lm.setFromMatrixPosition(e.matrixWorld);n.position.copy(Lm);Pm.copy(n.position);Pm.add(this._cubeDirections[t]);n.up.copy(this._cubeUps[t]);n.lookAt(Pm);n.updateMatrixWorld();i.makeTranslation(-Lm.x,-Lm.y,-Lm.z);Cm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse);this._frustum.setFromProjectionMatrix(Cm)}}class Dm extends Mm{constructor(e,t,n=0,i=2){super(e,t);this.isPointLight=true;this.type="PointLight";this.distance=n;this.decay=i;this.shadow=new Im}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){super.copy(e,t);this.distance=e.distance;this.decay=e.decay;this.shadow=e.shadow.clone();return this}}class Nm extends Em{constructor(){super(new Wl(-5,5,5,-5,.5,500));this.isDirectionalLightShadow=true}}class Om extends Mm{constructor(e,t){super(e,t);this.isDirectionalLight=true;this.type="DirectionalLight";this.position.copy(Sr.DEFAULT_UP);this.updateMatrix();this.target=new Sr;this.shadow=new Nm}dispose(){this.shadow.dispose()}copy(e){super.copy(e);this.target=e.target.clone();this.shadow=e.shadow.clone();return this}}class Um extends Mm{constructor(e,t){super(e,t);this.isAmbientLight=true;this.type="AmbientLight"}}class Fm extends Mm{constructor(e,t,n=10,i=10){super(e,t);this.isRectAreaLight=true;this.type="RectAreaLight";this.width=n;this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){super.copy(e);this.width=e.width;this.height=e.height;return this}toJSON(e){const t=super.toJSON(e);t.object.width=this.width;t.object.height=this.height;return t}}class Bm{constructor(){this.isSphericalHarmonics3=true;this.coefficients=[];for(let e=0;e<9;e++){this.coefficients.push(new Qn)}}set(e){for(let t=0;t<9;t++){this.coefficients[t].copy(e[t])}return this}zero(){for(let e=0;e<9;e++){this.coefficients[e].set(0,0,0)}return this}getAt(e,t){const n=e.x,i=e.y,r=e.z;const s=this.coefficients;t.copy(s[0]).multiplyScalar(.282095);t.addScaledVector(s[1],.488603*i);t.addScaledVector(s[2],.488603*r);t.addScaledVector(s[3],.488603*n);t.addScaledVector(s[4],1.092548*(n*i));t.addScaledVector(s[5],1.092548*(i*r));t.addScaledVector(s[6],.315392*(3*r*r-1));t.addScaledVector(s[7],1.092548*(n*r));t.addScaledVector(s[8],.546274*(n*n-i*i));return t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z;const s=this.coefficients;t.copy(s[0]).multiplyScalar(.886227);t.addScaledVector(s[1],2*.511664*i);t.addScaledVector(s[2],2*.511664*r);t.addScaledVector(s[3],2*.511664*n);t.addScaledVector(s[4],2*.429043*n*i);t.addScaledVector(s[5],2*.429043*i*r);t.addScaledVector(s[6],.743125*r*r-.247708);t.addScaledVector(s[7],2*.429043*n*r);t.addScaledVector(s[8],.429043*(n*n-i*i));return t}add(e){for(let t=0;t<9;t++){this.coefficients[t].add(e.coefficients[t])}return this}addScaledSH(e,t){for(let n=0;n<9;n++){this.coefficients[n].addScaledVector(e.coefficients[n],t)}return this}scale(e){for(let t=0;t<9;t++){this.coefficients[t].multiplyScalar(e)}return this}lerp(e,t){for(let n=0;n<9;n++){this.coefficients[n].lerp(e.coefficients[n],t)}return this}equals(e){for(let t=0;t<9;t++){if(!this.coefficients[t].equals(e.coefficients[t])){return false}}return true}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++){n[i].fromArray(e,t+i*3)}return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++){n[i].toArray(e,t+i*3)}return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095;t[1]=.488603*i;t[2]=.488603*r;t[3]=.488603*n;t[4]=1.092548*n*i;t[5]=1.092548*i*r;t[6]=.315392*(3*r*r-1);t[7]=1.092548*n*r;t[8]=.546274*(n*n-i*i)}}class zm extends Mm{constructor(e=new Bm,t=1){super(undefined,t);this.isLightProbe=true;this.sh=e}copy(e){super.copy(e);this.sh.copy(e.sh);return this}fromJSON(e){this.intensity=e.intensity;this.sh.fromArray(e.sh);return this}toJSON(e){const t=super.toJSON(e);t.object.sh=this.sh.toArray();return t}}class Gm extends hm{constructor(e){super(e);this.textures={}}load(e,t,n,i){const r=this;const s=new pm(r.manager);s.setPath(r.path);s.setRequestHeader(r.requestHeader);s.setWithCredentials(r.withCredentials);s.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(t){if(i){i(t)}else{console.error(t)}r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(e){if(t[e]===undefined){console.warn("THREE.MaterialLoader: Undefined texture",e)}return t[e]}const i=Gm.createMaterialFromType(e.type);if(e.uuid!==undefined)i.uuid=e.uuid;if(e.name!==undefined)i.name=e.name;if(e.color!==undefined&&i.color!==undefined)i.color.setHex(e.color);if(e.roughness!==undefined)i.roughness=e.roughness;if(e.metalness!==undefined)i.metalness=e.metalness;if(e.sheen!==undefined)i.sheen=e.sheen;if(e.sheenColor!==undefined)i.sheenColor=(new kr).setHex(e.sheenColor);if(e.sheenRoughness!==undefined)i.sheenRoughness=e.sheenRoughness;if(e.emissive!==undefined&&i.emissive!==undefined)i.emissive.setHex(e.emissive);if(e.specular!==undefined&&i.specular!==undefined)i.specular.setHex(e.specular);if(e.specularIntensity!==undefined)i.specularIntensity=e.specularIntensity;if(e.specularColor!==undefined&&i.specularColor!==undefined)i.specularColor.setHex(e.specularColor);if(e.shininess!==undefined)i.shininess=e.shininess;if(e.clearcoat!==undefined)i.clearcoat=e.clearcoat;if(e.clearcoatRoughness!==undefined)i.clearcoatRoughness=e.clearcoatRoughness;if(e.iridescence!==undefined)i.iridescence=e.iridescence;if(e.iridescenceIOR!==undefined)i.iridescenceIOR=e.iridescenceIOR;if(e.iridescenceThicknessRange!==undefined)i.iridescenceThicknessRange=e.iridescenceThicknessRange;if(e.transmission!==undefined)i.transmission=e.transmission;if(e.thickness!==undefined)i.thickness=e.thickness;if(e.attenuationDistance!==undefined)i.attenuationDistance=e.attenuationDistance;if(e.attenuationColor!==undefined&&i.attenuationColor!==undefined)i.attenuationColor.setHex(e.attenuationColor);if(e.fog!==undefined)i.fog=e.fog;if(e.flatShading!==undefined)i.flatShading=e.flatShading;if(e.blending!==undefined)i.blending=e.blending;if(e.combine!==undefined)i.combine=e.combine;if(e.side!==undefined)i.side=e.side;if(e.shadowSide!==undefined)i.shadowSide=e.shadowSide;if(e.opacity!==undefined)i.opacity=e.opacity;if(e.transparent!==undefined)i.transparent=e.transparent;if(e.alphaTest!==undefined)i.alphaTest=e.alphaTest;if(e.depthTest!==undefined)i.depthTest=e.depthTest;if(e.depthWrite!==undefined)i.depthWrite=e.depthWrite;if(e.colorWrite!==undefined)i.colorWrite=e.colorWrite;if(e.stencilWrite!==undefined)i.stencilWrite=e.stencilWrite;if(e.stencilWriteMask!==undefined)i.stencilWriteMask=e.stencilWriteMask;if(e.stencilFunc!==undefined)i.stencilFunc=e.stencilFunc;if(e.stencilRef!==undefined)i.stencilRef=e.stencilRef;if(e.stencilFuncMask!==undefined)i.stencilFuncMask=e.stencilFuncMask;if(e.stencilFail!==undefined)i.stencilFail=e.stencilFail;if(e.stencilZFail!==undefined)i.stencilZFail=e.stencilZFail;if(e.stencilZPass!==undefined)i.stencilZPass=e.stencilZPass;if(e.wireframe!==undefined)i.wireframe=e.wireframe;if(e.wireframeLinewidth!==undefined)i.wireframeLinewidth=e.wireframeLinewidth;if(e.wireframeLinecap!==undefined)i.wireframeLinecap=e.wireframeLinecap;if(e.wireframeLinejoin!==undefined)i.wireframeLinejoin=e.wireframeLinejoin;if(e.rotation!==undefined)i.rotation=e.rotation;if(e.linewidth!==1)i.linewidth=e.linewidth;if(e.dashSize!==undefined)i.dashSize=e.dashSize;if(e.gapSize!==undefined)i.gapSize=e.gapSize;if(e.scale!==undefined)i.scale=e.scale;if(e.polygonOffset!==undefined)i.polygonOffset=e.polygonOffset;if(e.polygonOffsetFactor!==undefined)i.polygonOffsetFactor=e.polygonOffsetFactor;if(e.polygonOffsetUnits!==undefined)i.polygonOffsetUnits=e.polygonOffsetUnits;if(e.dithering!==undefined)i.dithering=e.dithering;if(e.alphaToCoverage!==undefined)i.alphaToCoverage=e.alphaToCoverage;if(e.premultipliedAlpha!==undefined)i.premultipliedAlpha=e.premultipliedAlpha;if(e.forceSinglePass!==undefined)i.forceSinglePass=e.forceSinglePass;if(e.visible!==undefined)i.visible=e.visible;if(e.toneMapped!==undefined)i.toneMapped=e.toneMapped;if(e.userData!==undefined)i.userData=e.userData;if(e.vertexColors!==undefined){if(typeof e.vertexColors==="number"){i.vertexColors=e.vertexColors>0?true:false}else{i.vertexColors=e.vertexColors}}if(e.uniforms!==undefined){for(const t in e.uniforms){const r=e.uniforms[t];i.uniforms[t]={};switch(r.type){case"t":i.uniforms[t].value=n(r.value);break;case"c":i.uniforms[t].value=(new kr).setHex(r.value);break;case"v2":i.uniforms[t].value=(new Xn).fromArray(r.value);break;case"v3":i.uniforms[t].value=(new Qn).fromArray(r.value);break;case"v4":i.uniforms[t].value=(new xi).fromArray(r.value);break;case"m3":i.uniforms[t].value=(new jn).fromArray(r.value);break;case"m4":i.uniforms[t].value=(new $i).fromArray(r.value);break;default:i.uniforms[t].value=r.value}}}if(e.defines!==undefined)i.defines=e.defines;if(e.vertexShader!==undefined)i.vertexShader=e.vertexShader;if(e.fragmentShader!==undefined)i.fragmentShader=e.fragmentShader;if(e.glslVersion!==undefined)i.glslVersion=e.glslVersion;if(e.extensions!==undefined){for(const t in e.extensions){i.extensions[t]=e.extensions[t]}}if(e.size!==undefined)i.size=e.size;if(e.sizeAttenuation!==undefined)i.sizeAttenuation=e.sizeAttenuation;if(e.map!==undefined)i.map=n(e.map);if(e.matcap!==undefined)i.matcap=n(e.matcap);if(e.alphaMap!==undefined)i.alphaMap=n(e.alphaMap);if(e.bumpMap!==undefined)i.bumpMap=n(e.bumpMap);if(e.bumpScale!==undefined)i.bumpScale=e.bumpScale;if(e.normalMap!==undefined)i.normalMap=n(e.normalMap);if(e.normalMapType!==undefined)i.normalMapType=e.normalMapType;if(e.normalScale!==undefined){let t=e.normalScale;if(Array.isArray(t)===false){t=[t,t]}i.normalScale=(new Xn).fromArray(t)}if(e.displacementMap!==undefined)i.displacementMap=n(e.displacementMap);if(e.displacementScale!==undefined)i.displacementScale=e.displacementScale;if(e.displacementBias!==undefined)i.displacementBias=e.displacementBias;if(e.roughnessMap!==undefined)i.roughnessMap=n(e.roughnessMap);if(e.metalnessMap!==undefined)i.metalnessMap=n(e.metalnessMap);if(e.emissiveMap!==undefined)i.emissiveMap=n(e.emissiveMap);if(e.emissiveIntensity!==undefined)i.emissiveIntensity=e.emissiveIntensity;if(e.specularMap!==undefined)i.specularMap=n(e.specularMap);if(e.specularIntensityMap!==undefined)i.specularIntensityMap=n(e.specularIntensityMap);if(e.specularColorMap!==undefined)i.specularColorMap=n(e.specularColorMap);if(e.envMap!==undefined)i.envMap=n(e.envMap);if(e.envMapIntensity!==undefined)i.envMapIntensity=e.envMapIntensity;if(e.reflectivity!==undefined)i.reflectivity=e.reflectivity;if(e.refractionRatio!==undefined)i.refractionRatio=e.refractionRatio;if(e.lightMap!==undefined)i.lightMap=n(e.lightMap);if(e.lightMapIntensity!==undefined)i.lightMapIntensity=e.lightMapIntensity;if(e.aoMap!==undefined)i.aoMap=n(e.aoMap);if(e.aoMapIntensity!==undefined)i.aoMapIntensity=e.aoMapIntensity;if(e.gradientMap!==undefined)i.gradientMap=n(e.gradientMap);if(e.clearcoatMap!==undefined)i.clearcoatMap=n(e.clearcoatMap);if(e.clearcoatRoughnessMap!==undefined)i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap);if(e.clearcoatNormalMap!==undefined)i.clearcoatNormalMap=n(e.clearcoatNormalMap);if(e.clearcoatNormalScale!==undefined)i.clearcoatNormalScale=(new Xn).fromArray(e.clearcoatNormalScale);if(e.iridescenceMap!==undefined)i.iridescenceMap=n(e.iridescenceMap);if(e.iridescenceThicknessMap!==undefined)i.iridescenceThicknessMap=n(e.iridescenceThicknessMap);if(e.transmissionMap!==undefined)i.transmissionMap=n(e.transmissionMap);if(e.thicknessMap!==undefined)i.thicknessMap=n(e.thicknessMap);if(e.sheenColorMap!==undefined)i.sheenColorMap=n(e.sheenColorMap);if(e.sheenRoughnessMap!==undefined)i.sheenRoughnessMap=n(e.sheenRoughnessMap);return i}setTextures(e){this.textures=e;return this}static createMaterialFromType(e){const t={ShadowMaterial:Rp,SpriteMaterial:Uh,RawShaderMaterial:Cp,ShaderMaterial:Us,PointsMaterial:Ld,MeshPhysicalMaterial:Pp,MeshStandardMaterial:Lp,MeshPhongMaterial:Ip,MeshToonMaterial:Dp,MeshNormalMaterial:Np,MeshLambertMaterial:Op,MeshDepthMaterial:hh,MeshDistanceMaterial:dh,MeshBasicMaterial:Vr,MeshMatcapMaterial:Up,LineDashedMaterial:Fp,LineBasicMaterial:yd,Material:Ur};return new t[e]}}class km{static decodeText(e){if(typeof TextDecoder!=="undefined"){return(new TextDecoder).decode(e)}let t="";for(let n=0,i=e.length;n<i;n++){t+=String.fromCharCode(e[n])}try{return decodeURIComponent(escape(t))}catch(e){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");if(t===-1)return"./";return e.slice(0,t+1)}static resolveURL(e,t){if(typeof e!=="string"||e==="")return"";if(/^https?:\/\//i.test(t)&&/^\//.test(e)){t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")}if(/^(https?:)?\/\//i.test(e))return e;if(/^data:.*,.*$/i.test(e))return e;if(/^blob:.*$/i.test(e))return e;return t+e}}class Hm extends us{constructor(){super();this.isInstancedBufferGeometry=true;this.type="InstancedBufferGeometry";this.instanceCount=Infinity}copy(e){super.copy(e);this.instanceCount=e.instanceCount;return this}toJSON(){const e=super.toJSON();e.instanceCount=this.instanceCount;e.isInstancedBufferGeometry=true;return e}}class Vm extends hm{constructor(e){super(e)}load(e,t,n,i){const r=this;const s=new pm(r.manager);s.setPath(r.path);s.setRequestHeader(r.requestHeader);s.setWithCredentials(r.withCredentials);s.load(e,function(n){try{t(r.parse(JSON.parse(n)))}catch(t){if(i){i(t)}else{console.error(t)}r.manager.itemError(e)}},n,i)}parse(e){const t={};const n={};function i(e,n){if(t[n]!==undefined)return t[n];const i=e.interleavedBuffers;const s=i[n];const a=r(e,s.buffer);const o=Jn(s.type,a);const l=new Dh(o,s.stride);l.uuid=s.uuid;t[n]=l;return l}function r(e,t){if(n[t]!==undefined)return n[t];const i=e.arrayBuffers;const r=i[t];const s=new Uint32Array(r).buffer;n[t]=s;return s}const s=e.isInstancedBufferGeometry?new Hm:new us;const a=e.data.index;if(a!==undefined){const e=Jn(a.type,a.array);s.setIndex(new jr(e,1))}const o=e.data.attributes;for(const t in o){const n=o[t];let r;if(n.isInterleavedBufferAttribute){const t=i(e.data,n.data);r=new Oh(t,n.itemSize,n.offset,n.normalized)}else{const e=Jn(n.type,n.array);const t=n.isInstancedBufferAttribute?dd:jr;r=new t(e,n.itemSize,n.normalized)}if(n.name!==undefined)r.name=n.name;if(n.usage!==undefined)r.setUsage(n.usage);if(n.updateRange!==undefined){r.updateRange.offset=n.updateRange.offset;r.updateRange.count=n.updateRange.count}s.setAttribute(t,r)}const l=e.data.morphAttributes;if(l){for(const t in l){const n=l[t];const r=[];for(let t=0,s=n.length;t<s;t++){const s=n[t];let a;if(s.isInterleavedBufferAttribute){const t=i(e.data,s.data);a=new Oh(t,s.itemSize,s.offset,s.normalized)}else{const e=Jn(s.type,s.array);a=new jr(e,s.itemSize,s.normalized)}if(s.name!==undefined)a.name=s.name;r.push(a)}s.morphAttributes[t]=r}}const c=e.data.morphTargetsRelative;if(c){s.morphTargetsRelative=true}const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==undefined){for(let e=0,t=u.length;e!==t;++e){const t=u[e];s.addGroup(t.start,t.count,t.materialIndex)}}const h=e.data.boundingSphere;if(h!==undefined){const e=new Qn;if(h.center!==undefined){e.fromArray(h.center)}s.boundingSphere=new Vi(e,h.radius)}if(e.name)s.name=e.name;if(e.userData)s.userData=e.userData;return s}}class Wm extends hm{constructor(e){super(e)}load(e,t,n,i){const r=this;const s=this.path===""?km.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;const a=new pm(this.manager);a.setPath(this.path);a.setRequestHeader(this.requestHeader);a.setWithCredentials(this.withCredentials);a.load(e,function(n){let s=null;try{s=JSON.parse(n)}catch(t){if(i!==undefined)i(t);console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message);return}const a=s.metadata;if(a===undefined||a.type===undefined||a.type.toLowerCase()==="geometry"){if(i!==undefined)i(new Error("THREE.ObjectLoader: Can't load "+e));console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(s,t)},n,i)}async loadAsync(e,t){const n=this;const i=this.path===""?km.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new pm(this.manager);r.setPath(this.path);r.setRequestHeader(this.requestHeader);r.setWithCredentials(this.withCredentials);const s=await r.loadAsync(e,t);const a=JSON.parse(s);const o=a.metadata;if(o===undefined||o.type===undefined||o.type.toLowerCase()==="geometry"){throw new Error("THREE.ObjectLoader: Can't load "+e)}return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations);const i=this.parseShapes(e.shapes);const r=this.parseGeometries(e.geometries,i);const s=this.parseImages(e.images,function(){if(t!==undefined)t(l)});const a=this.parseTextures(e.textures,s);const o=this.parseMaterials(e.materials,a);const l=this.parseObject(e.object,r,o,a,n);const c=this.parseSkeletons(e.skeletons,l);this.bindSkeletons(l,c);if(t!==undefined){let e=false;for(const t in s){if(s[t].data instanceof HTMLImageElement){e=true;break}}if(e===false)t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations);const n=this.parseShapes(e.shapes);const i=this.parseGeometries(e.geometries,n);const r=await this.parseImagesAsync(e.images);const s=this.parseTextures(e.textures,r);const a=this.parseMaterials(e.materials,s);const o=this.parseObject(e.object,i,a,s,t);const l=this.parseSkeletons(e.skeletons,o);this.bindSkeletons(o,l);return o}parseShapes(e){const t={};if(e!==undefined){for(let n=0,i=e.length;n<i;n++){const i=(new Lf).fromJSON(e[n]);t[i.uuid]=i}}return t}parseSkeletons(e,t){const n={};const i={};t.traverse(function(e){if(e.isBone)i[e.uuid]=e});if(e!==undefined){for(let t=0,r=e.length;t<r;t++){const r=(new hd).fromJSON(e[t],i);n[r.uuid]=r}}return n}parseGeometries(e,t){const n={};if(e!==undefined){const i=new Vm;for(let r=0,s=e.length;r<s;r++){let s;const a=e[r];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(a);break;default:if(a.type in Ap){s=Ap[a.type].fromJSON(a,t)}else{console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}}s.uuid=a.uuid;if(a.name!==undefined)s.name=a.name;if(a.userData!==undefined)s.userData=a.userData;n[a.uuid]=s}}return n}parseMaterials(e,t){const n={};const i={};if(e!==undefined){const r=new Gm;r.setTextures(t);for(let t=0,s=e.length;t<s;t++){const s=e[t];if(n[s.uuid]===undefined){n[s.uuid]=r.parse(s)}i[s.uuid]=n[s.uuid]}}return i}parseAnimations(e){const t={};if(e!==undefined){for(let n=0;n<e.length;n++){const i=e[n];const r=sm.parse(i);t[r.uuid]=r}}return t}parseImages(e,t){const n=this;const i={};let r;function s(e){n.manager.itemStart(e);return r.load(e,function(){n.manager.itemEnd(e)},undefined,function(){n.manager.itemError(e);n.manager.itemEnd(e)})}function a(e){if(typeof e==="string"){const t=e;const i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:n.resourcePath+t;return s(i)}else{if(e.data){return{data:Jn(e.type,e.data),width:e.width,height:e.height}}else{return null}}}if(e!==undefined&&e.length>0){const n=new cm(t);r=new _m(n);r.setCrossOrigin(this.crossOrigin);for(let t=0,n=e.length;t<n;t++){const n=e[t];const r=n.url;if(Array.isArray(r)){const e=[];for(let t=0,n=r.length;t<n;t++){const n=r[t];const i=a(n);if(i!==null){if(i instanceof HTMLImageElement){e.push(i)}else{e.push(new ld(i.data,i.width,i.height))}}}i[n.uuid]=new pi(e)}else{const e=a(n.url);i[n.uuid]=new pi(e)}}}return i}async parseImagesAsync(e){const t=this;const n={};let i;async function r(e){if(typeof e==="string"){const n=e;const r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:t.resourcePath+n;return await i.loadAsync(r)}else{if(e.data){return{data:Jn(e.type,e.data),width:e.width,height:e.height}}else{return null}}}if(e!==undefined&&e.length>0){i=new _m(this.manager);i.setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t];const s=i.url;if(Array.isArray(s)){const e=[];for(let t=0,n=s.length;t<n;t++){const n=s[t];const i=await r(n);if(i!==null){if(i instanceof HTMLImageElement){e.push(i)}else{e.push(new ld(i.data,i.width,i.height))}}}n[i.uuid]=new pi(e)}else{const e=await r(i.url);n[i.uuid]=new pi(e)}}}return n}parseTextures(e,t){function n(e,t){if(typeof e==="number")return e;console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e);return t[e]}const i={};if(e!==undefined){for(let r=0,s=e.length;r<s;r++){const s=e[r];if(s.image===undefined){console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid)}if(t[s.image]===undefined){console.warn("THREE.ObjectLoader: Undefined image",s.image)}const a=t[s.image];const o=a.data;let l;if(Array.isArray(o)){l=new Hs;if(o.length===6)l.needsUpdate=true}else{if(o&&o.data){l=new ld}else{l=new _i}if(o)l.needsUpdate=true}l.source=a;l.uuid=s.uuid;if(s.name!==undefined)l.name=s.name;if(s.mapping!==undefined)l.mapping=n(s.mapping,Xm);if(s.offset!==undefined)l.offset.fromArray(s.offset);if(s.repeat!==undefined)l.repeat.fromArray(s.repeat);if(s.center!==undefined)l.center.fromArray(s.center);if(s.rotation!==undefined)l.rotation=s.rotation;if(s.wrap!==undefined){l.wrapS=n(s.wrap[0],jm);l.wrapT=n(s.wrap[1],jm)}if(s.format!==undefined)l.format=s.format;if(s.internalFormat!==undefined)l.internalFormat=s.internalFormat;if(s.type!==undefined)l.type=s.type;if(s.encoding!==undefined)l.encoding=s.encoding;if(s.minFilter!==undefined)l.minFilter=n(s.minFilter,qm);if(s.magFilter!==undefined)l.magFilter=n(s.magFilter,qm);if(s.anisotropy!==undefined)l.anisotropy=s.anisotropy;if(s.flipY!==undefined)l.flipY=s.flipY;if(s.generateMipmaps!==undefined)l.generateMipmaps=s.generateMipmaps;if(s.premultiplyAlpha!==undefined)l.premultiplyAlpha=s.premultiplyAlpha;if(s.unpackAlignment!==undefined)l.unpackAlignment=s.unpackAlignment;if(s.userData!==undefined)l.userData=s.userData;i[s.uuid]=l}}return i}parseObject(e,t,n,i,r){let s;function a(e){if(t[e]===undefined){console.warn("THREE.ObjectLoader: Undefined geometry",e)}return t[e]}function o(e){if(e===undefined)return undefined;if(Array.isArray(e)){const t=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];if(n[r]===undefined){console.warn("THREE.ObjectLoader: Undefined material",r)}t.push(n[r])}return t}if(n[e]===undefined){console.warn("THREE.ObjectLoader: Undefined material",e)}return n[e]}function l(e){if(i[e]===undefined){console.warn("THREE.ObjectLoader: Undefined texture",e)}return i[e]}let c,u;switch(e.type){case"Scene":s=new Ih;if(e.background!==undefined){if(Number.isInteger(e.background)){s.background=new kr(e.background)}else{s.background=l(e.background)}}if(e.environment!==undefined){s.environment=l(e.environment)}if(e.fog!==undefined){if(e.fog.type==="Fog"){s.fog=new Ph(e.fog.color,e.fog.near,e.fog.far)}else if(e.fog.type==="FogExp2"){s.fog=new Lh(e.fog.color,e.fog.density)}}if(e.backgroundBlurriness!==undefined)s.backgroundBlurriness=e.backgroundBlurriness;if(e.backgroundIntensity!==undefined)s.backgroundIntensity=e.backgroundIntensity;break;case"PerspectiveCamera":s=new Bs(e.fov,e.aspect,e.near,e.far);if(e.focus!==undefined)s.focus=e.focus;if(e.zoom!==undefined)s.zoom=e.zoom;if(e.filmGauge!==undefined)s.filmGauge=e.filmGauge;if(e.filmOffset!==undefined)s.filmOffset=e.filmOffset;if(e.view!==undefined)s.view=Object.assign({},e.view);break;case"OrthographicCamera":s=new Wl(e.left,e.right,e.top,e.bottom,e.near,e.far);if(e.zoom!==undefined)s.zoom=e.zoom;if(e.view!==undefined)s.view=Object.assign({},e.view);break;case"AmbientLight":s=new Um(e.color,e.intensity);break;case"DirectionalLight":s=new Om(e.color,e.intensity);break;case"PointLight":s=new Dm(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new Fm(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new Rm(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new bm(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=(new zm).fromJSON(e);break;case"SkinnedMesh":c=a(e.geometry);u=o(e.material);s=new ad(c,u);if(e.bindMode!==undefined)s.bindMode=e.bindMode;if(e.bindMatrix!==undefined)s.bindMatrix.fromArray(e.bindMatrix);if(e.skeleton!==undefined)s.skeleton=e.skeleton;break;case"Mesh":c=a(e.geometry);u=o(e.material);s=new ws(c,u);break;case"InstancedMesh":c=a(e.geometry);u=o(e.material);const t=e.count;const n=e.instanceMatrix;const i=e.instanceColor;s=new xd(c,u,t);s.instanceMatrix=new dd(new Float32Array(n.array),16);if(i!==undefined)s.instanceColor=new dd(new Float32Array(i.array),i.itemSize);break;case"LOD":s=new ed;break;case"Line":s=new wd(a(e.geometry),o(e.material));break;case"LineLoop":s=new Cd(a(e.geometry),o(e.material));break;case"LineSegments":s=new Rd(a(e.geometry),o(e.material));break;case"PointCloud":case"Points":s=new Od(a(e.geometry),o(e.material));break;case"Sprite":s=new Jh(o(e.material));break;case"Group":s=new vh;break;case"Bone":s=new od;break;default:s=new Sr}s.uuid=e.uuid;if(e.name!==undefined)s.name=e.name;if(e.matrix!==undefined){s.matrix.fromArray(e.matrix);if(e.matrixAutoUpdate!==undefined)s.matrixAutoUpdate=e.matrixAutoUpdate;if(s.matrixAutoUpdate)s.matrix.decompose(s.position,s.quaternion,s.scale)}else{if(e.position!==undefined)s.position.fromArray(e.position);if(e.rotation!==undefined)s.rotation.fromArray(e.rotation);if(e.quaternion!==undefined)s.quaternion.fromArray(e.quaternion);if(e.scale!==undefined)s.scale.fromArray(e.scale)}if(e.castShadow!==undefined)s.castShadow=e.castShadow;if(e.receiveShadow!==undefined)s.receiveShadow=e.receiveShadow;if(e.shadow){if(e.shadow.bias!==undefined)s.shadow.bias=e.shadow.bias;if(e.shadow.normalBias!==undefined)s.shadow.normalBias=e.shadow.normalBias;if(e.shadow.radius!==undefined)s.shadow.radius=e.shadow.radius;if(e.shadow.mapSize!==undefined)s.shadow.mapSize.fromArray(e.shadow.mapSize);if(e.shadow.camera!==undefined)s.shadow.camera=this.parseObject(e.shadow.camera)}if(e.visible!==undefined)s.visible=e.visible;if(e.frustumCulled!==undefined)s.frustumCulled=e.frustumCulled;if(e.renderOrder!==undefined)s.renderOrder=e.renderOrder;if(e.userData!==undefined)s.userData=e.userData;if(e.layers!==undefined)s.layers.mask=e.layers;if(e.children!==undefined){const a=e.children;for(let e=0;e<a.length;e++){s.add(this.parseObject(a[e],t,n,i,r))}}if(e.animations!==undefined){const t=e.animations;for(let e=0;e<t.length;e++){const n=t[e];s.animations.push(r[n])}}if(e.type==="LOD"){if(e.autoUpdate!==undefined)s.autoUpdate=e.autoUpdate;const t=e.levels;for(let e=0;e<t.length;e++){const n=t[e];const i=s.getObjectByProperty("uuid",n.object);if(i!==undefined){s.addLevel(i,n.distance,n.hysteresis)}}}return s}bindSkeletons(e,t){if(Object.keys(t).length===0)return;e.traverse(function(e){if(e.isSkinnedMesh===true&&e.skeleton!==undefined){const n=t[e.skeleton];if(n===undefined){console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton)}else{e.bind(n,e.bindMatrix)}}})}}const Xm={UVMapping:te,CubeReflectionMapping:ne,CubeRefractionMapping:ie,EquirectangularReflectionMapping:re,EquirectangularRefractionMapping:se,CubeUVReflectionMapping:ae};const jm={RepeatWrapping:oe,ClampToEdgeWrapping:le,MirroredRepeatWrapping:ce};const qm={NearestFilter:ue,NearestMipmapNearestFilter:he,NearestMipmapLinearFilter:fe,LinearFilter:me,LinearMipmapNearestFilter:ge,LinearMipmapLinearFilter:xe};class Ym extends hm{constructor(e){super(e);this.isImageBitmapLoader=true;if(typeof createImageBitmap==="undefined"){console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.")}if(typeof fetch==="undefined"){console.warn("THREE.ImageBitmapLoader: fetch() not supported.")}this.options={premultiplyAlpha:"none"}}setOptions(e){this.options=e;return this}load(e,t,n,i){if(e===undefined)e="";if(this.path!==undefined)e=this.path+e;e=this.manager.resolveURL(e);const r=this;const s=lm.get(e);if(s!==undefined){r.manager.itemStart(e);setTimeout(function(){if(t)t(s);r.manager.itemEnd(e)},0);return s}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include";a.headers=this.requestHeader;fetch(e,a).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(n){lm.add(e,n);if(t)t(n);r.manager.itemEnd(e)}).catch(function(t){if(i)i(t);r.manager.itemError(e);r.manager.itemEnd(e)});r.manager.itemStart(e)}}let Zm;class Jm{static getContext(){if(Zm===undefined){Zm=new(window.AudioContext||window.webkitAudioContext)}return Zm}static setContext(e){Zm=e}}class Km extends hm{constructor(e){super(e)}load(e,t,n,i){const r=this;const s=new pm(this.manager);s.setResponseType("arraybuffer");s.setPath(this.path);s.setRequestHeader(this.requestHeader);s.setWithCredentials(this.withCredentials);s.load(e,function(n){try{const e=n.slice(0);const i=Jm.getContext();i.decodeAudioData(e,function(e){t(e)})}catch(t){if(i){i(t)}else{console.error(t)}r.manager.itemError(e)}},n,i)}}class $m extends zm{constructor(e,t,n=1){super(undefined,n);this.isHemisphereLightProbe=true;const i=(new kr).set(e);const r=(new kr).set(t);const s=new Qn(i.r,i.g,i.b);const a=new Qn(r.r,r.g,r.b);const o=Math.sqrt(Math.PI);const l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o);this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}}class Qm extends zm{constructor(e,t=1){super(undefined,t);this.isAmbientLightProbe=true;const n=(new kr).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const eg=new $i;const tg=new $i;const ng=new $i;class ig{constructor(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new Bs;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new Bs;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;const n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){t.focus=e.focus;t.fov=e.fov;t.aspect=e.aspect*this.aspect;t.near=e.near;t.far=e.far;t.zoom=e.zoom;t.eyeSep=this.eyeSep;ng.copy(e.projectionMatrix);const n=t.eyeSep/2;const i=n*t.near/t.focus;const r=t.near*Math.tan(vn*t.fov*.5)/t.zoom;let s,a;tg.elements[12]=-n;eg.elements[12]=n;s=-r*t.aspect+i;a=r*t.aspect+i;ng.elements[0]=2*t.near/(a-s);ng.elements[8]=(a+s)/(a-s);this.cameraL.projectionMatrix.copy(ng);s=-r*t.aspect-i;a=r*t.aspect-i;ng.elements[0]=2*t.near/(a-s);ng.elements[8]=(a+s)/(a-s);this.cameraR.projectionMatrix.copy(ng)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(tg);this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(eg)}}class rg{constructor(e=true){this.autoStart=e;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false}start(){this.startTime=sg();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true}stop(){this.getElapsedTime();this.running=false;this.autoStart=false}getElapsedTime(){this.getDelta();return this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running){this.start();return 0}if(this.running){const t=sg();e=(t-this.oldTime)/1e3;this.oldTime=t;this.elapsedTime+=e}return e}}function sg(){return(typeof performance==="undefined"?Date:performance).now()}const ag=new Qn;const og=new $n;const lg=new Qn;const cg=new Qn;class ug extends Sr{constructor(){super();this.type="AudioListener";this.context=Jm.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;this._clock=new rg}getInput(){return this.gain}removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null}return this}getFilter(){return this.filter}setFilter(e){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination)}else{this.gain.disconnect(this.context.destination)}this.filter=e;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01);return this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;const n=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(ag,og,lg);cg.set(0,0,-1).applyQuaternion(og);if(t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ag.x,e);t.positionY.linearRampToValueAtTime(ag.y,e);t.positionZ.linearRampToValueAtTime(ag.z,e);t.forwardX.linearRampToValueAtTime(cg.x,e);t.forwardY.linearRampToValueAtTime(cg.y,e);t.forwardZ.linearRampToValueAtTime(cg.z,e);t.upX.linearRampToValueAtTime(n.x,e);t.upY.linearRampToValueAtTime(n.y,e);t.upZ.linearRampToValueAtTime(n.z,e)}else{t.setPosition(ag.x,ag.y,ag.z);t.setOrientation(cg.x,cg.y,cg.z,n.x,n.y,n.z)}}}class hg extends Sr{constructor(e){super();this.type="Audio";this.listener=e;this.context=e.context;this.gain=this.context.createGain();this.gain.connect(e.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.source=null;this.sourceType="empty";this._startedAt=0;this._progress=0;this._connected=false;this.filters=[]}getOutput(){return this.gain}setNodeSource(e){this.hasPlaybackControl=false;this.sourceType="audioNode";this.source=e;this.connect();return this}setMediaElementSource(e){this.hasPlaybackControl=false;this.sourceType="mediaNode";this.source=this.context.createMediaElementSource(e);this.connect();return this}setMediaStreamSource(e){this.hasPlaybackControl=false;this.sourceType="mediaStreamNode";this.source=this.context.createMediaStreamSource(e);this.connect();return this}setBuffer(e){this.buffer=e;this.sourceType="buffer";if(this.autoplay)this.play();return this}play(e=0){if(this.isPlaying===true){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();t.buffer=this.buffer;t.loop=this.loop;t.loopStart=this.loopStart;t.loopEnd=this.loopEnd;t.onended=this.onEnded.bind(this);t.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=t;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect()}pause(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}if(this.isPlaying===true){this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){this._progress=this._progress%(this.duration||this.buffer.duration)}this.source.stop();this.source.onended=null;this.isPlaying=false}return this}stop(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this._progress=0;if(this.source!==null){this.source.stop();this.source.onended=null}this.isPlaying=false;return this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++){this.filters[e-1].connect(this.filters[e])}this.filters[this.filters.length-1].connect(this.getOutput())}else{this.source.connect(this.getOutput())}this._connected=true;return this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++){this.filters[e-1].disconnect(this.filters[e])}this.filters[this.filters.length-1].disconnect(this.getOutput())}else{this.source.disconnect(this.getOutput())}this._connected=false;return this}getFilters(){return this.filters}setFilters(e){if(!e)e=[];if(this._connected===true){this.disconnect();this.filters=e.slice();this.connect()}else{this.filters=e.slice()}return this}setDetune(e){this.detune=e;if(this.source.detune===undefined)return;if(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01)}return this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.playbackRate=e;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01)}return this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=false}getLoop(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return false}return this.loop}setLoop(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.loop=e;if(this.isPlaying===true){this.source.loop=this.loop}return this}setLoopStart(e){this.loopStart=e;return this}setLoopEnd(e){this.loopEnd=e;return this}getVolume(){return this.gain.gain.value}setVolume(e){this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01);return this}}const dg=new Qn;const fg=new $n;const pg=new Qn;const mg=new Qn;class gg extends hg{constructor(e){super(e);this.panner=this.context.createPanner();this.panner.panningModel="HRTF";this.panner.connect(this.gain)}disconnect(){super.disconnect();this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){this.panner.refDistance=e;return this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){this.panner.rolloffFactor=e;return this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){this.panner.distanceModel=e;return this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){this.panner.maxDistance=e;return this}setDirectionalCone(e,t,n){this.panner.coneInnerAngle=e;this.panner.coneOuterAngle=t;this.panner.coneOuterGain=n;return this}updateMatrixWorld(e){super.updateMatrixWorld(e);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(dg,fg,pg);mg.set(0,0,1).applyQuaternion(fg);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(dg.x,e);t.positionY.linearRampToValueAtTime(dg.y,e);t.positionZ.linearRampToValueAtTime(dg.z,e);t.orientationX.linearRampToValueAtTime(mg.x,e);t.orientationY.linearRampToValueAtTime(mg.y,e);t.orientationZ.linearRampToValueAtTime(mg.z,e)}else{t.setPosition(dg.x,dg.y,dg.z);t.setOrientation(mg.x,mg.y,mg.z)}}}class _g{constructor(e,t=2048){this.analyser=e.context.createAnalyser();this.analyser.fftSize=t;this.data=new Uint8Array(this.analyser.frequencyBinCount);e.getOutput().connect(this.analyser)}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++){e+=t[n]}return e/t.length}}class xg{constructor(e,t,n){this.binding=e;this.valueSize=n;let i,r,s;switch(t){case"quaternion":i=this._slerp;r=this._slerpAdditive;s=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(n*6);this._workIndex=5;break;case"string":case"bool":i=this._select;r=this._select;s=this._setAdditiveIdentityOther;this.buffer=new Array(n*5);break;default:i=this._lerp;r=this._lerpAdditive;s=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i;this._mixBufferRegionAdditive=r;this._setIdentity=s;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let e=0;e!==i;++e){n[r+e]=n[e]}s=t}else{s+=t;const e=t/s;this._mixBufferRegion(n,r,0,e,i)}this.cumulativeWeight=s}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;if(this.cumulativeWeightAdditive===0){this._setIdentity()}this._mixBufferRegionAdditive(t,i,0,e,n);this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(r<1){const e=t*this._origIndex;this._mixBufferRegion(n,i,e,1-r,t)}if(s>0){this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t)}for(let e=t,r=t+t;e!==r;++e){if(n[e]!==n[e+t]){a.setValue(n,i);break}}}saveOriginalState(){const e=this.binding;const t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let e=n,r=i;e!==r;++e){t[e]=t[i+e%n]}this._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize;const t=e+this.valueSize;for(let n=e;n<t;n++){this.buffer[n]=0}}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize;const t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++){this.buffer[t+n]=this.buffer[e+n]}}_select(e,t,n,i,r){if(i>=.5){for(let i=0;i!==r;++i){e[t+i]=e[n+i]}}}_slerp(e,t,n,i){$n.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const s=this._workIndex*r;$n.multiplyQuaternionsFlat(e,s,e,t,e,n);$n.slerpFlat(e,t,e,t,e,s,i)}_lerp(e,t,n,i,r){const s=1-i;for(let a=0;a!==r;++a){const r=t+a;e[r]=e[r]*s+e[n+a]*i}}_lerpAdditive(e,t,n,i,r){for(let s=0;s!==r;++s){const r=t+s;e[r]=e[r]+e[n+s]*i}}}const yg="\\[\\]\\.:\\/";const vg=new RegExp("["+yg+"]","g");const Mg="[^"+yg+"]";const bg="[^"+yg.replace("\\.","")+"]";const Sg=/((?:WC+[\/:])*)/.source.replace("WC",Mg);const Tg=/(WCOD+)?/.source.replace("WCOD",bg);const wg=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Mg);const Eg=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Mg);const Ag=new RegExp(""+"^"+Sg+Tg+wg+Eg+"$");const Rg=["material","materials","bones","map"];class Cg{constructor(e,t,n){const i=n||Lg.parseTrackName(t);this._targetGroup=e;this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];if(i!==undefined)i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i){n[i].setValue(e,t)}}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t){e[t].bind()}}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t){e[t].unbind()}}}class Lg{constructor(e,t,n){this.path=t;this.parsedPath=n||Lg.parseTrackName(t);this.node=Lg.findNode(e,this.parsedPath.nodeName);this.rootNode=e;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}static create(e,t,n){if(!(e&&e.isAnimationObjectGroup)){return new Lg(e,t,n)}else{return new Lg.Composite(e,t,n)}}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(vg,"")}static parseTrackName(e){const t=Ag.exec(e);if(t===null){throw new Error("PropertyBinding: Cannot parse trackName: "+e)}const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};const i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==undefined&&i!==-1){const e=n.nodeName.substring(i+1);if(Rg.indexOf(e)!==-1){n.nodeName=n.nodeName.substring(0,i);n.objectName=e}}if(n.propertyName===null||n.propertyName.length===0){throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e)}return n}static findNode(e,t){if(t===undefined||t===""||t==="."||t===-1||t===e.name||t===e.uuid){return e}if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==undefined){return n}}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const r=e[i];if(r.name===t||r.uuid===t){return r}const s=n(r.children);if(s)return s}return null};const i=n(e.children);if(i){return i}}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i){e[t++]=n[i]}}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t];this.targetObject.needsUpdate=true}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t];this.targetObject.matrixWorldNeedsUpdate=true}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i){n[i]=e[t++]}}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i){n[i]=e[t++]}this.targetObject.needsUpdate=true}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i){n[i]=e[t++]}this.targetObject.matrixWorldNeedsUpdate=true}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t];this.targetObject.needsUpdate=true}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t];this.targetObject.matrixWorldNeedsUpdate=true}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t);this.targetObject.needsUpdate=true}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t);this.targetObject.matrixWorldNeedsUpdate=true}_getValue_unbound(e,t){this.bind();this.getValue(e,t)}_setValue_unbound(e,t){this.bind();this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath;const n=t.objectName;const i=t.propertyName;let r=t.propertyIndex;if(!e){e=Lg.findNode(this.rootNode,t.nodeName);this.node=e}this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let t=0;t<e.length;t++){if(e[t].name===i){i=t;break}}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===undefined){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(i!==undefined){if(e[i]===undefined){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[i]}}const s=e[i];if(s===undefined){const n=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e;if(e.needsUpdate!==undefined){a=this.Versioning.NeedsUpdate}else if(e.matrixWorldNeedsUpdate!==undefined){a=this.Versioning.MatrixWorldNeedsUpdate}let o=this.BindingType.Direct;if(r!==undefined){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}if(e.morphTargetDictionary[r]!==undefined){r=e.morphTargetDictionary[r]}}o=this.BindingType.ArrayElement;this.resolvedProperty=s;this.propertyIndex=r}else if(s.fromArray!==undefined&&s.toArray!==undefined){o=this.BindingType.HasFromToArray;this.resolvedProperty=s}else if(Array.isArray(s)){o=this.BindingType.EntireArray;this.resolvedProperty=s}else{this.propertyName=i}this.getValue=this.GetterByBindingType[o];this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}}Lg.Composite=Cg;Lg.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Lg.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Lg.prototype.GetterByBindingType=[Lg.prototype._getValue_direct,Lg.prototype._getValue_array,Lg.prototype._getValue_arrayElement,Lg.prototype._getValue_toArray];Lg.prototype.SetterByBindingTypeAndVersioning=[[Lg.prototype._setValue_direct,Lg.prototype._setValue_direct_setNeedsUpdate,Lg.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Lg.prototype._setValue_array,Lg.prototype._setValue_array_setNeedsUpdate,Lg.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Lg.prototype._setValue_arrayElement,Lg.prototype._setValue_arrayElement_setNeedsUpdate,Lg.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Lg.prototype._setValue_fromArray,Lg.prototype._setValue_fromArray_setNeedsUpdate,Lg.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Pg{constructor(){this.isAnimationObjectGroup=true;this.uuid=bn();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,n=arguments.length;t!==n;++t){e[arguments[t].uuid]=t}this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let a=undefined,o=e.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],h=u.uuid;let d=t[h];if(d===undefined){d=o++;t[h]=d;e.push(u);for(let e=0,t=s;e!==t;++e){r[e].push(new Lg(u,n[e],i[e]))}}else if(d<l){a=e[d];const o=--l,c=e[o];t[c.uuid]=d;e[d]=c;t[h]=o;e[o]=u;for(let e=0,t=s;e!==t;++e){const t=r[e],s=t[o];let a=t[d];t[d]=s;if(a===undefined){a=new Lg(u,n[e],i[e])}t[o]=a}}else if(e[d]!==a){console.error("THREE.AnimationObjectGroup: Different objects with the same UUID "+"detected. Clean the caches or recreate your infrastructure when reloading scenes.")}}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=t[o];if(l!==undefined&&l>=r){const s=r++,c=e[s];t[c.uuid]=l;e[l]=c;t[o]=s;e[s]=a;for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[s],r=t[l];t[l]=i;t[s]=r}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=e.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a],l=o.uuid,c=t[l];if(c!==undefined){delete t[l];if(c<r){const a=--r,o=e[a],l=--s,u=e[l];t[o.uuid]=c;e[c]=o;t[u.uuid]=a;e[a]=u;e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e],i=t[a],r=t[l];t[c]=i;t[a]=r;t.pop()}}else{const r=--s,a=e[r];if(r>0){t[a.uuid]=c}e[c]=a;e.pop();for(let e=0,t=i;e!==t;++e){const t=n[e];t[c]=t[r];t.pop()}}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==undefined)return r[i];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,u=new Array(l);i=r.length;n[e]=i;s.push(e);a.push(t);r.push(u);for(let n=c,i=o.length;n!==i;++n){const i=o[n];u[n]=new Lg(i,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==undefined){const i=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a],l=e[a];t[l]=n;s[n]=o;s.pop();r[n]=r[a];r.pop();i[n]=i[a];i.pop()}}}class Ig{constructor(e,t,n=null,i=t.blendMode){this._mixer=e;this._clip=t;this._localRoot=n;this.blendMode=i;const r=t.tracks,s=r.length,a=new Array(s);const o={endingStart:Tt,endingEnd:Tt};for(let e=0;e!==s;++e){const t=r[e].createInterpolant(null);a[e]=t;t.settings=o}this._interpolantSettings=o;this._interpolants=a;this._propertyBindings=new Array(s);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=yt;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=false;this.enabled=true;this.clampWhenFinished=false;this.zeroSlopeAtStart=true;this.zeroSlopeAtEnd=true}play(){this._mixer._activateAction(this);return this}stop(){this._mixer._deactivateAction(this);return this.reset()}reset(){this.paused=false;this.enabled=true;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){this._startTime=e;return this}setLoop(e,t){this.loop=e;this.repetitions=t;return this}setEffectiveWeight(e){this.weight=e;this._effectiveWeight=this.enabled?e:0;return this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){e.fadeOut(t);this.fadeIn(t);if(n){const n=this._clip.duration,i=e._clip.duration,r=i/n,s=n/i;e.warp(1,r,t);this.warp(s,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;if(e!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this}setEffectiveTimeScale(e){this.timeScale=e;this._effectiveTimeScale=this.paused?0:e;return this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){this.timeScale=this._clip.duration/e;return this.stopWarping()}syncWith(e){this.time=e.time;this.timeScale=e.timeScale;return this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,s=this.timeScale;let a=this._timeScaleInterpolant;if(a===null){a=i._lendControlInterpolant();this._timeScaleInterpolant=a}const o=a.parameterPositions,l=a.sampleValues;o[0]=r;o[1]=r+n;l[0]=e/s;l[1]=t/s;return this}stopWarping(){const e=this._timeScaleInterpolant;if(e!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const i=(e-r)*n;if(i<0||n===0){t=0}else{this._startTime=null;t=n*i}}t*=this._updateTimeScale(e);const s=this._updateTime(t);const a=this._updateWeight(e);if(a>0){const e=this._interpolants;const t=this._propertyBindings;switch(this.blendMode){case Rt:for(let n=0,i=e.length;n!==i;++n){e[n].evaluate(s);t[n].accumulateAdditive(a)}break;case At:default:for(let n=0,r=e.length;n!==r;++n){e[n].evaluate(s);t[n].accumulate(i,a)}}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i;if(e>n.parameterPositions[1]){this.stopFading();if(i===0){this.enabled=false}}}}this._effectiveWeight=t;return t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i;if(e>n.parameterPositions[1]){this.stopWarping();if(t===0){this.paused=true}else{this.timeScale=t}}}}this._effectiveTimeScale=t;return t}_updateTime(e){const t=this._clip.duration;const n=this.loop;let i=this.time+e;let r=this._loopCount;const s=n===vt;if(e===0){if(r===-1)return i;return s&&(r&1)===1?t-i:i}if(n===xt){if(r===-1){this._loopCount=0;this._setEndings(true,true,false)}e:{if(i>=t){i=t}else if(i<0){i=0}else{this.time=i;break e}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=i;this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1){if(e>=0){r=0;this._setEndings(true,this.repetitions===0,s)}else{this._setEndings(this.repetitions===0,true,s)}}if(i>=t||i<0){const n=Math.floor(i/t);i-=t*n;r+=Math.abs(n);const a=this.repetitions-r;if(a<=0){if(this.clampWhenFinished)this.paused=true;else this.enabled=false;i=e>0?t:0;this.time=i;this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1})}else{if(a===1){const t=e<0;this._setEndings(t,!t,s)}else{this._setEndings(false,false,s)}this._loopCount=r;this.time=i;this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else{this.time=i}if(s&&(r&1)===1){return t-i}}return i}_setEndings(e,t,n){const i=this._interpolantSettings;if(n){i.endingStart=wt;i.endingEnd=wt}else{if(e){i.endingStart=this.zeroSlopeAtStart?wt:Tt}else{i.endingStart=Et}if(t){i.endingEnd=this.zeroSlopeAtEnd?wt:Tt}else{i.endingEnd=Et}}}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;if(s===null){s=i._lendControlInterpolant();this._weightInterpolant=s}const a=s.parameterPositions,o=s.sampleValues;a[0]=r;o[0]=t;a[1]=r+e;o[1]=n;return this}}const Dg=new Float32Array(1);class Ng extends _n{constructor(e){super();this._root=e;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,s=e._propertyBindings,a=e._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];if(c===undefined){c={};l[o]=c}for(let e=0;e!==r;++e){const r=i[e],l=r.name;let u=c[l];if(u!==undefined){++u.referenceCount;s[e]=u}else{u=s[e];if(u!==undefined){if(u._cacheIndex===null){++u.referenceCount;this._addInactiveBinding(u,o,l)}continue}const i=t&&t._propertyBindings[e].binding.parsedPath;u=new xg(Lg.create(n,l,i),r.ValueTypeName,r.getValueSize());++u.referenceCount;this._addInactiveBinding(u,o,l);s[e]=u}a[e].resultBuffer=u.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]);this._addInactiveAction(e,n,t)}const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];if(n.useCount++===0){this._lendBinding(n);n.saveOriginalState()}}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];if(--n.useCount===0){n.restoreOriginalState();this._takeBackBinding(n)}}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(s===undefined){s={knownActions:[e],actionByRoot:{}};e._byClipCacheIndex=0;r[t]=s}else{const t=s.knownActions;e._byClipCacheIndex=t.length;t.push(e)}e._cacheIndex=i.length;i.push(e);s.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i;t[i]=n;t.pop();e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c;o[c]=l;o.pop();e._byClipCacheIndex=null;const u=a.actionByRoot,h=(e._localRoot||this._root).uuid;delete u[h];if(o.length===0){delete s[r]}this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let e=0,n=t.length;e!==n;++e){const n=t[e];if(--n.referenceCount===0){this._removeInactiveBinding(n)}}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];if(s===undefined){s={};i[t]=s}s[n]=e;e._cacheIndex=r.length;r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,a=s[i],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l;t[l]=o;t.pop();delete a[r];if(Object.keys(a).length===0){delete s[i]}}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i;t[i]=e;r._cacheIndex=n;t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];if(n===undefined){n=new Zp(new Float32Array(2),new Float32Array(2),1,Dg);n.__cacheIndex=t;e[t]=n}return n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i;t[i]=e;r.__cacheIndex=n;t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let s=typeof e==="string"?sm.findByName(i,e):e;const a=s!==null?s.uuid:e;const o=this._actionsByClip[a];let l=null;if(n===undefined){if(s!==null){n=s.blendMode}else{n=At}}if(o!==undefined){const e=o.actionByRoot[r];if(e!==undefined&&e.blendMode===n){return e}l=o.knownActions[0];if(s===null)s=l._clip}if(s===null)return null;const c=new Ig(this,s,t,n);this._bindAction(c,l);this._addInactiveAction(c,a,r);return c}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e==="string"?sm.findByName(n,e):e,s=r?r.uuid:e,a=this._actionsByClip[s];if(a!==undefined){return a.actionByRoot[i]||null}return null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n){e[n].stop()}return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let a=0;a!==n;++a){const n=t[a];n._update(i,e,r,s)}const a=this._bindings,o=this._nActiveBindings;for(let e=0;e!==o;++e){a[e].apply(s)}return this}setTime(e){this.time=0;for(let e=0;e<this._actions.length;e++){this._actions[e].time=0}return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==undefined){const e=r.knownActions;for(let n=0,i=e.length;n!==i;++n){const i=e[n];this._deactivateAction(i);const r=i._cacheIndex,s=t[t.length-1];i._cacheIndex=null;i._byClipCacheIndex=null;s._cacheIndex=r;t[r]=s;t.pop();this._removeInactiveBindingsForAction(i)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const e in n){const i=n[e].actionByRoot,r=i[t];if(r!==undefined){this._deactivateAction(r);this._removeInactiveAction(r)}}const i=this._bindingsByRootAndName,r=i[t];if(r!==undefined){for(const e in r){const t=r[e];t.restoreOriginalState();this._removeInactiveBinding(t)}}}uncacheAction(e,t){const n=this.existingAction(e,t);if(n!==null){this._deactivateAction(n);this._removeInactiveAction(n)}}}class Og{constructor(e){this.value=e}clone(){return new Og(this.value.clone===undefined?this.value:this.value.clone())}}let Ug=0;class Fg extends _n{constructor(){super();this.isUniformsGroup=true;Object.defineProperty(this,"id",{value:Ug++});this.name="";this.usage=sn;this.uniforms=[]}add(e){this.uniforms.push(e);return this}remove(e){const t=this.uniforms.indexOf(e);if(t!==-1)this.uniforms.splice(t,1);return this}setName(e){this.name=e;return this}setUsage(e){this.usage=e;return this}dispose(){this.dispatchEvent({type:"dispose"});return this}copy(e){this.name=e.name;this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let e=0,n=t.length;e<n;e++){this.uniforms.push(t[e].clone())}return this}clone(){return(new this.constructor).copy(this)}}class Bg extends Dh{constructor(e,t,n=1){super(e,t);this.isInstancedInterleavedBuffer=true;this.meshPerAttribute=n}copy(e){super.copy(e);this.meshPerAttribute=e.meshPerAttribute;return this}clone(e){const t=super.clone(e);t.meshPerAttribute=this.meshPerAttribute;return t}toJSON(e){const t=super.toJSON(e);t.isInstancedInterleavedBuffer=true;t.meshPerAttribute=this.meshPerAttribute;return t}}class zg{constructor(e,t,n,i,r){this.isGLBufferAttribute=true;this.name="";this.buffer=e;this.type=t;this.itemSize=n;this.elementSize=i;this.count=r;this.version=0}set needsUpdate(e){if(e===true)this.version++}setBuffer(e){this.buffer=e;return this}setType(e,t){this.type=e;this.elementSize=t;return this}setItemSize(e){this.itemSize=e;return this}setCount(e){this.count=e;return this}}class Gg{constructor(e,t,n=0,i=Infinity){this.ray=new Ki(e,t);this.near=n;this.far=i;this.camera=null;this.layers=new cr;this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){if(t.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(t.matrixWorld);this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize();this.camera=t}else if(t.isOrthographicCamera){this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t);this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld);this.camera=t}else{console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}}intersectObject(e,t=true,n=[]){Hg(e,this,n,t);n.sort(kg);return n}intersectObjects(e,t=true,n=[]){for(let i=0,r=e.length;i<r;i++){Hg(e[i],this,n,t)}n.sort(kg);return n}}function kg(e,t){return e.distance-t.distance}function Hg(e,t,n,i){if(e.layers.test(t.layers)){e.raycast(t,n)}if(i===true){const i=e.children;for(let e=0,r=i.length;e<r;e++){Hg(i[e],t,n,true)}}}class Vg{constructor(e=1,t=0,n=0){this.radius=e;this.phi=t;this.theta=n;return this}set(e,t,n){this.radius=e;this.phi=t;this.theta=n;return this}copy(e){this.radius=e.radius;this.phi=e.phi;this.theta=e.theta;return this}makeSafe(){const e=1e-6;this.phi=Math.max(e,Math.min(Math.PI-e,this.phi));return this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){this.radius=Math.sqrt(e*e+t*t+n*n);if(this.radius===0){this.theta=0;this.phi=0}else{this.theta=Math.atan2(e,n);this.phi=Math.acos(Sn(t/this.radius,-1,1))}return this}clone(){return(new this.constructor).copy(this)}}class Wg{constructor(e=1,t=0,n=0){this.radius=e;this.theta=t;this.y=n;return this}set(e,t,n){this.radius=e;this.theta=t;this.y=n;return this}copy(e){this.radius=e.radius;this.theta=e.theta;this.y=e.y;return this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){this.radius=Math.sqrt(e*e+n*n);this.theta=Math.atan2(e,n);this.y=t;return this}clone(){return(new this.constructor).copy(this)}}const Xg=new Xn;class jg{constructor(e=new Xn(+Infinity,+Infinity),t=new Xn(-Infinity,-Infinity)){this.isBox2=true;this.min=e;this.max=t}set(e,t){this.min.copy(e);this.max.copy(t);return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++){this.expandByPoint(e[t])}return this}setFromCenterAndSize(e,t){const n=Xg.copy(t).multiplyScalar(.5);this.min.copy(e).sub(n);this.max.copy(e).add(n);return this}clone(){return(new this.constructor).copy(this)}copy(e){this.min.copy(e.min);this.max.copy(e.max);return this}makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){this.min.min(e);this.max.max(e);return this}expandByVector(e){this.min.sub(e);this.max.add(e);return this}expandByScalar(e){this.min.addScalar(-e);this.max.addScalar(e);return this}containsPoint(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?false:true}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?false:true}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xg).distanceTo(e)}intersect(e){this.min.max(e.min);this.max.min(e.max);if(this.isEmpty())this.makeEmpty();return this}union(e){this.min.min(e.min);this.max.max(e.max);return this}translate(e){this.min.add(e);this.max.add(e);return this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const qg=new Qn;const Yg=new Qn;class Zg{constructor(e=new Qn,t=new Qn){this.start=e;this.end=t}set(e,t){this.start.copy(e);this.end.copy(t);return this}copy(e){this.start.copy(e.start);this.end.copy(e.end);return this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){qg.subVectors(e,this.start);Yg.subVectors(this.end,this.start);const n=Yg.dot(Yg);const i=Yg.dot(qg);let r=i/n;if(t){r=Sn(r,0,1)}return r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){this.start.applyMatrix4(e);this.end.applyMatrix4(e);return this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Jg=new Qn;class Kg extends Sr{constructor(e,t){super();this.light=e;this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.color=t;this.type="SpotLightHelper";const n=new us;const i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,n=32;e<n;e++,t++){const r=e/n*Math.PI*2;const s=t/n*Math.PI*2;i.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}n.setAttribute("position",new ts(i,3));const r=new yd({fog:false,toneMapped:false});this.cone=new Rd(n,r);this.add(this.cone);this.update()}dispose(){this.cone.geometry.dispose();this.cone.material.dispose()}update(){this.light.updateWorldMatrix(true,false);this.light.target.updateWorldMatrix(true,false);const e=this.light.distance?this.light.distance:1e3;const t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e);Jg.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(Jg);if(this.color!==undefined){this.cone.material.color.set(this.color)}else{this.cone.material.color.copy(this.light.color)}}}const $g=new Qn;const Qg=new $i;const e_=new $i;class t_ extends Rd{constructor(e){const t=n_(e);const n=new us;const i=[];const r=[];const s=new kr(0,0,1);const a=new kr(0,1,0);for(let e=0;e<t.length;e++){const n=t[e];if(n.parent&&n.parent.isBone){i.push(0,0,0);i.push(0,0,0);r.push(s.r,s.g,s.b);r.push(a.r,a.g,a.b)}}n.setAttribute("position",new ts(i,3));n.setAttribute("color",new ts(r,3));const o=new yd({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});super(n,o);this.isSkeletonHelper=true;this.type="SkeletonHelper";this.root=e;this.bones=t;this.matrix=e.matrixWorld;this.matrixAutoUpdate=false}updateMatrixWorld(e){const t=this.bones;const n=this.geometry;const i=n.getAttribute("position");e_.copy(this.root.matrixWorld).invert();for(let e=0,n=0;e<t.length;e++){const r=t[e];if(r.parent&&r.parent.isBone){Qg.multiplyMatrices(e_,r.matrixWorld);$g.setFromMatrixPosition(Qg);i.setXYZ(n,$g.x,$g.y,$g.z);Qg.multiplyMatrices(e_,r.parent.matrixWorld);$g.setFromMatrixPosition(Qg);i.setXYZ(n+1,$g.x,$g.y,$g.z);n+=2}}n.getAttribute("position").needsUpdate=true;super.updateMatrixWorld(e)}dispose(){this.geometry.dispose();this.material.dispose()}}function n_(e){const t=[];if(e.isBone===true){t.push(e)}for(let n=0;n<e.children.length;n++){t.push.apply(t,n_(e.children[n]))}return t}class i_ extends ws{constructor(e,t,n){const i=new vp(t,4,2);const r=new Vr({wireframe:true,fog:false,toneMapped:false});super(i,r);this.light=e;this.color=n;this.type="PointLightHelper";this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update()}dispose(){this.geometry.dispose();this.material.dispose()}update(){this.light.updateWorldMatrix(true,false);if(this.color!==undefined){this.material.color.set(this.color)}else{this.material.color.copy(this.light.color)}}}const r_=new Qn;const s_=new kr;const a_=new kr;class o_ extends Sr{constructor(e,t,n){super();this.light=e;this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.color=n;this.type="HemisphereLightHelper";const i=new gp(t);i.rotateY(Math.PI*.5);this.material=new Vr({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;const r=i.getAttribute("position");const s=new Float32Array(r.count*3);i.setAttribute("color",new jr(s,3));this.add(new ws(i,this.material));this.update()}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==undefined){this.material.color.set(this.color)}else{const t=e.geometry.getAttribute("color");s_.copy(this.light.color);a_.copy(this.light.groundColor);for(let e=0,n=t.count;e<n;e++){const i=e<n/2?s_:a_;t.setXYZ(e,i.r,i.g,i.b)}t.needsUpdate=true}this.light.updateWorldMatrix(true,false);e.lookAt(r_.setFromMatrixPosition(this.light.matrixWorld).negate())}}class l_ extends Rd{constructor(e=10,t=10,n=4473924,i=8947848){n=new kr(n);i=new kr(i);const r=t/2;const s=e/t;const a=e/2;const o=[],l=[];for(let e=0,c=0,u=-a;e<=t;e++,u+=s){o.push(-a,0,u,a,0,u);o.push(u,0,-a,u,0,a);const t=e===r?n:i;t.toArray(l,c);c+=3;t.toArray(l,c);c+=3;t.toArray(l,c);c+=3;t.toArray(l,c);c+=3}const c=new us;c.setAttribute("position",new ts(o,3));c.setAttribute("color",new ts(l,3));const u=new yd({vertexColors:true,toneMapped:false});super(c,u);this.type="GridHelper"}dispose(){this.geometry.dispose();this.material.dispose()}}class c_ extends Rd{constructor(e=10,t=16,n=8,i=64,r=4473924,s=8947848){r=new kr(r);s=new kr(s);const a=[];const o=[];if(t>1){for(let n=0;n<t;n++){const i=n/t*(Math.PI*2);const l=Math.sin(i)*e;const c=Math.cos(i)*e;a.push(0,0,0);a.push(l,0,c);const u=n&1?r:s;o.push(u.r,u.g,u.b);o.push(u.r,u.g,u.b)}}for(let t=0;t<n;t++){const l=t&1?r:s;const c=e-e/n*t;for(let e=0;e<i;e++){let t=e/i*(Math.PI*2);let n=Math.sin(t)*c;let r=Math.cos(t)*c;a.push(n,0,r);o.push(l.r,l.g,l.b);t=(e+1)/i*(Math.PI*2);n=Math.sin(t)*c;r=Math.cos(t)*c;a.push(n,0,r);o.push(l.r,l.g,l.b)}}const l=new us;l.setAttribute("position",new ts(a,3));l.setAttribute("color",new ts(o,3));const c=new yd({vertexColors:true,toneMapped:false});super(l,c);this.type="PolarGridHelper"}dispose(){this.geometry.dispose();this.material.dispose()}}const u_=new Qn;const h_=new Qn;const d_=new Qn;class f_ extends Sr{constructor(e,t,n){super();this.light=e;this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.color=n;this.type="DirectionalLightHelper";if(t===undefined)t=1;let i=new us;i.setAttribute("position",new ts([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new yd({fog:false,toneMapped:false});this.lightPlane=new wd(i,r);this.add(this.lightPlane);i=new us;i.setAttribute("position",new ts([0,0,0,0,0,1],3));this.targetLine=new wd(i,r);this.add(this.targetLine);this.update()}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(true,false);this.light.target.updateWorldMatrix(true,false);u_.setFromMatrixPosition(this.light.matrixWorld);h_.setFromMatrixPosition(this.light.target.matrixWorld);d_.subVectors(h_,u_);this.lightPlane.lookAt(h_);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color)}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color)}this.targetLine.lookAt(h_);this.targetLine.scale.z=d_.length()}}const p_=new Qn;const m_=new Fs;class g_ extends Rd{constructor(e){const t=new us;const n=new yd({color:16777215,vertexColors:true,toneMapped:false});const i=[];const r=[];const s={};a("n1","n2");a("n2","n4");a("n4","n3");a("n3","n1");a("f1","f2");a("f2","f4");a("f4","f3");a("f3","f1");a("n1","f1");a("n2","f2");a("n3","f3");a("n4","f4");a("p","n1");a("p","n2");a("p","n3");a("p","n4");a("u1","u2");a("u2","u3");a("u3","u1");a("c","t");a("p","c");a("cn1","cn2");a("cn3","cn4");a("cf1","cf2");a("cf3","cf4");function a(e,t){o(e);o(t)}function o(e){i.push(0,0,0);r.push(0,0,0);if(s[e]===undefined){s[e]=[]}s[e].push(i.length/3-1)}t.setAttribute("position",new ts(i,3));t.setAttribute("color",new ts(r,3));super(t,n);this.type="CameraHelper";this.camera=e;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=s;this.update();const l=new kr(16755200);const c=new kr(16711680);const u=new kr(43775);const h=new kr(16777215);const d=new kr(3355443);this.setColors(l,c,u,h,d)}setColors(e,t,n,i,r){const s=this.geometry;const a=s.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b);a.setXYZ(1,e.r,e.g,e.b);a.setXYZ(2,e.r,e.g,e.b);a.setXYZ(3,e.r,e.g,e.b);a.setXYZ(4,e.r,e.g,e.b);a.setXYZ(5,e.r,e.g,e.b);a.setXYZ(6,e.r,e.g,e.b);a.setXYZ(7,e.r,e.g,e.b);a.setXYZ(8,e.r,e.g,e.b);a.setXYZ(9,e.r,e.g,e.b);a.setXYZ(10,e.r,e.g,e.b);a.setXYZ(11,e.r,e.g,e.b);a.setXYZ(12,e.r,e.g,e.b);a.setXYZ(13,e.r,e.g,e.b);a.setXYZ(14,e.r,e.g,e.b);a.setXYZ(15,e.r,e.g,e.b);a.setXYZ(16,e.r,e.g,e.b);a.setXYZ(17,e.r,e.g,e.b);a.setXYZ(18,e.r,e.g,e.b);a.setXYZ(19,e.r,e.g,e.b);a.setXYZ(20,e.r,e.g,e.b);a.setXYZ(21,e.r,e.g,e.b);a.setXYZ(22,e.r,e.g,e.b);a.setXYZ(23,e.r,e.g,e.b);a.setXYZ(24,t.r,t.g,t.b);a.setXYZ(25,t.r,t.g,t.b);a.setXYZ(26,t.r,t.g,t.b);a.setXYZ(27,t.r,t.g,t.b);a.setXYZ(28,t.r,t.g,t.b);a.setXYZ(29,t.r,t.g,t.b);a.setXYZ(30,t.r,t.g,t.b);a.setXYZ(31,t.r,t.g,t.b);a.setXYZ(32,n.r,n.g,n.b);a.setXYZ(33,n.r,n.g,n.b);a.setXYZ(34,n.r,n.g,n.b);a.setXYZ(35,n.r,n.g,n.b);a.setXYZ(36,n.r,n.g,n.b);a.setXYZ(37,n.r,n.g,n.b);a.setXYZ(38,i.r,i.g,i.b);a.setXYZ(39,i.r,i.g,i.b);a.setXYZ(40,r.r,r.g,r.b);a.setXYZ(41,r.r,r.g,r.b);a.setXYZ(42,r.r,r.g,r.b);a.setXYZ(43,r.r,r.g,r.b);a.setXYZ(44,r.r,r.g,r.b);a.setXYZ(45,r.r,r.g,r.b);a.setXYZ(46,r.r,r.g,r.b);a.setXYZ(47,r.r,r.g,r.b);a.setXYZ(48,r.r,r.g,r.b);a.setXYZ(49,r.r,r.g,r.b);a.needsUpdate=true}update(){const e=this.geometry;const t=this.pointMap;const n=1,i=1;m_.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);__("c",t,e,m_,0,0,-1);__("t",t,e,m_,0,0,1);__("n1",t,e,m_,-n,-i,-1);__("n2",t,e,m_,n,-i,-1);__("n3",t,e,m_,-n,i,-1);__("n4",t,e,m_,n,i,-1);__("f1",t,e,m_,-n,-i,1);__("f2",t,e,m_,n,-i,1);__("f3",t,e,m_,-n,i,1);__("f4",t,e,m_,n,i,1);__("u1",t,e,m_,n*.7,i*1.1,-1);__("u2",t,e,m_,-n*.7,i*1.1,-1);__("u3",t,e,m_,0,i*2,-1);__("cf1",t,e,m_,-n,0,1);__("cf2",t,e,m_,n,0,1);__("cf3",t,e,m_,0,-i,1);__("cf4",t,e,m_,0,i,1);__("cn1",t,e,m_,-n,0,-1);__("cn2",t,e,m_,n,0,-1);__("cn3",t,e,m_,0,-i,-1);__("cn4",t,e,m_,0,i,-1);e.getAttribute("position").needsUpdate=true}dispose(){this.geometry.dispose();this.material.dispose()}}function __(e,t,n,i,r,s,a){p_.set(r,s,a).unproject(i);const o=t[e];if(o!==undefined){const e=n.getAttribute("position");for(let t=0,n=o.length;t<n;t++){e.setXYZ(o[t],p_.x,p_.y,p_.z)}}}const x_=new wi;class y_ extends Rd{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const i=new Float32Array(8*3);const r=new us;r.setIndex(new jr(n,1));r.setAttribute("position",new jr(i,3));super(r,new yd({color:t,toneMapped:false}));this.object=e;this.type="BoxHelper";this.matrixAutoUpdate=false;this.update()}update(e){if(e!==undefined){console.warn("THREE.BoxHelper: .update() has no longer arguments.")}if(this.object!==undefined){x_.setFromObject(this.object)}if(x_.isEmpty())return;const t=x_.min;const n=x_.max;const i=this.geometry.attributes.position;const r=i.array;r[0]=n.x;r[1]=n.y;r[2]=n.z;r[3]=t.x;r[4]=n.y;r[5]=n.z;r[6]=t.x;r[7]=t.y;r[8]=n.z;r[9]=n.x;r[10]=t.y;r[11]=n.z;r[12]=n.x;r[13]=n.y;r[14]=t.z;r[15]=t.x;r[16]=n.y;r[17]=t.z;r[18]=t.x;r[19]=t.y;r[20]=t.z;r[21]=n.x;r[22]=t.y;r[23]=t.z;i.needsUpdate=true;this.geometry.computeBoundingSphere()}setFromObject(e){this.object=e;this.update();return this}copy(e,t){super.copy(e,t);this.object=e.object;return this}dispose(){this.geometry.dispose();this.material.dispose()}}class v_ extends Rd{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];const r=new us;r.setIndex(new jr(n,1));r.setAttribute("position",new ts(i,3));super(r,new yd({color:t,toneMapped:false}));this.box=e;this.type="Box3Helper";this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;if(t.isEmpty())return;t.getCenter(this.position);t.getSize(this.scale);this.scale.multiplyScalar(.5);super.updateMatrixWorld(e)}dispose(){this.geometry.dispose();this.material.dispose()}}class M_ extends wd{constructor(e,t=1,n=16776960){const i=n;const r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0];const s=new us;s.setAttribute("position",new ts(r,3));s.computeBoundingSphere();super(s,new yd({color:i,toneMapped:false}));this.type="PlaneHelper";this.plane=e;this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0];const o=new us;o.setAttribute("position",new ts(a,3));o.computeBoundingSphere();this.add(new ws(o,new Vr({color:i,opacity:.2,transparent:true,depthWrite:false,toneMapped:false})))}updateMatrixWorld(e){this.position.set(0,0,0);this.scale.set(.5*this.size,.5*this.size,1);this.lookAt(this.plane.normal);this.translateZ(-this.plane.constant);super.updateMatrixWorld(e)}dispose(){this.geometry.dispose();this.material.dispose();this.children[0].geometry.dispose();this.children[0].material.dispose()}}const b_=new Qn;let S_,T_;class w_ extends Sr{constructor(e=new Qn(0,0,1),t=new Qn(0,0,0),n=1,i=16776960,r=n*.2,s=r*.2){super();this.type="ArrowHelper";if(S_===undefined){S_=new us;S_.setAttribute("position",new ts([0,0,0,0,1,0],3));T_=new Mf(0,.5,1,5,1);T_.translate(0,-.5,0)}this.position.copy(t);this.line=new wd(S_,new yd({color:i,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new ws(T_,new Vr({color:i,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(e);this.setLength(n,r,s)}setDirection(e){if(e.y>.99999){this.quaternion.set(0,0,0,1)}else if(e.y<-.99999){this.quaternion.set(1,0,0,0)}else{b_.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(b_,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1);this.line.updateMatrix();this.cone.scale.set(n,t,n);this.cone.position.y=e;this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e);this.cone.material.color.set(e)}copy(e){super.copy(e,false);this.line.copy(e.line);this.cone.copy(e.cone);return this}dispose(){this.line.geometry.dispose();this.line.material.dispose();this.cone.geometry.dispose();this.cone.material.dispose()}}class E_ extends Rd{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1];const i=new us;i.setAttribute("position",new ts(t,3));i.setAttribute("color",new ts(n,3));const r=new yd({vertexColors:true,toneMapped:false});super(i,r);this.type="AxesHelper"}setColors(e,t,n){const i=new kr;const r=this.geometry.attributes.color.array;i.set(e);i.toArray(r,0);i.toArray(r,3);i.set(t);i.toArray(r,6);i.toArray(r,9);i.set(n);i.toArray(r,12);i.toArray(r,15);this.geometry.attributes.color.needsUpdate=true;return this}dispose(){this.geometry.dispose();this.material.dispose()}}class A_{constructor(){this.type="ShapePath";this.color=new kr;this.subPaths=[];this.currentPath=null}moveTo(e,t){this.currentPath=new _f;this.subPaths.push(this.currentPath);this.currentPath.moveTo(e,t);return this}lineTo(e,t){this.currentPath.lineTo(e,t);return this}quadraticCurveTo(e,t,n,i){this.currentPath.quadraticCurveTo(e,t,n,i);return this}bezierCurveTo(e,t,n,i,r,s){this.currentPath.bezierCurveTo(e,t,n,i,r,s);return this}splineThru(e){this.currentPath.splineThru(e);return this}toShapes(e){function t(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];const r=new Lf;r.curves=i.curves;t.push(r)}return t}function n(e,t){const n=t.length;let i=false;for(let r=n-1,s=0;s<n;r=s++){let n=t[r];let a=t[s];let o=a.x-n.x;let l=a.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0){n=t[s];o=-o;a=t[r];l=-l}if(e.y<n.y||e.y>a.y)continue;if(e.y===n.y){if(e.x===n.x)return true}else{const t=l*(e.x-n.x)-o*(e.y-n.y);if(t===0)return true;if(t<0)continue;i=!i}}else{if(e.y!==n.y)continue;if(a.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=a.x)return true}}return i}const i=cp.isClockWise;const r=this.subPaths;if(r.length===0)return[];let s,a,o;const l=[];if(r.length===1){a=r[0];o=new Lf;o.curves=a.curves;l.push(o);return l}let c=!i(r[0].getPoints());c=e?!c:c;const u=[];const h=[];let d=[];let f=0;let p;h[f]=undefined;d[f]=[];for(let t=0,n=r.length;t<n;t++){a=r[t];p=a.getPoints();s=i(p);s=e?!s:s;if(s){if(!c&&h[f])f++;h[f]={s:new Lf,p:p};h[f].s.curves=a.curves;if(c)f++;d[f]=[]}else{d[f].push({h:a,p:p[0]})}}if(!h[0])return t(r);if(h.length>1){let e=false;let t=0;for(let e=0,t=h.length;e<t;e++){u[e]=[]}for(let i=0,r=h.length;i<r;i++){const r=d[i];for(let s=0;s<r.length;s++){const a=r[s];let o=true;for(let r=0;r<h.length;r++){if(n(a.p,h[r].p)){if(i!==r)t++;if(o){o=false;u[r].push(a)}else{e=true}}}if(o){u[i].push(a)}}}if(t>0&&e===false){d=u}}let m;for(let e=0,t=h.length;e<t;e++){o=h[e].s;l.push(o);m=d[e];for(let e=0,t=m.length;e<t;e++){o.holes.push(m[e].h)}}return l}}const R_=C_();function C_(){const e=new ArrayBuffer(4);const t=new Float32Array(e);const n=new Uint32Array(e);const i=new Uint32Array(512);const r=new Uint32Array(512);for(let e=0;e<256;++e){const t=e-127;if(t<-27){i[e]=0;i[e|256]=32768;r[e]=24;r[e|256]=24}else if(t<-14){i[e]=1024>>-t-14;i[e|256]=1024>>-t-14|32768;r[e]=-t-1;r[e|256]=-t-1}else if(t<=15){i[e]=t+15<<10;i[e|256]=t+15<<10|32768;r[e]=13;r[e|256]=13}else if(t<128){i[e]=31744;i[e|256]=64512;r[e]=24;r[e|256]=24}else{i[e]=31744;i[e|256]=64512;r[e]=13;r[e|256]=13}}const s=new Uint32Array(2048);const a=new Uint32Array(64);const o=new Uint32Array(64);for(let e=1;e<1024;++e){let t=e<<13;let n=0;while((t&8388608)===0){t<<=1;n-=8388608}t&=~8388608;n+=947912704;s[e]=t|n}for(let e=1024;e<2048;++e){s[e]=939524096+(e-1024<<13)}for(let e=1;e<31;++e){a[e]=e<<23}a[31]=1199570944;a[32]=2147483648;for(let e=33;e<63;++e){a[e]=2147483648+(e-32<<23)}a[63]=3347054592;for(let e=1;e<64;++e){if(e!==32){o[e]=1024}}return{floatView:t,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}function L_(e){if(Math.abs(e)>65504)console.warn("THREE.DataUtils.toHalfFloat(): Value out of range.");e=Sn(e,-65504,65504);R_.floatView[0]=e;const t=R_.uint32View[0];const n=t>>23&511;return R_.baseTable[n]+((t&8388607)>>R_.shiftTable[n])}function P_(e){const t=e>>10;R_.uint32View[0]=R_.mantissaTable[R_.offsetTable[t]+(e&1023)]+R_.exponentTable[t];return R_.floatView[0]}const I_={toHalfFloat:L_,fromHalfFloat:P_};class D_ extends Rs{constructor(e,t,n,i,r,s){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.");super(e,t,n,i,r,s)}}class N_ extends yf{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.");super(e,t,n,i)}}class O_ extends vf{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.");super(e,t,n,i)}}class U_ extends bf{constructor(e,t,n,i,r,s,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.");super(e,t,n,i,r,s,a)}}class F_ extends Mf{constructor(e,t,n,i,r,s,a,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.");super(e,t,n,i,r,s,a,o)}}class B_ extends Tf{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.");super(e,t)}}class z_ extends dp{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.");super(e,t)}}class G_ extends mp{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.");super(e,t)}}class k_ extends xf{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.");super(e,t,n,i)}}class H_ extends gp{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.");super(e,t)}}class V_ extends Qs{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.");super(e,t,n,i)}}class W_ extends Sf{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.");super(e,t,n,i)}}class X_ extends _p{constructor(e,t,n,i,r,s){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.");super(e,t,n,i,r,s)}}class j_ extends xp{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.");super(e,t)}}class q_ extends vp{constructor(e,t,n,i,r,s,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.");super(e,t,n,i,r,s,a)}}class Y_ extends Mp{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.");super(e,t)}}class Z_ extends bp{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.");super(e,t,n,i,r)}}class J_ extends Sp{constructor(e,t,n,i,r,s){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.");super(e,t,n,i,r,s)}}class K_ extends Tp{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.");super(e,t,n,i,r)}}if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}}))}if(typeof window!=="undefined"){if(window.__THREE__){console.warn("WARNING: Multiple instances of Three.js being imported.")}else{window.__THREE__=t}}e.ACESFilmicToneMapping=Q;e.AddEquation=b;e.AddOperation=Y;e.AdditiveAnimationBlendMode=Rt;e.AdditiveBlending=x;e.AlphaFormat=Pe;e.AlwaysDepth=z;e.AlwaysStencilFunc=rn;e.AmbientLight=Um;e.AmbientLightProbe=Qm;e.AnimationClip=sm;e.AnimationLoader=mm;e.AnimationMixer=Ng;e.AnimationObjectGroup=Pg;e.AnimationUtils=jp;e.ArcCurve=Wd;e.ArrayCamera=yh;e.ArrowHelper=w_;e.Audio=hg;e.AudioAnalyser=_g;e.AudioContext=Jm;e.AudioListener=ug;e.AudioLoader=Km;e.AxesHelper=E_;e.BackSide=f;e.BasicDepthPacking=Nt;e.BasicShadowMap=l;e.Bone=od;e.BooleanKeyframeTrack=$p;e.Box2=jg;e.Box3=wi;e.Box3Helper=v_;e.BoxBufferGeometry=D_;e.BoxGeometry=Rs;e.BoxHelper=y_;e.BufferAttribute=jr;e.BufferGeometry=us;e.BufferGeometryLoader=Vm;e.ByteType=Me;e.Cache=lm;e.Camera=Fs;e.CameraHelper=g_;e.CanvasTexture=kd;e.CapsuleBufferGeometry=N_;e.CapsuleGeometry=yf;e.CatmullRomCurve3=Jd;e.CineonToneMapping=$;e.CircleBufferGeometry=O_;e.CircleGeometry=vf;e.ClampToEdgeWrapping=le;e.Clock=rg;e.Color=kr;e.ColorKeyframeTrack=Qp;e.ColorManagement=hi;e.CompressedArrayTexture=Gd;e.CompressedTexture=zd;e.CompressedTextureLoader=gm;e.ConeBufferGeometry=U_;e.ConeGeometry=bf;e.CubeCamera=ks;e.CubeReflectionMapping=ne;e.CubeRefractionMapping=ie;e.CubeTexture=Hs;e.CubeTextureLoader=xm;e.CubeUVReflectionMapping=ae;e.CubicBezierCurve=lf;e.CubicBezierCurve3=cf;e.CubicInterpolant=Yp;e.CullFaceBack=s;e.CullFaceFront=a;e.CullFaceFrontBack=o;e.CullFaceNone=r;e.Curve=Hd;e.CurvePath=gf;e.CustomBlending=M;e.CustomToneMapping=ee;e.CylinderBufferGeometry=F_;e.CylinderGeometry=Mf;e.Cylindrical=Wg;e.Data3DTexture=bi;e.DataArrayTexture=vi;e.DataTexture=ld;e.DataTextureLoader=ym;e.DataUtils=I_;e.DecrementStencilOp=jt;e.DecrementWrapStencilOp=Yt;e.DefaultLoadingManager=um;e.DepthFormat=Oe;e.DepthStencilFormat=Ue;e.DepthTexture=Sh;e.DirectionalLight=Om;e.DirectionalLightHelper=f_;e.DiscreteInterpolant=Jp;e.DisplayP3ColorSpace=kt;e.DodecahedronBufferGeometry=B_;e.DodecahedronGeometry=Tf;e.DoubleSide=p;e.DstAlphaFactor=D;e.DstColorFactor=O;e.DynamicCopyUsage=dn;e.DynamicDrawUsage=an;e.DynamicReadUsage=cn;e.EdgesGeometry=Cf;e.EllipseCurve=Vd;e.EqualDepth=H;e.EqualStencilFunc=$t;e.EquirectangularReflectionMapping=re;e.EquirectangularRefractionMapping=se;e.Euler=lr;e.EventDispatcher=_n;e.ExtrudeBufferGeometry=z_;e.ExtrudeGeometry=dp;e.FileLoader=pm;e.Float16BufferAttribute=es;e.Float32BufferAttribute=ts;e.Float64BufferAttribute=ns;e.FloatType=Ee;e.Fog=Ph;e.FogExp2=Lh;e.FramebufferTexture=Bd;e.FrontSide=d;e.Frustum=Js;e.GLBufferAttribute=zg;e.GLSL1=pn;e.GLSL3=mn;e.GreaterDepth=W;e.GreaterEqualDepth=V;e.GreaterEqualStencilFunc=nn;e.GreaterStencilFunc=en;e.GridHelper=l_;e.Group=vh;e.HalfFloatType=Ae;e.HemisphereLight=bm;e.HemisphereLightHelper=o_;e.HemisphereLightProbe=$m;e.IcosahedronBufferGeometry=G_;e.IcosahedronGeometry=mp;e.ImageBitmapLoader=Ym;e.ImageLoader=_m;e.ImageUtils=fi;e.IncrementStencilOp=Xt;e.IncrementWrapStencilOp=qt;e.InstancedBufferAttribute=dd;e.InstancedBufferGeometry=Hm;e.InstancedInterleavedBuffer=Bg;e.InstancedMesh=xd;e.Int16BufferAttribute=Jr;e.Int32BufferAttribute=$r;e.Int8BufferAttribute=qr;e.IntType=Te;e.InterleavedBuffer=Dh;e.InterleavedBufferAttribute=Oh;e.Interpolant=qp;e.InterpolateDiscrete=Mt;e.InterpolateLinear=bt;e.InterpolateSmooth=St;e.InvertStencilOp=Zt;e.KeepStencilOp=Vt;e.KeyframeTrack=Kp;e.LOD=ed;e.LatheBufferGeometry=k_;e.LatheGeometry=xf;e.Layers=cr;e.LessDepth=G;e.LessEqualDepth=k;e.LessEqualStencilFunc=Qt;e.LessStencilFunc=Kt;e.Light=Mm;e.LightProbe=zm;e.Line=wd;e.Line3=Zg;e.LineBasicMaterial=yd;e.LineCurve=uf;e.LineCurve3=hf;e.LineDashedMaterial=Fp;e.LineLoop=Cd;e.LineSegments=Rd;e.LinearEncoding=It;e.LinearFilter=me;e.LinearInterpolant=Zp;e.LinearMipMapLinearFilter=ye;e.LinearMipMapNearestFilter=_e;e.LinearMipmapLinearFilter=xe;e.LinearMipmapNearestFilter=ge;e.LinearSRGBColorSpace=Gt;e.LinearToneMapping=J;e.Loader=hm;e.LoaderUtils=km;e.LoadingManager=cm;e.LoopOnce=xt;e.LoopPingPong=vt;e.LoopRepeat=yt;e.LuminanceAlphaFormat=Ne;e.LuminanceFormat=De;e.MOUSE=n;e.Material=Ur;e.MaterialLoader=Gm;e.MathUtils=Wn;e.Matrix3=jn;e.Matrix4=$i;e.MaxEquation=E;e.Mesh=ws;e.MeshBasicMaterial=Vr;e.MeshDepthMaterial=hh;e.MeshDistanceMaterial=dh;e.MeshLambertMaterial=Op;e.MeshMatcapMaterial=Up;e.MeshNormalMaterial=Np;e.MeshPhongMaterial=Ip;e.MeshPhysicalMaterial=Pp;e.MeshStandardMaterial=Lp;e.MeshToonMaterial=Dp;e.MinEquation=w;e.MirroredRepeatWrapping=ce;e.MixOperation=q;e.MultiplyBlending=v;e.MultiplyOperation=j;e.NearestFilter=ue;e.NearestMipMapLinearFilter=pe;e.NearestMipMapNearestFilter=de;e.NearestMipmapLinearFilter=fe;e.NearestMipmapNearestFilter=he;e.NeverDepth=B;e.NeverStencilFunc=Jt;e.NoBlending=g;e.NoColorSpace=Bt;e.NoToneMapping=Z;e.NormalAnimationBlendMode=At;e.NormalBlending=_;e.NotEqualDepth=X;e.NotEqualStencilFunc=tn;e.NumberKeyframeTrack=em;e.Object3D=Sr;e.ObjectLoader=Wm;e.ObjectSpaceNormalMap=Ft;e.OctahedronBufferGeometry=H_;e.OctahedronGeometry=gp;e.OneFactor=R;e.OneMinusDstAlphaFactor=N;e.OneMinusDstColorFactor=U;e.OneMinusSrcAlphaFactor=I;e.OneMinusSrcColorFactor=L;e.OrthographicCamera=Wl;e.PCFShadowMap=c;e.PCFSoftShadowMap=u;e.PMREMGenerator=ec;e.Path=_f;e.PerspectiveCamera=Bs;e.Plane=qs;e.PlaneBufferGeometry=V_;e.PlaneGeometry=Qs;e.PlaneHelper=M_;e.PointLight=Dm;e.PointLightHelper=i_;e.Points=Od;e.PointsMaterial=Ld;e.PolarGridHelper=c_;e.PolyhedronBufferGeometry=W_;e.PolyhedronGeometry=Sf;e.PositionalAudio=gg;e.PropertyBinding=Lg;e.PropertyMixer=xg;e.QuadraticBezierCurve=df;e.QuadraticBezierCurve3=ff;e.Quaternion=$n;e.QuaternionKeyframeTrack=nm;e.QuaternionLinearInterpolant=tm;e.RED_GREEN_RGTC2_Format=gt;e.RED_RGTC1_Format=pt;e.REVISION=t;e.RGBADepthPacking=Ot;e.RGBAFormat=Ie;e.RGBAIntegerFormat=ke;e.RGBA_ASTC_10x10_Format=ut;e.RGBA_ASTC_10x5_Format=ot;e.RGBA_ASTC_10x6_Format=lt;e.RGBA_ASTC_10x8_Format=ct;e.RGBA_ASTC_12x10_Format=ht;e.RGBA_ASTC_12x12_Format=dt;e.RGBA_ASTC_4x4_Format=Qe;e.RGBA_ASTC_5x4_Format=et;e.RGBA_ASTC_5x5_Format=tt;e.RGBA_ASTC_6x5_Format=nt;e.RGBA_ASTC_6x6_Format=it;e.RGBA_ASTC_8x5_Format=rt;e.RGBA_ASTC_8x6_Format=st;e.RGBA_ASTC_8x8_Format=at;e.RGBA_BPTC_Format=ft;e.RGBA_ETC2_EAC_Format=$e;e.RGBA_PVRTC_2BPPV1_Format=Ze;e.RGBA_PVRTC_4BPPV1_Format=Ye;e.RGBA_S3TC_DXT1_Format=Ve;e.RGBA_S3TC_DXT3_Format=We;e.RGBA_S3TC_DXT5_Format=Xe;e.RGB_ETC1_Format=Je;e.RGB_ETC2_Format=Ke;e.RGB_PVRTC_2BPPV1_Format=qe;e.RGB_PVRTC_4BPPV1_Format=je;e.RGB_S3TC_DXT1_Format=He;e.RGFormat=ze;e.RGIntegerFormat=Ge;e.RawShaderMaterial=Cp;e.Ray=Ki;e.Raycaster=Gg;e.RectAreaLight=Fm;e.RedFormat=Fe;e.RedIntegerFormat=Be;e.ReinhardToneMapping=K;e.RepeatWrapping=oe;e.ReplaceStencilOp=Wt;e.ReverseSubtractEquation=T;e.RingBufferGeometry=X_;e.RingGeometry=_p;e.SIGNED_RED_GREEN_RGTC2_Format=_t;e.SIGNED_RED_RGTC1_Format=mt;e.SRGBColorSpace=zt;e.Scene=Ih;e.ShaderChunk=Nl;e.ShaderLib=Ul;e.ShaderMaterial=Us;e.ShadowMaterial=Rp;e.Shape=Lf;e.ShapeBufferGeometry=j_;e.ShapeGeometry=xp;e.ShapePath=A_;e.ShapeUtils=cp;e.ShortType=be;e.Skeleton=hd;e.SkeletonHelper=t_;e.SkinnedMesh=ad;e.Source=pi;e.Sphere=Vi;e.SphereBufferGeometry=q_;e.SphereGeometry=vp;e.Spherical=Vg;e.SphericalHarmonics3=Bm;e.SplineCurve=pf;e.SpotLight=Rm;e.SpotLightHelper=Kg;e.Sprite=Jh;e.SpriteMaterial=Uh;e.SrcAlphaFactor=P;e.SrcAlphaSaturateFactor=F;e.SrcColorFactor=C;e.StaticCopyUsage=hn;e.StaticDrawUsage=sn;e.StaticReadUsage=ln;e.StereoCamera=ig;e.StreamCopyUsage=fn;e.StreamDrawUsage=on;e.StreamReadUsage=un;e.StringKeyframeTrack=im;e.SubtractEquation=S;e.SubtractiveBlending=y;e.TOUCH=i;e.TangentSpaceNormalMap=Ut;e.TetrahedronBufferGeometry=Y_;e.TetrahedronGeometry=Mp;e.Texture=_i;e.TextureLoader=vm;e.TorusBufferGeometry=Z_;e.TorusGeometry=bp;e.TorusKnotBufferGeometry=J_;e.TorusKnotGeometry=Sp;e.Triangle=Nr;e.TriangleFanDrawMode=Pt;e.TriangleStripDrawMode=Lt;e.TrianglesDrawMode=Ct;e.TubeBufferGeometry=K_;e.TubeGeometry=Tp;e.TwoPassDoubleSide=m;e.UVMapping=te;e.Uint16BufferAttribute=Kr;e.Uint32BufferAttribute=Qr;e.Uint8BufferAttribute=Yr;e.Uint8ClampedBufferAttribute=Zr;e.Uniform=Og;e.UniformsGroup=Fg;e.UniformsLib=Ol;e.UniformsUtils=Ds;e.UnsignedByteType=ve;e.UnsignedInt248Type=Le;e.UnsignedIntType=we;e.UnsignedShort4444Type=Re;e.UnsignedShort5551Type=Ce;e.UnsignedShortType=Se;e.VSMShadowMap=h;e.Vector2=Xn;e.Vector3=Qn;e.Vector4=xi;e.VectorKeyframeTrack=rm;e.VideoTexture=Fd;e.WebGL1Renderer=Ch;e.WebGL3DRenderTarget=Si;e.WebGLArrayRenderTarget=Mi;e.WebGLCubeRenderTarget=Vs;e.WebGLMultipleRenderTargets=Ti;e.WebGLRenderTarget=yi;e.WebGLRenderer=Rh;e.WebGLUtils=xh;e.WireframeGeometry=wp;e.WrapAroundEnding=Et;e.ZeroCurvatureEnding=Tt;e.ZeroFactor=A;e.ZeroSlopeEnding=wt;e.ZeroStencilOp=Ht;e._SRGBAFormat=gn;e.sRGBEncoding=Dt;return e}({});return e});